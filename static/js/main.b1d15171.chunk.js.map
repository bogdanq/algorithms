{"version":3,"sources":["config.js","control-canvas.js","graph.js","model.js","algoritms/bred-first-search.js","algoritms/model.js","algoritms/depth-first-search.js","ui/model.js","canvas.js","config-canvas.js","App.js","index.js"],"names":["cellSize","pageWidth","window","innerWidth","pageHeight","innerHeight","borderSize","colorSchema","borderColor","blockColor","startEndColor","ceilType","START_POSITION","END_POSITION","BARIER","EMPTY","VISITED","getLocalSize","w","h","Math","floor","getGlobalSize","convertLocalPositionToGlobal","_ref","_ref2","Object","slicedToArray","x","y","drawSquare","_ref3","_ref3$color","color","position","context","_convertLocalPosition","_convertLocalPosition2","size","fillStyle","fillRect","getIndexByPosition","_ref4","_ref5","getPositionByIndex","index","canvasControl","Controll","classCallCheck","this","isMouseDown","isMouseMove","listeners","state","lastIndex","canvas","_this","addEventListener","event","filter","userEvent","type","forEach","eventListener","_getLocalSize3","clientX","clientY","getTargetIndex","push","graphControll","Graph","graph","cellCount","siblings","getLeftSibling","getTopSibling","getRightSibling","getDownSibling","item","objectSpread2","_getLocalSize","resetStore","createEvent","resetPath","setGraph","setBarrier","removeBarrierItem","triggerStartPosition","triggerEndPosition","$startEndPosition","createStore","$barrier","on","includes","concat","toConsumableArray","reset","$graph","combine","barrier","startEndPosition","map","clear","_state$startEndPositi","start","end","createGraph","barriers","barrierIndex","updateGraph","setBarrierToGraph","startIndex","setStartPositionToGraph","endIndex","setEndPositionToGraph","restorePath","parent","path","target","unshift","length","watch","algoritmsDomain","createDomain","selectAlgoritm","incrementStep","setVertices","endProcess","$isValidEndProcess","store","$currentAlgoritm","restore","$traversedVertices","payload","$numberOfPasses","onCreateStore","$algoritState","isValidEndProcess","traversedVertices","numberOfPasses","$algoritms","searchFunction","isWork","queue","visited","Map","currentIndex","shift","i","next","vertex","getVertexByIndex","has","canVisitedVertex","set","name","stack","$searchAlgoritm","currentAlgoritm","algoritms","find","algoritm","gameStatus","START","PAUSE","STOP","CLEAR","RESTART","CLEAR_PATH","setGameStatus","$path","$gameState","ref","$isValidGameState","$clearGameState","startGame","guard","source","clearGame","forward","from","to","sample","clock","fn","_graph$startEndPositi","renderBarrier","arguments","undefined","_getPositionByIndex","_getPositionByIndex2","renderCeil","renderForMove","renderForClick","renderLogic","_getLocalSize2","getState","findIndex","renderStart","renderEnd","prev","document","getElementById","getContext","localSize","globalSize","gridData","grid","Path2D","moveTo","lineTo","applyStyles","lineWidth","strokeStyle","buildGrid","render","clearRect","width","height","clearCanvas","setState","renderActionsCeil","stroke","loop","count","animateId","requestAnimationFrame","cancelAnimationFrame","_ref2$path","_ref2$color","beginPath","renderPath","configureCanvas","registerClickEventToCanvas","addMouseMoveEvent","e","s","addMouseUpEvent","addMouseClickEvent","merge","renderLoop","renderCanvas","App","useStore","react_default","a","createElement","className","onClick","key","__webpack_require__","d","__webpack_exports__","model_canVisitedVertex","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.b1d15171.chunk.js","sourcesContent":["export const cellSize = 35;\r\nexport const pageWidth = window.innerWidth;\r\nexport const pageHeight = window.innerHeight;\r\nexport const borderSize = 0.5;\r\nexport const boardLength = pageWidth * pageHeight;\r\nexport const startPosition = 0;\r\nexport const endPosition = 110;\r\n\r\nexport const colorSchema = {\r\n  borderColor: \"#000\",\r\n  blockColor: \"#8080805c\",\r\n  startEndColor: [\"green\", \"red\"],\r\n};\r\n\r\nexport const ceilType = {\r\n  START_POSITION: \"START_POSITION\",\r\n  END_POSITION: \"END_POSITION\",\r\n  BARIER: \"BARIER\",\r\n  EMPTY: \"EMPTY\",\r\n  VISITED: \"VISITED\",\r\n};\r\n\r\nexport function getLocalSize(w, h) {\r\n  return {\r\n    w: Math.floor(w / cellSize),\r\n    h: Math.floor(h / cellSize),\r\n  };\r\n}\r\n\r\nexport function getGlobalSize(w, h) {\r\n  return {\r\n    w: Math.floor(w * cellSize),\r\n    h: Math.floor(h * cellSize),\r\n  };\r\n}\r\n\r\nexport function convertLocalPositionToGlobal([x, y]) {\r\n  return [x * cellSize, y * cellSize];\r\n}\r\n\r\nexport function drawSquare({\r\n  color = \"rgb(152, 251, 152)\",\r\n  position,\r\n  context,\r\n}) {\r\n  const [x, y] = convertLocalPositionToGlobal(position);\r\n  const size = cellSize - borderSize * 2;\r\n\r\n  context.fillStyle = color;\r\n  context.fillRect(x + borderSize * 2, y + borderSize * 2, size, size);\r\n}\r\n\r\nexport function clearCanvas(context, canvas) {\r\n  return context.clearRect(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\nexport function getIndexByPosition([x, y]) {\r\n  const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n  return y * w + x;\r\n}\r\n\r\nexport function getPositionByIndex(index) {\r\n  const { w } = getLocalSize(pageWidth, pageHeight);\r\n  const y = Math.floor(index / w);\r\n  const x = index - y * w;\r\n\r\n  return [x, y];\r\n}\r\n\r\nexport function getTargetIndex(event) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  return index;\r\n}\r\n","import { getTargetIndex } from \"./config\";\r\n\r\nclass Controll {\r\n  constructor() {\r\n    this.isMouseDown = false;\r\n    this.isMouseMove = false;\r\n    this.listeners = [];\r\n    this.state = {};\r\n    this.lastIndex = null;\r\n  }\r\n\r\n  registerClickEventToCanvas(canvas) {\r\n    canvas.addEventListener(\"mousedown\", (event) => {\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"mousedown\")\r\n        .forEach((userEvent) => userEvent.eventListener());\r\n\r\n      this.isMouseDown = true;\r\n      this.isMouseMove = false;\r\n    });\r\n\r\n    canvas.addEventListener(\"mouseup\", (event) => {\r\n      this.isMouseDown = false;\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"mouseup\")\r\n        .forEach((userEvent) => userEvent.eventListener(event, this.state));\r\n    });\r\n\r\n    canvas.addEventListener(\"click\", (event) => {\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"click\")\r\n        .forEach((userEvent) => {\r\n          if (!this.isMouseMove) {\r\n            userEvent.eventListener(event, this.state);\r\n          }\r\n        });\r\n    });\r\n\r\n    canvas.addEventListener(\"mousemove\", (event) => {\r\n      const index = getTargetIndex(event);\r\n\r\n      if (this.isMouseDown && index !== this.lastIndex) {\r\n        this.lastIndex = index;\r\n        this.isMouseMove = true;\r\n        this.listeners\r\n          .filter((userEvent) => userEvent.type === \"mousemove\")\r\n          .forEach((userEvent) =>\r\n            userEvent.eventListener(event, this.state, this.lastIndex)\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  addMouseDownEvent(eventListener) {\r\n    this.listeners.push({ type: \"mousedown\", eventListener });\r\n  }\r\n\r\n  addMouseUpEvent(eventListener) {\r\n    this.listeners.push({ type: \"mouseup\", eventListener });\r\n  }\r\n\r\n  addMouseMoveEvent(eventListener) {\r\n    this.listeners.push({ type: \"mousemove\", eventListener });\r\n  }\r\n\r\n  addMouseClickEvent(eventListener) {\r\n    this.listeners.push({ type: \"click\", eventListener });\r\n  }\r\n\r\n  setState(state) {\r\n    this.state = state;\r\n    return this;\r\n  }\r\n}\r\n\r\nexport const canvasControl = new Controll();\r\n","import { ceilType, pageWidth, getLocalSize, pageHeight } from \"./config\";\r\nimport { setGraph } from \"./model\";\r\n\r\nclass Graph {\r\n  constructor({ w, h }) {\r\n    this.graph = {};\r\n    this.cellCount = w * h;\r\n    this.lastIndex = null;\r\n  }\r\n\r\n  createGraph() {\r\n    for (let index = 0; index < this.cellCount; index++) {\r\n      this.graph[index] = {\r\n        type: ceilType.EMPTY,\r\n        siblings: [\r\n          this.getLeftSibling(index),\r\n          this.getTopSibling(index),\r\n          this.getRightSibling(index),\r\n          this.getDownSibling(index),\r\n        ].filter((item) => typeof item !== \"undefined\"),\r\n      };\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  getVertexByIndex(index) {\r\n    return this.graph[index];\r\n  }\r\n\r\n  updateGraph({ index, type }) {\r\n    if (this.graph[index]) {\r\n      this.graph[index] = { ...this.graph[index], type };\r\n      if (type === ceilType.BARIER) {\r\n        this.graph[index] = { ...this.graph[index], type, siblings: [] };\r\n      }\r\n    }\r\n  }\r\n\r\n  getDownSibling(index) {\r\n    const { w, h } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasDownNeighbour = Math.floor(index / w) < h - 1;\r\n\r\n    if (hasDownNeighbour) {\r\n      return index + w;\r\n    }\r\n  }\r\n\r\n  getTopSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasTopNeighbour = Math.floor(index / w) > 0;\r\n\r\n    if (hasTopNeighbour) {\r\n      return index - w;\r\n    }\r\n  }\r\n\r\n  getRightSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasRightNeighbour = index % w < w - 1;\r\n\r\n    if (hasRightNeighbour) {\r\n      return index + 1;\r\n    }\r\n  }\r\n\r\n  getLeftSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasLeftNeighbour = index % w > 0;\r\n\r\n    if (hasLeftNeighbour) {\r\n      return index - 1;\r\n    }\r\n  }\r\n\r\n  getGraph() {\r\n    return this.graph;\r\n  }\r\n\r\n  clear() {\r\n    this.graph = {};\r\n    return this;\r\n  }\r\n}\r\n\r\nexport const graphControll = new Graph(getLocalSize(pageWidth, pageHeight));\r\n","import { createEvent, createStore, combine } from \"effector\";\r\nimport { startPosition, endPosition, ceilType } from \"./config\";\r\nimport { graphControll } from \"./graph\";\r\n\r\nexport const resetStore = createEvent();\r\nexport const resetPath = createEvent();\r\n\r\nexport const setGraph = createEvent();\r\n\r\nexport const setBarrier = createEvent();\r\nexport const removeBarrierItem = createEvent();\r\n\r\nexport const triggerStartPosition = createEvent();\r\nexport const triggerEndPosition = createEvent();\r\n\r\nexport const $startEndPosition = createStore([startPosition, endPosition]);\r\nexport const $barrier = createStore([]);\r\n\r\n$barrier\r\n  .on(setBarrier, (state, index) => {\r\n    const isFindIndex = state.includes(index);\r\n    return isFindIndex ? state : [...state, index];\r\n  })\r\n  .on(removeBarrierItem, (state, index) =>\r\n    state.filter((item) => item !== index)\r\n  )\r\n  .reset(resetStore);\r\n\r\n$startEndPosition\r\n  .on(triggerStartPosition, (state, index) => [index, state[1]])\r\n  .on(triggerEndPosition, (state, index) => [state[0], index])\r\n  .reset(resetStore);\r\n\r\nfunction setBarrierToGraph(graph, barriers) {\r\n  barriers.forEach((barrierIndex) => {\r\n    graph.updateGraph({ index: barrierIndex, type: ceilType.BARIER });\r\n  });\r\n}\r\n\r\nfunction setStartPositionToGraph(graph, startIndex) {\r\n  graph.updateGraph({ index: startIndex, type: ceilType.START_POSITION });\r\n}\r\n\r\nfunction setEndPositionToGraph(graph, endIndex) {\r\n  graph.updateGraph({ index: endIndex, type: ceilType.END_POSITION });\r\n}\r\n\r\nexport const $graph = combine({\r\n  barrier: $barrier,\r\n  startEndPosition: $startEndPosition,\r\n}).map((state) => {\r\n  graphControll.clear();\r\n  const [start, end] = state.startEndPosition;\r\n\r\n  const graph = graphControll.createGraph();\r\n\r\n  setBarrierToGraph(graph, state.barrier);\r\n  setStartPositionToGraph(graph, start);\r\n  setEndPositionToGraph(graph, end);\r\n\r\n  return { ...state, graph: graph.graph };\r\n});\r\n\r\n$graph.watch(resetPath);\r\n","import {\r\n  setVertices,\r\n  endProcess,\r\n  incrementStep,\r\n  canVisitedVertex,\r\n} from \"../index\";\r\nimport { graphControll } from \"../graph\";\r\nimport { ceilType } from \"../config\";\r\n\r\nexport function restorePath(endIndex, startIndex, parent) {\r\n  const path = [];\r\n  let target = parent[endIndex];\r\n\r\n  while (target && target !== startIndex) {\r\n    path.unshift(target);\r\n    target = parent[target];\r\n  }\r\n\r\n  if (path.length > 0) {\r\n    path.push(endIndex);\r\n  }\r\n\r\n  path.unshift(startIndex);\r\n\r\n  return path;\r\n}\r\n\r\nexport function breadthFirstSearch(startIndex, endIndex, graph) {\r\n  let isWork = true;\r\n  const queue = [startIndex];\r\n  const visited = new Map([[startIndex, true]]);\r\n  const parent = {};\r\n\r\n  while (isWork && queue.length > 0) {\r\n    incrementStep();\r\n    setVertices(queue.map((item) => item));\r\n\r\n    const currentIndex = queue.shift();\r\n\r\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\r\n      const next = graph[currentIndex].siblings[i];\r\n      const vertex = graphControll.getVertexByIndex(next);\r\n\r\n      if (!visited.has(next) && canVisitedVertex(vertex)) {\r\n        queue.push(next);\r\n        visited.set(next, true);\r\n\r\n        parent[next] = currentIndex;\r\n      }\r\n\r\n      if (next === endIndex) {\r\n        isWork = false;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  endProcess();\r\n\r\n  return restorePath(endIndex, startIndex, parent);\r\n}\r\n","import {\r\n  createStore,\r\n  combine,\r\n  createEvent,\r\n  restore,\r\n  createDomain,\r\n} from \"effector\";\r\nimport { breadthFirstSearch } from \"./bred-first-search\";\r\nimport { depthFirstSearch } from \"./depth-first-search\";\r\nimport { setGameStatus, gameStatus, $gameState, clearPath } from \"../ui/model\";\r\nimport { resetPath, resetStore } from \"../model\";\r\nimport { ceilType } from \"../config\";\r\n\r\nconst algoritmsDomain = createDomain();\r\n\r\nexport const selectAlgoritm = createEvent();\r\nexport const incrementStep = createEvent();\r\nexport const setVertices = createEvent();\r\nexport const endProcess = createEvent();\r\n\r\nexport const $isValidEndProcess = algoritmsDomain\r\n  .store(false)\r\n  .on(endProcess, () => true);\r\n\r\nexport const $currentAlgoritm = restore(selectAlgoritm, \"bredth first search\");\r\nexport const $traversedVertices = algoritmsDomain\r\n  .store([])\r\n  .on(setVertices, (state, payload) => {\r\n    return [...state, payload];\r\n  });\r\n\r\nexport const $numberOfPasses = algoritmsDomain\r\n  .store(0)\r\n  .on(incrementStep, (state) => state + 1);\r\n\r\nalgoritmsDomain.onCreateStore((store) => store.reset(resetPath, resetStore));\r\n\r\nexport const $algoritState = combine({\r\n  isValidEndProcess: $isValidEndProcess,\r\n  traversedVertices: $traversedVertices,\r\n  numberOfPasses: $numberOfPasses,\r\n});\r\n\r\nselectAlgoritm.watch(resetPath);\r\n\r\nexport const $algoritms = createStore([\r\n  {\r\n    searchFunction: breadthFirstSearch,\r\n    name: \"bredth first search\",\r\n  },\r\n  {\r\n    searchFunction: depthFirstSearch,\r\n    name: \"depth first search\",\r\n  },\r\n]);\r\n\r\nexport const canVisitedVertex = (vertex) => {\r\n  if (vertex.type !== ceilType.BARIER) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const $searchAlgoritm = combine(\r\n  $currentAlgoritm,\r\n  $algoritms,\r\n  (currentAlgoritm, algoritms) =>\r\n    algoritms.find((algoritm) => algoritm.name === currentAlgoritm)\r\n);\r\n","import { restorePath } from \"./bred-first-search\";\r\nimport { graphControll } from \"../graph\";\r\nimport {\r\n  setVertices,\r\n  endProcess,\r\n  incrementStep,\r\n  canVisitedVertex,\r\n} from \"../index\";\r\n\r\nexport function depthFirstSearch(startIndex, endIndex, graph) {\r\n  let isWork = true;\r\n  const stack = [startIndex];\r\n  const visited = new Map([[startIndex, true]]);\r\n  const parent = {};\r\n\r\n  while (isWork && stack.length > 0) {\r\n    incrementStep();\r\n    setVertices(stack.map((item) => item));\r\n\r\n    const currentIndex = stack.shift();\r\n\r\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\r\n      const next = graph[currentIndex].siblings[i];\r\n      const vertex = graphControll.getVertexByIndex(next);\r\n\r\n      if (!visited.has(next) && canVisitedVertex(vertex)) {\r\n        stack.unshift(next);\r\n        visited.set(next, true);\r\n\r\n        parent[next] = currentIndex;\r\n      }\r\n\r\n      if (next === endIndex) {\r\n        isWork = false;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  endProcess();\r\n  return restorePath(endIndex, startIndex, parent);\r\n}\r\n","import {\r\n  createEvent,\r\n  createStore,\r\n  sample,\r\n  guard,\r\n  restore,\r\n  forward,\r\n  merge,\r\n} from \"effector\";\r\nimport { $graph, resetStore, resetPath } from \"../model\";\r\nimport { breadthFirstSearch } from \"../algoritms/bred-first-search\";\r\nimport { $searchAlgoritm } from \"../algoritms/model\";\r\n\r\nexport const gameStatus = {\r\n  START: \"START\",\r\n  PAUSE: \"PAUSE\",\r\n  STOP: \"STOP\",\r\n  CLEAR: \"CLEAR\",\r\n  RESTART: \"RESTART\",\r\n  CLEAR_PATH: \"CLEAR_PATH\",\r\n};\r\n\r\nexport const setGameStatus = createEvent();\r\n\r\nexport const $path = createStore([]).reset(resetStore, resetPath);\r\n\r\nexport const $gameState = restore(setGameStatus, {\r\n  ref: gameStatus.STOP,\r\n}).reset(resetStore);\r\n\r\nexport const $isValidGameState = $gameState.map(\r\n  (state) => state.ref === gameStatus.START\r\n);\r\n\r\nexport const $clearGameState = $gameState.map(\r\n  (state) => state.ref === gameStatus.CLEAR\r\n);\r\n\r\nexport const startGame = guard({\r\n  source: $gameState,\r\n  filter: $isValidGameState,\r\n});\r\n\r\nconst clearGame = guard({\r\n  source: $gameState,\r\n  filter: $clearGameState,\r\n});\r\n\r\nforward({\r\n  from: clearGame,\r\n  to: resetStore,\r\n});\r\n\r\nsample({\r\n  source: {\r\n    graph: $graph,\r\n    algoritm: $searchAlgoritm,\r\n  },\r\n  clock: startGame,\r\n  target: $path,\r\n  fn: ({ graph, algoritm }) => {\r\n    const [start, end] = graph.startEndPosition;\r\n    resetPath();\r\n    return algoritm.searchFunction(start, end, graph.graph);\r\n  },\r\n});\r\n","import { guard, sample, merge, combine, forward } from \"effector\";\r\nimport {\r\n  colorSchema,\r\n  cellSize,\r\n  pageHeight,\r\n  pageWidth,\r\n  borderSize,\r\n  getLocalSize,\r\n  getGlobalSize,\r\n  drawSquare,\r\n  clearCanvas,\r\n  getPositionByIndex,\r\n  getIndexByPosition,\r\n  ceilType,\r\n  convertLocalPositionToGlobal,\r\n} from \"./config\";\r\nimport { configureCanvas } from \"./config-canvas\";\r\nimport { canvasControl } from \"./control-canvas\";\r\nimport {\r\n  setBarrier,\r\n  removeBarrierItem,\r\n  triggerStartPosition,\r\n  triggerEndPosition,\r\n  $graph,\r\n  resetStore,\r\n  resetPath,\r\n} from \"./model\";\r\n\r\nimport { $path, $isValidGameState } from \"./ui/model\";\r\nimport { $algoritState } from \"./algoritms/model\";\r\n\r\nconst $state = combine($isValidGameState, $graph);\r\n\r\nfunction renderBarrier(barrier, context, color = colorSchema.blockColor) {\r\n  for (let i = 0; i < barrier.length; i++) {\r\n    const [x, y] = getPositionByIndex(barrier[i]);\r\n    drawSquare({\r\n      position: [x, y],\r\n      context,\r\n      color,\r\n    });\r\n  }\r\n}\r\n\r\nfunction renderActionsCeil(startEndPosition, context) {\r\n  for (let i = 0; i < startEndPosition.length; i++) {\r\n    const index = getPositionByIndex(startEndPosition[i]);\r\n    drawSquare({\r\n      position: index,\r\n      context,\r\n      color: colorSchema.startEndColor[i],\r\n    });\r\n  }\r\n}\r\n\r\nfunction renderCeil(event, state) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  const [startIndex, endIndex] = state.startEndPosition;\r\n\r\n  return {\r\n    renderForMove: () => {\r\n      if (index !== startIndex && index !== endIndex) {\r\n        setBarrier(index);\r\n      }\r\n    },\r\n    renderForClick: () => {\r\n      if (index !== startIndex && index !== endIndex) {\r\n        removeBarrierItem(index);\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nfunction renderStart(index, state) {\r\n  const findIndex = state.barrier.includes(index);\r\n  const [, endIndex] = state.startEndPosition;\r\n\r\n  if (!findIndex && index !== endIndex) {\r\n    triggerStartPosition(index);\r\n  }\r\n}\r\n\r\nfunction renderEnd(index, state, lastIndex) {\r\n  const findIndex = state.barrier.includes(index);\r\n  const [startIndex] = state.startEndPosition;\r\n\r\n  if (!findIndex && index !== startIndex) {\r\n    triggerEndPosition(index);\r\n  }\r\n}\r\n\r\nlet type = null;\r\nfunction renderLogic(event) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n  const state = $graph.getState();\r\n\r\n  if (!type) {\r\n    type = state.graph[index].type;\r\n  }\r\n\r\n  switch (type) {\r\n    case ceilType.BARIER:\r\n      return renderCeil(event, state).renderForClick();\r\n    case ceilType.START_POSITION:\r\n      return renderStart(index, state);\r\n    case ceilType.END_POSITION:\r\n      return renderEnd(index, state);\r\n    case ceilType.EMPTY:\r\n      return renderCeil(event, state).renderForMove();\r\n  }\r\n}\r\n\r\nexport function renderCanvas(canvas, context) {\r\n  const localSize = getLocalSize(pageWidth, pageHeight);\r\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\r\n  const gridData = buildGrid(context);\r\n\r\n  configureCanvas(canvas, globalSize);\r\n\r\n  canvasControl.registerClickEventToCanvas(canvas);\r\n  canvasControl.addMouseMoveEvent((e, s) => {\r\n    return renderLogic(e, s);\r\n  });\r\n  canvasControl.addMouseUpEvent(() => (type = null));\r\n  canvasControl.addMouseClickEvent((e, s) => renderCeil(e, s).renderForClick());\r\n\r\n  function render(state) {\r\n    clearCanvas(context, canvas);\r\n    canvasControl.setState(state);\r\n\r\n    renderActionsCeil(state.startEndPosition, context);\r\n    renderBarrier(state.barrier, context);\r\n\r\n    gridData.applyStyles();\r\n    context.stroke(gridData.grid);\r\n  }\r\n\r\n  $graph.watch(render);\r\n\r\n  sample({\r\n    source: $graph,\r\n    clock: merge([resetStore, resetPath]),\r\n  }).watch(render);\r\n\r\n  function loop(state, numberOfPasses, count) {\r\n    if (count < numberOfPasses) {\r\n      renderBarrier(state[count], context, \"#ffff0061\");\r\n      const animateId = requestAnimationFrame(() =>\r\n        loop(state, numberOfPasses, count)\r\n      );\r\n\r\n      resetPath.watch(() => cancelAnimationFrame(animateId));\r\n\r\n      count++;\r\n    } else {\r\n      const path = $path.getState();\r\n      renderPath({\r\n        path,\r\n        context,\r\n      });\r\n    }\r\n  }\r\n  function renderLoop(state, numberOfPasses) {\r\n    let count = 0;\r\n    let animateId = null;\r\n\r\n    loop(state, numberOfPasses, count, animateId);\r\n  }\r\n\r\n  $algoritState.watch(\r\n    ({ isValidEndProcess, traversedVertices, numberOfPasses }) => {\r\n      if (isValidEndProcess) {\r\n        renderLoop(traversedVertices, numberOfPasses);\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\nlet prev = null;\r\nexport function renderPath({ context, path = [], color = \"blue\" }) {\r\n  for (let i = 0; i < path.length; i++) {\r\n    const position = getPositionByIndex(path[i]);\r\n    const [x, y] = convertLocalPositionToGlobal(position);\r\n\r\n    if (prev) {\r\n      context.beginPath();\r\n      context.strokeStyle = color;\r\n      context.lineWidth = 2;\r\n      context.moveTo(prev[0], prev[1]);\r\n      context.lineTo(x + cellSize / 2, y + cellSize / 2);\r\n      context.stroke();\r\n    }\r\n\r\n    prev = [x + cellSize / 2, y + cellSize / 2];\r\n  }\r\n\r\n  prev = null;\r\n}\r\n\r\nfunction buildGrid(context) {\r\n  const grid = new Path2D();\r\n\r\n  const localSize = getLocalSize(pageWidth, pageHeight);\r\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\r\n\r\n  for (let i = 0; i <= localSize.w; i++) {\r\n    grid.moveTo(i * cellSize + borderSize, 0);\r\n    grid.lineTo(i * cellSize + borderSize, globalSize.h);\r\n  }\r\n\r\n  for (let i = 0; i <= localSize.h; i++) {\r\n    grid.moveTo(0, i * cellSize + borderSize);\r\n    grid.lineTo(globalSize.w, i * cellSize + borderSize);\r\n  }\r\n\r\n  return {\r\n    grid,\r\n    applyStyles: () => {\r\n      context.lineWidth = borderSize;\r\n      context.strokeStyle = colorSchema.borderColor;\r\n    },\r\n  };\r\n}\r\n\r\nconst canvas = document.getElementById(\"viewport\");\r\n\r\nif (canvas) {\r\n  const context = canvas.getContext(\"2d\");\r\n\r\n  renderCanvas(canvas, context);\r\n}\r\n","export function configureCanvas(canvas, { w, h }) {\r\n  canvas.height = h;\r\n  canvas.width = w;\r\n}\r\n","import React from \"react\";\r\nimport { useStore } from \"effector-react\";\r\nimport { renderCanvas } from \"./canvas\";\r\nimport { setGameStatus, gameStatus, $gameState } from \"./ui/model\";\r\nimport {\r\n  $algoritms,\r\n  selectAlgoritm,\r\n  $currentAlgoritm,\r\n} from \"./algoritms/model\";\r\n\r\nimport \"./styles.css\";\r\nimport { resetPath } from \"./model\";\r\n\r\nexport default function App() {\r\n  const algoritms = useStore($algoritms);\r\n  const currentAlgoritm = useStore($currentAlgoritm);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"select-bar\">\r\n        <h2 className=\"select-bar_title\">Select algoritm</h2>\r\n        <ul>\r\n          {algoritms.map((algoritm, index) => (\r\n            <li\r\n              onClick={() => selectAlgoritm(algoritm.name)}\r\n              className={currentAlgoritm === algoritm.name ? \"isActive\" : \"\"}\r\n              key={algoritm.name}\r\n            >\r\n              {algoritm.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"btn-wrapper\">\r\n          <button\r\n            className=\"btn\"\r\n            onClick={() => setGameStatus({ ref: gameStatus.START })}\r\n          >\r\n            start\r\n          </button>\r\n          <button className=\"btn\" onClick={resetPath}>\r\n            reset\r\n          </button>\r\n\r\n          <button\r\n            className=\"btn\"\r\n            onClick={() => setGameStatus({ ref: gameStatus.CLEAR })}\r\n          >\r\n            clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nexport * from \"./model\";\r\nexport * from \"./ui/model\";\r\nexport * from \"./algoritms/model\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}