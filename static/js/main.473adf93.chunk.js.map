{"version":3,"sources":["config.js","graph/controller.js","graph/utils.js","graph/animations.js","graph/barrier.js","graph/model.js","game/utils.js","algoritms/utils.js","algoritms/controller.js","algoritms/bred-first-search.js","algoritms/depth-first-search.js","algoritms/dijkstra.js","algoritms/model.js","game/model.js","render/render-path.js","game/animated-vertex.js","game/loop.js","control-canvas.js","render/render-barrier-with-type.js","render/render.js","render/drow-start-end-position.js","canvas.js","render/build-grid.js","config-canvas.js","gui/ui/molecules/modal-wrapper.js","gui/ui/atoms/icon.js","gui/ui/atoms/text.js","gui/ui/atoms/default-button.js","gui/lib/styled-components-layout.js","gui/ui/templates/flex-wrapper.js","gui/ui/atoms/default-switch.js","gui/ui/molecules/settings.js","gui/ui/molecules/info.js","gui/ui/molecules/about-algoritms.js","gui/ui/molecules/information-about-algoritm.js","gui/ui/molecules/select.js","gui/ui/organisms/history.js","gui/ui/organisms/info-block.js","gui/ui/organisms/game-controll-buttons.js","gui/ui/organisms/algoritm-result.js","gui/ui/organisms/code-area/model.js","gui/ui/organisms/code-area/code-string.js","gui/ui/organisms/code-area/index.js","gui/ui/organisms/algoritms.js","gui/ui/organisms/right-side-bar.js","App.js","global-css.js","index.js"],"names":["cellSize","pageWidth","window","innerWidth","pageHeight","innerHeight","borderSize","colorSchema","borderColor","blockColor","startEndColor","ceilType","START_POSITION","END_POSITION","BARIER","EMPTY","WATER","SAND","getLocalSize","w","h","Math","floor","getGlobalSize","convertLocalPositionToGlobal","_ref","_ref2","Object","slicedToArray","x","y","drawSquare","_ref3","_ref3$color","color","position","context","width","_convertLocalPosition","_convertLocalPosition2","size","fillStyle","fillRect","getIndexByPosition","_ref4","_ref5","getPositionByIndex","index","graphControll","Graph","classCallCheck","this","graph","cellCount","lastIndex","canMoveDiagonal","clear","type","siblings","getSiblings","map","item","vertex","undefined","filter","Boolean","newParams","objectWithoutProperties","objectSpread2","left","getLeftSibling","top","getTopSibling","right","getRightSibling","down","getDownSibling","getTopLeftDiagonal","getTopRightDiagonal","getBotRightDiagonal","getBotLeftDiagonal","bot","_getLocalSize","setBarrierToGraph","barriers","forEach","barrier","barrierType","updateGraph","getIndex","weight","setStartPositionToGraph","startIndex","setEndPositionToGraph","endIndex","setBarrierToState","event","state","clientX","clientY","_state$graph$startEnd","startEndPosition","setBarrier","removeBarrierFromState","_getLocalSize2","removeBarrierItem","setStartToStore","findIndex","find","triggerStartPosition","setEndToStore","triggerEndPosition","drawMarkerWithAnimation","params","animateId","_params$width","requestAnimationFrame","_ref6","_ref6$color","_convertLocalPosition3","_convertLocalPosition4","strokeStyle","beginPath","moveTo","lineTo","stroke","drawMark","cancelAnimationFrame","BarierItem","canDrawe","canRemove","createClass","key","value","arguments","length","drawSquareWithAnimation","_params$position","_params$scale","scale","graphDomain","createDomain","resetStore","clearCanvas","changeDirection","setBarrierType","$startEndPosition","store","$canMoveDiagonal","$barrierType","restore","$barriers","on","onCreateStore","reset","removedBarrier","guard","source","sample","clock","fn","watch","remove","concat","toConsumableArray","removed","$graph","combine","_state$startEndPositi","start","end","createGraph","checkGameStatus","target","status","some","filtredFps","_","fps","fpsVariant","formatter","formatWithOptions","locale","ru","canVisitedVertex","restorePath","historyPath","path","lastStep","unshift","removeDoubleVertex","reduce","acc","row","push","el","accRow","includes","getVertexWeight","AlgoritmController","count","processing","dejkstra","visited","updateProcessing","values","breadthFirstSearch","aInfo","prevIndex","isWork","queue","parent","currentIndex","shift","addVertex","i","next","getVertexByIndex","increment","result","getAlgotitmResult","depthFirstSearch","stack","dijkstra","priorityQueue","PriorityQueue","a","b","Map","add","isEmpty","_priorityQueue$poll","poll","currentVertex","sibling","nextWeight","get","set","restoredPath","algoritmsDomain","selectAlgoritm","createEvent","addVisitedVertex","addProcessedVertex","addCustomAlgoritm","$currentAlgoritm","$visitedVertex","$processedVertex","processed","$algoritms","createStore","searchFunction","name","modal","foo","algoritm","$searchAlgoritm","currentAlgoritm","algoritms","setGameStatus","gameStatus","RESET","START","RESTART","PAUSE","RESUME","CLEAR","END_GAME","gameDomain","setTimer","setHistoryGame","recoveryHistoryGame","setCurrentGame","$path","$historyGame","$currentTimer","nextGame","date","Date","$currentGame","$gameState","startGame","resumeGame","endGame","restoredHistoryGame","sampleForHistoryGame","historyGame","game","_graph$startEndPositi","time","performance","now","timeEnd","prev","animatedVisitedVertex","AnimatedVisitedVertex","animationCount","_state$processing","_ref$path","_ref$color","lineWidth","renderPath","_getPositionByIndex","_getPositionByIndex2","_getPositionByIndex3","_getPositionByIndex4","processedVertex","animatedVertexWithArray","animatedVertex","visitedVertex","tickFx","createEffect","use","Promise","rs","setTimeout","createTick","$state","$animationCount","tickWithParams","attach","effect","mapParams","$combineState","done","setVertex","merge","canvasControl","Controll","isMouseDown","isMouseMove","listeners","disabledListeners","_this","disabledListener","includeListener","canvas","_this2","addEventListener","userEvent","eventListener","_getLocalSize3","getTargetIndex","init","Barrier","setBarrierToStateWithType","bind","render","executeLogic","gridData","clearRect","height","clearALlCanvas","setState","drawVisitedVertexWithLoop","drowBarriersWithType","drawVertexWithLoop","drowStartEndPositions","applyStyles","grid","document","getElementById","getContext","localSize","globalSize","Path2D","buildGrid","registerClickEventToCanvas","addMouseMoveEvent","addMouseClickEvent","addMouseUpEvent","configureCanvas","renderCanvas","ModalWrapper","isOpen","onRequestClose","children","react_default","createElement","lib_default","closeTimeoutMS","StyledRootWrapper","onClick","StyledWrapper","StyledInner","e","stopPropagation","CloseModal","ReactModal","setAppElement","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","Icon","icon_templateObject","Text","p","text_templateObject","Button","icon","_ref$size","_ref$variant","variant","style","fontSize","startIcon","WithTag","as","to","props","React","defaultProps","is","prop","FlexContainer","flex_wrapper_templateObject","css","styled_components_layout_templateObject","alignContent","align","basis","grow","shrink","justify","order","padding","maxW","direction","Left","flex_wrapper_templateObject2","Switch","label","_ref$name","rest","cursor","FormControlLabel","control","assign","Settings","_React$useState","useState","_React$useState2","setOpen","Fragment","icon_Icon","index_esm","Info","InfoModal","ColorBlock","info_templateObject","AboutAlgoritms","InfoAboutAlgoritmApi","codeString","_React$useReducer","useReducer","_React$useReducer2","toggle","default_button_Button","Wrapper","href","default_highlight","language","docco","information_about_algoritm_templateObject","information_about_algoritm_templateObject2","information_about_algoritm_templateObject3","SelectBarrierType","useStore","handleChange","useCallback","Select","onChange","MenuItem","History","HistoryIcon","historyCount","fa_index_esm","HistoryList","currentGame","handleChangeItem","HistoryListWrapper","HistoryItem","active","toString","history_templateObject","history_templateObject2","history_templateObject3","history_templateObject4","_templateObject5","info_block_templateObject","InfoDraggable","react_draggable_default","info_block_Wrapper","GameControllButtons","gameState","GrResume","GrPause","GrPlay","GrClear","$graphState","AlgotitmResult","_graphState$timeEnd","_graphState$path","graphState","className","toFixed","handleChangeCode","$code","newAlg","newRe","newCan","newGraph","CodeArea","code","handleChangeAlgoritm","Function","AlgoritmsList","_useStore","algoritms_CustomAlgoritmModal","CustomAlgoritmModal","currentTimer","RightSideBar","borderTop","TextField","parseInt","default_switch_Switch","checked","App","globalCss","global_css_templateObject","GlobalModalStyles","createGlobalStyle","global_css_templateObject2","__webpack_require__","d","__webpack_exports__","utils_canVisitedVertex","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.473adf93.chunk.js","sourcesContent":["export const cellSize = 35;\r\nexport const pageWidth = window.innerWidth;\r\nexport const pageHeight = window.innerHeight;\r\nexport const borderSize = 0.5;\r\nexport const boardLength = pageWidth * pageHeight;\r\nexport const startPosition = 0;\r\nexport const endPosition = 17;\r\n\r\nexport const colorSchema = {\r\n  borderColor: \"#000\",\r\n  blockColor: \"#523509\",\r\n  startEndColor: [\"green\", \"red\"],\r\n};\r\n\r\nexport const ceilType = {\r\n  START_POSITION: \"START_POSITION\",\r\n  END_POSITION: \"END_POSITION\",\r\n  BARIER: \"BARIER\",\r\n  EMPTY: \"EMPTY\",\r\n  WATER: \"WATER\",\r\n  SAND: \"SAND\",\r\n};\r\n\r\nexport function getLocalSize(w, h) {\r\n  return {\r\n    w: Math.floor(w / cellSize),\r\n    h: Math.floor(h / cellSize),\r\n  };\r\n}\r\n\r\nexport function getGlobalSize(w, h) {\r\n  return {\r\n    w: Math.floor(w * cellSize),\r\n    h: Math.floor(h * cellSize),\r\n  };\r\n}\r\n\r\nexport function convertLocalPositionToGlobal([x, y]) {\r\n  return [x * cellSize, y * cellSize];\r\n}\r\n\r\nexport function drawSquare({\r\n  color = \"rgb(152, 251, 152)\",\r\n  position,\r\n  context,\r\n  width,\r\n}) {\r\n  const [x, y] = convertLocalPositionToGlobal(position);\r\n  const size = width || cellSize - borderSize * 2;\r\n\r\n  context.fillStyle = color;\r\n  context.fillRect(x + borderSize * 2, y + borderSize * 2, size, size);\r\n}\r\n\r\nexport function clearALlCanvas(context, canvas) {\r\n  return context.clearRect(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\nexport function getIndexByPosition([x, y]) {\r\n  const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n  return y * w + x;\r\n}\r\n\r\nexport function getPositionByIndex(index) {\r\n  const { w } = getLocalSize(pageWidth, pageHeight);\r\n  const y = Math.floor(index / w);\r\n  const x = index - y * w;\r\n\r\n  return [x, y];\r\n}\r\n\r\nexport function getTargetIndex(event) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  return index;\r\n}\r\n\r\nexport function drawMark({ color = \"#e84a4a\", position, context }) {\r\n  const [x, y] = convertLocalPositionToGlobal(position);\r\n\r\n  context.strokeStyle = color;\r\n\r\n  context.beginPath();\r\n  context.moveTo(x + 10, y + 10);\r\n  context.lineTo(x + cellSize - 10, y + cellSize - 10);\r\n  context.stroke();\r\n\r\n  context.beginPath();\r\n  context.moveTo(x + cellSize - 10, y + 10);\r\n  context.lineTo(x + 10, y + cellSize - 10);\r\n  context.stroke();\r\n}\r\n","import { ceilType, pageWidth, getLocalSize, pageHeight } from \"../config\";\r\n\r\nclass Graph {\r\n  constructor({ w, h }) {\r\n    this.graph = {};\r\n    this.cellCount = w * h;\r\n    this.lastIndex = null;\r\n  }\r\n\r\n  createGraph(canMoveDiagonal) {\r\n    this.clear();\r\n    for (let index = 0; index < this.cellCount; index++) {\r\n      this.graph[index] = {\r\n        type: ceilType.EMPTY,\r\n        siblings: this.getSiblings(index, canMoveDiagonal)\r\n          .map((item) =>\r\n            typeof item !== \"undefined\" ? { vertex: item } : undefined\r\n          )\r\n          .filter(Boolean),\r\n      };\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  getVertexByIndex(index) {\r\n    return this.graph[index];\r\n  }\r\n\r\n  updateGraph({ index, ...newParams }) {\r\n    if (this.graph[index]) {\r\n      this.graph[index] = { ...this.graph[index], ...newParams };\r\n    }\r\n  }\r\n\r\n  getSiblings(index, canMoveDiagonal) {\r\n    const left = this.getLeftSibling(index);\r\n    const top = this.getTopSibling(index);\r\n    const right = this.getRightSibling(index);\r\n    const down = this.getDownSibling(index);\r\n\r\n    if (canMoveDiagonal) {\r\n      const topLeft = this.getTopLeftDiagonal(top, left);\r\n      const topRight = this.getTopRightDiagonal(top, right);\r\n      const botRight = this.getBotRightDiagonal(down, right);\r\n      const botLeft = this.getBotLeftDiagonal(down, left);\r\n\r\n      return [topLeft, top, topRight, right, botRight, down, botLeft, left];\r\n    }\r\n\r\n    return [top, left, down, right];\r\n  }\r\n\r\n  getTopLeftDiagonal(top, left) {\r\n    if (top >= 0 && left >= 0) {\r\n      return top - 1;\r\n    }\r\n  }\r\n\r\n  getTopRightDiagonal(top, right) {\r\n    if (top >= 0 && right >= 0) {\r\n      return top + 1;\r\n    }\r\n  }\r\n\r\n  getBotLeftDiagonal(bot, left) {\r\n    if (bot >= 0 && left >= 0) {\r\n      return bot - 1;\r\n    }\r\n  }\r\n\r\n  getBotRightDiagonal(bot, right) {\r\n    if (bot >= 0 && right) {\r\n      return bot + 1;\r\n    }\r\n  }\r\n\r\n  getBottomDiagonal(down) {\r\n    const left = down - 1;\r\n    const right = down + 1;\r\n\r\n    return [left, right];\r\n  }\r\n\r\n  getDownSibling(index) {\r\n    const { w, h } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasDownNeighbour = Math.floor(index / w) < h - 1;\r\n\r\n    if (hasDownNeighbour) {\r\n      return index + w;\r\n    }\r\n  }\r\n\r\n  getTopSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasTopNeighbour = Math.floor(index / w) > 0;\r\n\r\n    if (hasTopNeighbour) {\r\n      return index - w;\r\n    }\r\n  }\r\n\r\n  getRightSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasRightNeighbour = index % w < w - 1;\r\n\r\n    if (hasRightNeighbour) {\r\n      return index + 1;\r\n    }\r\n  }\r\n\r\n  getLeftSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasLeftNeighbour = index % w > 0;\r\n\r\n    if (hasLeftNeighbour) {\r\n      return index - 1;\r\n    }\r\n  }\r\n\r\n  getGraph() {\r\n    return this.graph;\r\n  }\r\n\r\n  clear() {\r\n    this.graph = {};\r\n    return this;\r\n  }\r\n}\r\n\r\nexport const graphControll = new Graph(getLocalSize(pageWidth, pageHeight));\r\n","import { ceilType, getLocalSize, getIndexByPosition } from \"../config\";\r\nimport {\r\n  removeBarrierItem,\r\n  setBarrier,\r\n  triggerEndPosition,\r\n  triggerStartPosition,\r\n} from \"./model\";\r\n\r\nexport function setBarrierToGraph(graph, barriers) {\r\n  barriers.forEach((barrier) => {\r\n    if (barrier.barrierType === ceilType.BARIER) {\r\n      graph.updateGraph({\r\n        index: barrier.getIndex(),\r\n        type: barrier.barrierType,\r\n        siblings: [],\r\n      });\r\n    }\r\n\r\n    if (barrier.barrierType === ceilType.WATER) {\r\n      graph.updateGraph({\r\n        index: barrier.getIndex(),\r\n        type: barrier.barrierType,\r\n        weight: 10,\r\n      });\r\n    }\r\n\r\n    if (barrier.barrierType === ceilType.SAND) {\r\n      graph.updateGraph({\r\n        index: barrier.getIndex(),\r\n        type: barrier.barrierType,\r\n        weight: 3,\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nexport function setStartPositionToGraph(graph, startIndex) {\r\n  graph.updateGraph({ index: startIndex, type: ceilType.START_POSITION });\r\n}\r\n\r\nexport function setEndPositionToGraph(graph, endIndex) {\r\n  graph.updateGraph({ index: endIndex, type: ceilType.END_POSITION });\r\n}\r\n\r\nexport function setBarrierToState(event, state) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  const {\r\n    graph: {\r\n      startEndPosition: [startIndex, endIndex],\r\n    },\r\n    barrierType,\r\n  } = state;\r\n\r\n  if (index !== startIndex && index !== endIndex) {\r\n    setBarrier({ index, barrierType });\r\n  }\r\n}\r\n\r\nexport function removeBarrierFromState(event) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  removeBarrierItem(index);\r\n}\r\n\r\nexport function setStartToStore(index, { graph }) {\r\n  const findIndex = graph.barrier.find((barrier) => barrier.index === index);\r\n  const [, endIndex] = graph.startEndPosition;\r\n\r\n  if (!findIndex && index !== endIndex) {\r\n    triggerStartPosition(index);\r\n  }\r\n}\r\n\r\nexport function setEndToStore(index, { graph }) {\r\n  const findIndex = graph.barrier.find((barrier) => barrier.index === index);\r\n  const [startIndex] = graph.startEndPosition;\r\n\r\n  if (!findIndex && index !== startIndex) {\r\n    triggerEndPosition(index);\r\n  }\r\n}\r\n","import { drawSquare, drawMark, cellSize } from \"../config\";\r\n\r\nexport function drawSquareWithAnimation(params) {\r\n  let animateId;\r\n  let {\r\n    position: [x, y],\r\n    width,\r\n    scale = 0.3,\r\n  } = params;\r\n\r\n  if (width < cellSize) {\r\n    animateId = requestAnimationFrame(() =>\r\n      drawSquareWithAnimation({\r\n        ...params,\r\n        width,\r\n        scale,\r\n      })\r\n    );\r\n\r\n    drawSquare({\r\n      ...params,\r\n      position: [x + scale, y + scale],\r\n    });\r\n\r\n    if (scale > 0 && width % 5 === 0) {\r\n      scale = scale - 0.1;\r\n    }\r\n\r\n    width++;\r\n  } else {\r\n    cancelAnimationFrame(animateId);\r\n  }\r\n}\r\n\r\nexport function drawMarkerWithAnimation(params) {\r\n  let { width = cellSize - 10 } = params;\r\n  let animateId;\r\n\r\n  if (width < cellSize) {\r\n    animateId = requestAnimationFrame(() =>\r\n      drawMarkerWithAnimation({\r\n        ...params,\r\n        width,\r\n      })\r\n    );\r\n\r\n    drawMark({\r\n      ...params,\r\n      width,\r\n    });\r\n\r\n    width++;\r\n  } else {\r\n    drawSquare({\r\n      ...params,\r\n      color: \"#fff\",\r\n      width: 0,\r\n    });\r\n\r\n    cancelAnimationFrame(animateId);\r\n  }\r\n}\r\n","import { getPositionByIndex, drawSquare, colorSchema } from \"../config\";\r\nimport { drawSquareWithAnimation, drawMarkerWithAnimation } from \"./animations\";\r\n\r\nexport class BarierItem {\r\n  constructor(index, barrierType) {\r\n    this.barrierType = barrierType;\r\n    this.index = index;\r\n    this.canDrawe = false;\r\n    this.context = null;\r\n    this.canRemove = false;\r\n    this.position = false;\r\n  }\r\n\r\n  getBarier() {\r\n    return this;\r\n  }\r\n\r\n  getIndex() {\r\n    return this.index;\r\n  }\r\n\r\n  render(context, color = colorSchema.blockColor) {\r\n    this.context = context;\r\n    this.position = getPositionByIndex(this.index);\r\n\r\n    if (!this.canRemove) {\r\n      if (!this.canDrawe) {\r\n        drawSquareWithAnimation({\r\n          position: this.position,\r\n          context,\r\n          color,\r\n          width: 20,\r\n        });\r\n      } else {\r\n        drawSquare({\r\n          position: this.position,\r\n          context,\r\n          color,\r\n        });\r\n      }\r\n\r\n      this.canDrawe = true;\r\n    }\r\n  }\r\n\r\n  remove() {\r\n    this.canRemove = true;\r\n\r\n    drawMarkerWithAnimation({\r\n      position: this.position,\r\n      context: this.context,\r\n    });\r\n\r\n    this.canRemove = false;\r\n  }\r\n}\r\n","import { combine, createDomain, sample, guard, restore } from \"effector\";\r\nimport { startPosition, endPosition, ceilType } from \"../config\";\r\nimport { graphControll } from \"./controller\";\r\nimport {\r\n  setBarrierToGraph,\r\n  setStartPositionToGraph,\r\n  setEndPositionToGraph,\r\n} from \"./utils\";\r\nimport { BarierItem } from \"./barrier\";\r\n\r\nconst graphDomain = createDomain(\"graph\");\r\n\r\nexport const resetStore = graphDomain.event();\r\nexport const clearCanvas = graphDomain.event();\r\n\r\nexport const changeDirection = graphDomain.event();\r\nexport const setBarrierType = graphDomain.event();\r\nexport const setBarrier = graphDomain.event();\r\nexport const removeBarrierItem = graphDomain.event();\r\n\r\nexport const triggerStartPosition = graphDomain.event();\r\nexport const triggerEndPosition = graphDomain.event();\r\n\r\nexport const $startEndPosition = graphDomain.store([\r\n  startPosition,\r\n  endPosition,\r\n]);\r\n\r\nexport const $canMoveDiagonal = graphDomain.store(false);\r\n\r\nexport const $barrierType = restore(setBarrierType, ceilType.BARIER);\r\n\r\nexport const $barriers = graphDomain.store([]);\r\n\r\n$canMoveDiagonal.on(changeDirection, (state) => !state);\r\n\r\ngraphDomain.onCreateStore((store) => store.reset(resetStore));\r\n\r\nexport const removedBarrier = guard({\r\n  source: sample({\r\n    source: $barriers,\r\n    clock: removeBarrierItem,\r\n    fn: (state, index) => state.find((item) => item.getIndex() === index),\r\n  }),\r\n  filter: Boolean,\r\n});\r\n\r\nremovedBarrier.watch((item) => item.remove());\r\n\r\n$barriers\r\n  .on(setBarrier, (state, { index, barrierType }) => {\r\n    const barrier = new BarierItem(index, barrierType);\r\n\r\n    const isFindIndex = state.find((item) => item.getIndex() === index);\r\n\r\n    return isFindIndex ? state : [...state, barrier];\r\n  })\r\n  .on(removedBarrier, (state, removed) =>\r\n    state.filter((item) => item !== removed)\r\n  );\r\n\r\n$startEndPosition\r\n  .on(triggerStartPosition, (state, index) => [index, state[1]])\r\n  .on(triggerEndPosition, (state, index) => [state[0], index]);\r\n\r\nexport const $graph = combine({\r\n  barrier: $barriers,\r\n  barrierType: $barrierType,\r\n  startEndPosition: $startEndPosition,\r\n  canMoveDiagonal: $canMoveDiagonal,\r\n}).map((state) => {\r\n  const [start, end] = state.startEndPosition;\r\n\r\n  const graph = graphControll.createGraph(state.canMoveDiagonal);\r\n\r\n  setBarrierToGraph(graph, state.barrier);\r\n\r\n  setStartPositionToGraph(graph, start);\r\n  setEndPositionToGraph(graph, end);\r\n\r\n  return { ...state, graph: graph.graph };\r\n});\r\n","import { ru } from \"date-fns/locale\";\r\nimport { formatWithOptions } from \"date-fns/fp\";\r\n\r\nexport function checkGameStatus(target, status) {\r\n  return status.some((item) => target === item);\r\n}\r\n\r\nexport function filtredFps(_, fps) {\r\n  const fpsVariant = {\r\n    min: 1,\r\n    max: 30,\r\n  };\r\n\r\n  if (fps < fpsVariant.min) {\r\n    return fpsVariant.min;\r\n  }\r\n  if (fps >= fpsVariant.max) {\r\n    return fpsVariant.max;\r\n  }\r\n  return fps;\r\n}\r\n\r\nexport const formatter = formatWithOptions(\r\n  { locale: ru },\r\n  \" dd-MM-yyyy | HH:mm:ss\"\r\n);\r\n","import { ceilType } from \"../config\";\r\n\r\nexport const canVisitedVertex = (vertex) => {\r\n  if (vertex.type !== ceilType.BARIER) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport function restorePath(endIndex, startIndex, historyPath) {\r\n  const path = [endIndex];\r\n  let lastStep = endIndex;\r\n\r\n  while (lastStep && lastStep !== startIndex) {\r\n    path.unshift(historyPath[lastStep]);\r\n    lastStep = historyPath[lastStep];\r\n  }\r\n\r\n  return path;\r\n}\r\n\r\nexport function removeDoubleVertex(target) {\r\n  return target.reduce((acc, row) => {\r\n    acc.push(row.filter((el) => !acc.some((accRow) => accRow.includes(el))));\r\n    return acc;\r\n  }, []);\r\n}\r\n\r\nexport function getVertexWeight(vertex) {\r\n  if (vertex.weight) {\r\n    return vertex.weight;\r\n  }\r\n\r\n  return 1;\r\n}\r\n","export class AlgoritmController {\r\n  constructor(startIndex, endIndex) {\r\n    this.count = 0;\r\n    this.processing = [];\r\n    this.dejkstra = [];\r\n    this.visited = [];\r\n    this.startIndex = startIndex;\r\n    this.endIndex = endIndex;\r\n  }\r\n\r\n  increment() {\r\n    this.count++;\r\n  }\r\n\r\n  addVertex({ vertex, siblings, processing }, visited) {\r\n    const updateProcessing = {\r\n      vertex,\r\n      siblings: ((processing && Object.values(processing)) || siblings).map(\r\n        (item) => item.vertex\r\n      ),\r\n    };\r\n    this.processing.push(updateProcessing);\r\n    this.visited.push(visited);\r\n  }\r\n\r\n  getAlgotitmResult() {\r\n    return this;\r\n  }\r\n}\r\n","import { graphControll } from \"../graph\";\r\nimport { canVisitedVertex, restorePath } from \"./utils\";\r\nimport { AlgoritmController } from \"./controller\";\r\n\r\nexport function breadthFirstSearch(startIndex, endIndex, graph) {\r\n  const aInfo = new AlgoritmController(startIndex, endIndex);\r\n  let prevIndex = null;\r\n  let isWork = true;\r\n  const queue = [startIndex];\r\n  const visited = [startIndex];\r\n  const parent = {};\r\n\r\n  while (isWork && queue.length > 0) {\r\n    const currentIndex = queue.shift();\r\n\r\n    aInfo.addVertex(\r\n      {\r\n        vertex: currentIndex,\r\n        siblings: graph[currentIndex].siblings,\r\n      },\r\n      prevIndex\r\n    );\r\n\r\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\r\n      const next = graph[currentIndex].siblings[i];\r\n\r\n      const vertex = graphControll.getVertexByIndex(next.vertex);\r\n\r\n      if (!visited.includes(next.vertex) && canVisitedVertex(vertex)) {\r\n        queue.push(next.vertex);\r\n        visited.push(next.vertex);\r\n\r\n        parent[next.vertex] = currentIndex;\r\n        aInfo.increment();\r\n      }\r\n\r\n      if (next.vertex === endIndex) {\r\n        isWork = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    prevIndex = currentIndex;\r\n  }\r\n\r\n  const result = aInfo.getAlgotitmResult();\r\n  const path = restorePath(endIndex, startIndex, parent);\r\n\r\n  return {\r\n    path,\r\n    ...result,\r\n  };\r\n}\r\n","import { graphControll } from \"../graph\";\r\nimport { canVisitedVertex, restorePath } from \"./utils\";\r\nimport { AlgoritmController } from \"./controller\";\r\n\r\nexport function depthFirstSearch(startIndex, endIndex, graph) {\r\n  const aInfo = new AlgoritmController(startIndex, endIndex);\r\n\r\n  let isWork = true;\r\n  const stack = [startIndex];\r\n  const visited = [];\r\n  const parent = {};\r\n  let prevIndex = null;\r\n\r\n  while (isWork && stack.length > 0) {\r\n    const currentIndex = stack.shift();\r\n\r\n    aInfo.addVertex(\r\n      {\r\n        vertex: currentIndex,\r\n        siblings: graph[currentIndex].siblings,\r\n      },\r\n      prevIndex\r\n    );\r\n\r\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\r\n      const next = graph[currentIndex].siblings[i];\r\n      const vertex = graphControll.getVertexByIndex(next.vertex);\r\n\r\n      if (!visited.includes(next.vertex) && canVisitedVertex(vertex)) {\r\n        stack.unshift(next.vertex);\r\n        visited.push(next.vertex);\r\n\r\n        parent[next.vertex] = currentIndex;\r\n        aInfo.increment();\r\n      }\r\n\r\n      if (next.vertex === endIndex) {\r\n        isWork = false;\r\n        break;\r\n      }\r\n    }\r\n    prevIndex = currentIndex;\r\n  }\r\n\r\n  const result = aInfo.getAlgotitmResult();\r\n  const path = restorePath(endIndex, startIndex, parent);\r\n\r\n  return {\r\n    path,\r\n    ...result,\r\n  };\r\n}\r\n","import PriorityQueue from \"fastpriorityqueue\";\r\nimport { graphControll } from \"../graph\";\r\nimport { canVisitedVertex, restorePath, getVertexWeight } from \"./utils\";\r\nimport { AlgoritmController } from \"./controller\";\r\n\r\nexport function dijkstra(startIndex, endIndex, graph) {\r\n  const aInfo = new AlgoritmController(startIndex, endIndex);\r\n  let prevIndex = null;\r\n  const priorityQueue = new PriorityQueue((a, b) => a[1] < b[1]);\r\n  const visited = new Map([[startIndex, 0]]); // помещать сюда вершину из очереди\r\n  const path = {};\r\n  let isWork = true;\r\n\r\n  priorityQueue.add([startIndex, 0]);\r\n\r\n  while (isWork && !priorityQueue.isEmpty()) {\r\n    const [currentIndex] = priorityQueue.poll();\r\n    const currentVertex = graph[currentIndex];\r\n\r\n    if (currentIndex === endIndex) {\r\n      isWork = false;\r\n      break;\r\n    }\r\n\r\n    aInfo.addVertex(\r\n      {\r\n        vertex: currentIndex,\r\n        siblings: graph[currentIndex].siblings,\r\n      },\r\n      prevIndex\r\n    );\r\n\r\n    // Получить текущую вершину из очереди и получить ее соседей\r\n\r\n    // пройтипо всем соседям текущей вершины, вычислить вес, указать предка\r\n    for (let i = 0; i < currentVertex.siblings.length; i++) {\r\n      // сосед, находящийся в обработке у текущей вершины\r\n      const sibling = currentVertex.siblings[i];\r\n      const vertex = graphControll.getVertexByIndex(sibling.vertex);\r\n\r\n      if (vertex && canVisitedVertex(vertex)) {\r\n        const nextWeight = visited.get(currentIndex) + getVertexWeight(vertex);\r\n\r\n        const weightIsLower =\r\n          visited.get(sibling.vertex) === undefined ||\r\n          nextWeight < visited.get(sibling.vertex);\r\n\r\n        // вычислить вес соседа, сравнив с прошлым весом, если веса прошлого нет, значит он бесконечность\r\n\r\n        // Положить ребро в просмотренные, с выполненными вычислениями\r\n        if (weightIsLower) {\r\n          priorityQueue.add([sibling.vertex, nextWeight]);\r\n          path[sibling.vertex] = currentIndex;\r\n          visited.set(sibling.vertex, nextWeight);\r\n          aInfo.increment();\r\n        }\r\n      }\r\n    }\r\n\r\n    prevIndex = currentIndex;\r\n  }\r\n\r\n  const restoredPath = restorePath(endIndex, startIndex, path);\r\n  const result = aInfo.getAlgotitmResult();\r\n\r\n  return {\r\n    ...result,\r\n    path: restoredPath,\r\n  };\r\n}\r\n","import {\r\n  createStore,\r\n  combine,\r\n  createEvent,\r\n  restore,\r\n  createDomain,\r\n} from \"effector\";\r\nimport { breadthFirstSearch } from \"./bred-first-search\";\r\nimport { depthFirstSearch } from \"./depth-first-search\";\r\nimport { dijkstra } from \"./dijkstra\";\r\nimport { clearCanvas, resetStore } from \"../graph\";\r\nimport { setGameStatus, gameStatus } from \"../game\";\r\n\r\nconst algoritmsDomain = createDomain();\r\n\r\nexport const selectAlgoritm = createEvent();\r\nexport const addVisitedVertex = createEvent();\r\nexport const addProcessedVertex = createEvent();\r\nexport const addCustomAlgoritm = createEvent();\r\n\r\nexport const $currentAlgoritm = restore(selectAlgoritm, \"bredth first search\");\r\nexport const $visitedVertex = algoritmsDomain.store([]);\r\nexport const $processedVertex = algoritmsDomain.store({\r\n  vertex: null,\r\n  siblings: [],\r\n});\r\n\r\n$visitedVertex.on(addVisitedVertex, (state, vertex) => [...state, vertex]);\r\n$processedVertex.on(addProcessedVertex, (_, processed) => processed);\r\n\r\nexport const $algoritms = createStore([\r\n  {\r\n    searchFunction: breadthFirstSearch,\r\n    name: \"bredth first search\",\r\n  },\r\n  {\r\n    searchFunction: depthFirstSearch,\r\n    name: \"depth first search\",\r\n  },\r\n  {\r\n    searchFunction: dijkstra,\r\n    name: \"dijkstra\",\r\n  },\r\n  {\r\n    searchFunction: null,\r\n    name: \"custom function\",\r\n    modal: true,\r\n  },\r\n]).on(addCustomAlgoritm, (state, foo) =>\r\n  state.map((algoritm) =>\r\n    algoritm.name === \"custom function\"\r\n      ? { ...algoritm, searchFunction: foo }\r\n      : algoritm\r\n  )\r\n);\r\n\r\nexport const $searchAlgoritm = combine(\r\n  $currentAlgoritm,\r\n  $algoritms,\r\n  (currentAlgoritm, algoritms) =>\r\n    algoritms.find((algoritm) => algoritm.name === currentAlgoritm)\r\n);\r\n\r\nalgoritmsDomain.onCreateStore((store) => store.reset(clearCanvas, resetStore));\r\n\r\nselectAlgoritm.watch(() => setGameStatus(gameStatus.RESET));\r\n","import { sample, guard, restore, createDomain } from \"effector\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  $graph,\r\n  resetStore,\r\n  clearCanvas,\r\n  $barriers,\r\n  $startEndPosition,\r\n} from \"../graph\";\r\nimport { $searchAlgoritm } from \"../algoritms/model\";\r\nimport { filtredFps, formatter } from \"./utils\";\r\n\r\nexport const gameStatus = {\r\n  START: \"START\",\r\n  RESTART: \"RESTART\",\r\n  PAUSE: \"PAUSE\",\r\n  RESUME: \"RESUME\",\r\n  CLEAR: \"CLEAR\",\r\n  END_GAME: \"END_GAME\",\r\n  RESET: \"RESET\",\r\n};\r\n\r\nconst gameDomain = createDomain(\"game\");\r\n\r\nexport const setGameStatus = gameDomain.event();\r\nexport const setTimer = gameDomain.event();\r\nexport const setHistoryGame = gameDomain.event();\r\nexport const recoveryHistoryGame = gameDomain.event();\r\nexport const setCurrentGame = gameDomain.event();\r\n\r\nexport const $path = gameDomain.store({}).reset(resetStore, clearCanvas);\r\nexport const $historyGame = gameDomain.store([]);\r\nexport const $currentTimer = gameDomain.store(15).on(setTimer, filtredFps);\r\n\r\n$historyGame.on(setHistoryGame, (state, { barrier, startEndPosition }) => {\r\n  const nextGame = {\r\n    barrier,\r\n    startEndPosition,\r\n    date: formatter(new Date()),\r\n  };\r\n  const findedGame = _.find(state, nextGame);\r\n\r\n  return findedGame ? state : [...state, nextGame];\r\n});\r\n\r\nexport const $currentGame = restore(setCurrentGame, null).reset(resetStore);\r\n\r\nexport const $gameState = restore(setGameStatus, gameStatus.RESET).reset(\r\n  resetStore\r\n);\r\n\r\nexport const startGame = guard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.START),\r\n});\r\n\r\nexport const resumeGame = guard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.RESUME),\r\n});\r\n\r\nexport const endGame = guard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.END_GAME),\r\n});\r\n\r\nconst restoredHistoryGame = guard({\r\n  source: recoveryHistoryGame,\r\n  filter: $gameState.map(\r\n    (state) => state === gameStatus.END_GAME || state === gameStatus.RESET\r\n  ),\r\n});\r\n\r\nguard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.CLEAR),\r\n  target: resetStore,\r\n});\r\n\r\nguard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.START),\r\n  target: clearCanvas,\r\n});\r\n\r\nsample({\r\n  source: $graph,\r\n  clock: endGame,\r\n  target: setHistoryGame,\r\n});\r\n\r\nsample({\r\n  source: {\r\n    graph: $graph,\r\n    algoritm: $searchAlgoritm,\r\n  },\r\n  clock: startGame,\r\n  target: $path,\r\n  fn: ({ graph, algoritm }) => {\r\n    const [start, end] = graph.startEndPosition;\r\n\r\n    const time = window.performance.now();\r\n    const result = algoritm.searchFunction(start, end, graph.graph);\r\n    const timeEnd = window.performance.now() - time;\r\n\r\n    return {\r\n      ...result,\r\n      timeEnd,\r\n    };\r\n  },\r\n});\r\n\r\nsampleForHistoryGame($barriers, \"barrier\");\r\nsampleForHistoryGame($startEndPosition, \"startEndPosition\");\r\nsampleForHistoryGame($currentGame, \"date\");\r\n\r\nfunction sampleForHistoryGame(target, key) {\r\n  return sample({\r\n    source: $historyGame,\r\n    clock: restoredHistoryGame,\r\n    target,\r\n    fn: (historyGame, params) => {\r\n      const findedGame = historyGame.find((game) => game.date === params);\r\n\r\n      return findedGame[key];\r\n    },\r\n  });\r\n}\r\n","import {\r\n  getPositionByIndex,\r\n  convertLocalPositionToGlobal,\r\n  cellSize,\r\n} from \"../config\";\r\n\r\nlet prev = null;\r\nexport function renderPath({ context, path = [], color = \"green\" }) {\r\n  for (let i = 0; i < path.length; i++) {\r\n    const position = getPositionByIndex(path[i]);\r\n    const [x, y] = convertLocalPositionToGlobal(position);\r\n\r\n    if (prev) {\r\n      context.beginPath();\r\n      context.strokeStyle = color;\r\n      context.lineWidth = 2;\r\n      context.moveTo(prev[0], prev[1]);\r\n      context.lineTo(x + cellSize / 2, y + cellSize / 2);\r\n      context.stroke();\r\n    }\r\n\r\n    prev = [x + cellSize / 2, y + cellSize / 2];\r\n  }\r\n\r\n  prev = null;\r\n}\r\n","import { addProcessedVertex, addVisitedVertex } from \"../algoritms\";\r\nimport { setGameStatus, gameStatus } from \"./model\";\r\nimport { renderPath } from \"../render/render-path\";\r\nimport { getPositionByIndex, drawSquare } from \"../config\";\r\n\r\nclass AnimatedVisitedVertex {\r\n  constructor() {\r\n    this.context = null;\r\n  }\r\n\r\n  setVertex({ animationCount, state }, context) {\r\n    if (!this.context) {\r\n      this.context = context;\r\n    }\r\n\r\n    const { processing = [] } = state;\r\n\r\n    if (animationCount < processing.length) {\r\n      addProcessedVertex(processing[animationCount]);\r\n\r\n      if (processing[animationCount - 1]) {\r\n        addVisitedVertex(processing[animationCount - 1].vertex);\r\n      }\r\n    } else {\r\n      setGameStatus(gameStatus.END_GAME);\r\n\r\n      renderPath({\r\n        path: state.path,\r\n        context,\r\n      });\r\n    }\r\n  }\r\n\r\n  animatedVertexWithArray(barriers, context, color = \"#000\") {\r\n    for (let i = 0; i < barriers.length; i++) {\r\n      const [x, y] = getPositionByIndex(barriers[i]);\r\n\r\n      drawSquare({\r\n        position: [x, y],\r\n        context,\r\n        color,\r\n      });\r\n    }\r\n  }\r\n\r\n  animatedVertex(barrier, context, color = \"#000\") {\r\n    if (barrier) {\r\n      const [x, y] = getPositionByIndex(barrier);\r\n\r\n      drawSquare({\r\n        position: [x, y],\r\n        context,\r\n        color,\r\n      });\r\n    }\r\n  }\r\n\r\n  drawVertexWithLoop(processedVertex) {\r\n    this.animatedVertexWithArray(\r\n      processedVertex.siblings,\r\n      this.context,\r\n      \"#d2ef99\"\r\n    );\r\n    this.animatedVertex(processedVertex.vertex, this.context, \"#f3fc23\");\r\n  }\r\n\r\n  drawVisitedVertexWithLoop(visitedVertex) {\r\n    this.animatedVertexWithArray(visitedVertex, this.context, \"#00bcd4\");\r\n  }\r\n}\r\n\r\nexport const animatedVisitedVertex = new AnimatedVisitedVertex();\r\n","import {\r\n  createEffect,\r\n  attach,\r\n  createStore,\r\n  sample,\r\n  guard,\r\n  combine,\r\n  merge,\r\n} from \"effector\";\r\nimport { clearCanvas, resetStore } from \"../graph\";\r\nimport { checkGameStatus } from \"./utils\";\r\nimport {\r\n  gameStatus,\r\n  $gameState,\r\n  $currentTimer,\r\n  startGame,\r\n  resumeGame,\r\n} from \"./model\";\r\nimport { animatedVisitedVertex } from \"./animated-vertex\";\r\n\r\nconst tickFx = createEffect().use(\r\n  (fps) => new Promise((rs) => setTimeout(rs, 1000 / (fps * 2)))\r\n);\r\n\r\nexport function createTick($state, context) {\r\n  const $animationCount = createStore(0).reset(clearCanvas, resetStore);\r\n\r\n  const tickWithParams = attach({\r\n    effect: tickFx,\r\n    source: $currentTimer,\r\n    mapParams: (_, fps) => fps,\r\n  });\r\n\r\n  const $combineState = combine(\r\n    $state,\r\n    $animationCount,\r\n    (state, animationCount) => ({ state, animationCount })\r\n  );\r\n\r\n  $animationCount.on(tickWithParams.done, (state) => state + 1);\r\n\r\n  sample($combineState, tickWithParams).watch((state) => {\r\n    animatedVisitedVertex.setVertex(state, context);\r\n  });\r\n\r\n  guard({\r\n    source: merge([startGame, resumeGame, tickWithParams.done]),\r\n    filter: $gameState.map((state) =>\r\n      checkGameStatus(state, [gameStatus.RESUME, gameStatus.START])\r\n    ),\r\n    target: tickWithParams,\r\n  });\r\n}\r\n","import { getTargetIndex } from \"./config\";\r\nimport { $gameState, gameStatus, checkGameStatus } from \"./game\";\r\n\r\nclass Controll {\r\n  constructor() {\r\n    this.isMouseDown = false;\r\n    this.isMouseMove = false;\r\n    this.listeners = [];\r\n    this.state = {};\r\n    this.lastIndex = null;\r\n    this.disabledListeners = [];\r\n  }\r\n\r\n  init() {\r\n    $gameState.watch((state) => {\r\n      if (\r\n        checkGameStatus(state, [\r\n          gameStatus.START,\r\n          gameStatus.PAUSE,\r\n          gameStatus.RESUME,\r\n        ])\r\n      ) {\r\n        this.disabledListener();\r\n      } else {\r\n        this.includeListener();\r\n      }\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  registerClickEventToCanvas(canvas) {\r\n    canvas.addEventListener(\"mousedown\", (event) => {\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"mousedown\")\r\n        .forEach((userEvent) => userEvent.eventListener());\r\n\r\n      this.isMouseDown = true;\r\n      this.isMouseMove = false;\r\n    });\r\n\r\n    canvas.addEventListener(\"mouseup\", (event) => {\r\n      this.isMouseDown = false;\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"mouseup\")\r\n        .forEach((userEvent) => userEvent.eventListener(event, this.state));\r\n    });\r\n\r\n    canvas.addEventListener(\"click\", (event) => {\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"click\")\r\n        .forEach((userEvent) => {\r\n          if (!this.isMouseMove) {\r\n            userEvent.eventListener(event, this.state);\r\n          }\r\n        });\r\n    });\r\n\r\n    canvas.addEventListener(\"mousemove\", (event) => {\r\n      const index = getTargetIndex(event);\r\n\r\n      if (this.isMouseDown && index !== this.lastIndex) {\r\n        this.lastIndex = index;\r\n        this.isMouseMove = true;\r\n        this.listeners\r\n          .filter((userEvent) => userEvent.type === \"mousemove\")\r\n          .forEach((userEvent) =>\r\n            userEvent.eventListener(event, this.state, this.lastIndex)\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  disabledListener() {\r\n    this.clear();\r\n  }\r\n\r\n  includeListener() {\r\n    this.listeners = this.disabledListeners;\r\n  }\r\n\r\n  addMouseDownEvent(eventListener) {\r\n    this.listeners.push({ type: \"mousedown\", eventListener });\r\n  }\r\n\r\n  addMouseUpEvent(eventListener) {\r\n    this.listeners.push({ type: \"mouseup\", eventListener });\r\n  }\r\n\r\n  addMouseMoveEvent(eventListener) {\r\n    this.listeners.push({ type: \"mousemove\", eventListener });\r\n  }\r\n\r\n  addMouseClickEvent(eventListener) {\r\n    this.listeners.push({ type: \"click\", eventListener });\r\n  }\r\n\r\n  setState(state) {\r\n    this.state = state;\r\n\r\n    return this;\r\n  }\r\n\r\n  clear() {\r\n    if (this.listeners.length > 0) {\r\n      this.disabledListeners = this.listeners;\r\n      this.isMouseDown = false;\r\n      this.isMouseMove = false;\r\n      this.listeners = [];\r\n      this.lastIndex = null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const canvasControl = new Controll();\r\ncanvasControl.init();\r\n","import { getLocalSize, getIndexByPosition, ceilType } from \"../config\";\r\nimport {\r\n  removeBarrierFromState,\r\n  setBarrierToState,\r\n  setEndToStore,\r\n  setStartToStore,\r\n} from \"../graph\";\r\n\r\nclass Barrier {\r\n  constructor() {\r\n    this.ceilType = null;\r\n    this.context = null;\r\n    this.setBarrierToStateWithType = this.setBarrierToStateWithType.bind(this);\r\n    this.clear = this.clear.bind(this);\r\n  }\r\n\r\n  setBarrierToStateWithType(event, state) {\r\n    const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n    const index = getIndexByPosition([w, h]);\r\n    const { graph } = state;\r\n\r\n    if (!this.ceilType) {\r\n      this.ceilType = graph.graph[index].type;\r\n    }\r\n\r\n    switch (this.ceilType) {\r\n      case ceilType.BARIER:\r\n        return removeBarrierFromState(event, state);\r\n      case ceilType.WATER:\r\n        return removeBarrierFromState(event, state);\r\n      case ceilType.SAND:\r\n        return removeBarrierFromState(event, state);\r\n      case ceilType.START_POSITION:\r\n        return setStartToStore(index, state);\r\n      case ceilType.END_POSITION:\r\n        return setEndToStore(index, state);\r\n      case ceilType.EMPTY:\r\n        return setBarrierToState(event, state);\r\n    }\r\n  }\r\n\r\n  drowBarriersWithType(barriers, context) {\r\n    for (let i = 0; i < barriers.length; i++) {\r\n      if (barriers[i].barrierType === ceilType.WATER) {\r\n        barriers[i].render(context, \"#86c7e6\");\r\n      }\r\n      if (barriers[i].barrierType === ceilType.SAND) {\r\n        barriers[i].render(context, \"#fae8c2\");\r\n      }\r\n      if (barriers[i].barrierType === ceilType.BARIER) {\r\n        barriers[i].render(context);\r\n      }\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.ceilType = null;\r\n  }\r\n}\r\n\r\nexport const barrier = new Barrier();\r\n","import { clearALlCanvas } from \"../config\";\r\nimport { canvasControl } from \"../control-canvas\";\r\nimport { animatedVisitedVertex } from \"../game/animated-vertex\";\r\nimport { barrier } from \"./render-barrier-with-type\";\r\nimport { drowStartEndPositions } from \"./drow-start-end-position\";\r\n\r\nexport function executeLogic(canvas, context, gridData) {\r\n  return function render({\r\n    graph,\r\n    visitedVertex,\r\n    processedVertex,\r\n    barrierType,\r\n  }) {\r\n    clearALlCanvas(context, canvas);\r\n\r\n    canvasControl.setState({ graph, barrierType });\r\n\r\n    animatedVisitedVertex.drawVisitedVertexWithLoop(visitedVertex);\r\n\r\n    barrier.drowBarriersWithType(graph.barrier, context);\r\n\r\n    animatedVisitedVertex.drawVertexWithLoop(processedVertex);\r\n\r\n    drowStartEndPositions(graph.startEndPosition, context);\r\n\r\n    gridData.applyStyles();\r\n    context.stroke(gridData.grid);\r\n  };\r\n}\r\n","import { colorSchema, getPositionByIndex, drawSquare } from \"../config\";\r\n\r\nexport function drowStartEndPositions(startEndPosition, context) {\r\n  for (let i = 0; i < startEndPosition.length; i++) {\r\n    const index = getPositionByIndex(startEndPosition[i]);\r\n\r\n    drawSquare({\r\n      position: index,\r\n      context,\r\n      color: colorSchema.startEndColor[i],\r\n    });\r\n  }\r\n}\r\n","import { sample, merge, combine } from \"effector\";\r\nimport { pageHeight, pageWidth, getLocalSize, getGlobalSize } from \"./config\";\r\nimport { configureCanvas } from \"./config-canvas\";\r\nimport { canvasControl } from \"./control-canvas\";\r\nimport {\r\n  $graph,\r\n  resetStore,\r\n  clearCanvas,\r\n  $barrierType,\r\n  removeBarrierFromState,\r\n} from \"./graph\";\r\nimport { executeLogic } from \"./render/render\";\r\nimport { $path, createTick } from \"./game\";\r\nimport { $visitedVertex, $processedVertex } from \"./algoritms\";\r\nimport { buildGrid } from \"./render/build-grid\";\r\nimport { barrier } from \"./render/render-barrier-with-type\";\r\n\r\nconst $state = combine({\r\n  visitedVertex: $visitedVertex,\r\n  graph: $graph,\r\n  processedVertex: $processedVertex,\r\n  barrierType: $barrierType,\r\n});\r\n\r\nexport function renderCanvas(canvas, context) {\r\n  const localSize = getLocalSize(pageWidth, pageHeight);\r\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\r\n  const gridData = buildGrid(context);\r\n\r\n  addEventsToCanvas(canvas);\r\n  configureCanvas(canvas, globalSize);\r\n\r\n  const render = executeLogic(canvas, context, gridData);\r\n\r\n  $state.watch(render);\r\n\r\n  sample({\r\n    source: $state,\r\n    clock: merge([resetStore, clearCanvas]),\r\n  }).watch(render);\r\n\r\n  createTick($path, context);\r\n}\r\n\r\nfunction addEventsToCanvas() {\r\n  canvasControl.registerClickEventToCanvas(canvas);\r\n  canvasControl.addMouseMoveEvent(barrier.setBarrierToStateWithType);\r\n  canvasControl.addMouseClickEvent(removeBarrierFromState);\r\n  canvasControl.addMouseUpEvent(barrier.clear);\r\n}\r\n\r\nconst canvas = document.getElementById(\"viewport\");\r\n\r\nif (canvas) {\r\n  const context = canvas.getContext(\"2d\");\r\n\r\n  renderCanvas(canvas, context);\r\n}\r\n","import {\r\n  cellSize,\r\n  colorSchema,\r\n  borderSize,\r\n  getLocalSize,\r\n  getGlobalSize,\r\n  pageHeight,\r\n  pageWidth,\r\n} from \"../config\";\r\n\r\nexport function buildGrid(context) {\r\n  const grid = new Path2D();\r\n\r\n  const localSize = getLocalSize(pageWidth, pageHeight);\r\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\r\n\r\n  for (let i = 0; i <= localSize.w; i++) {\r\n    grid.moveTo(i * cellSize + borderSize, 0);\r\n    grid.lineTo(i * cellSize + borderSize, globalSize.h);\r\n  }\r\n\r\n  for (let i = 0; i <= localSize.h; i++) {\r\n    grid.moveTo(0, i * cellSize + borderSize);\r\n    grid.lineTo(globalSize.w, i * cellSize + borderSize);\r\n  }\r\n\r\n  return {\r\n    grid,\r\n    applyStyles: () => {\r\n      context.lineWidth = borderSize;\r\n      context.strokeStyle = colorSchema.borderColor;\r\n    },\r\n  };\r\n}\r\n","export function configureCanvas(canvas, { w, h }) {\r\n  canvas.height = h;\r\n  canvas.width = w;\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactModal from \"react-modal\";\r\n\r\nReactModal.setAppElement(\"#root\");\r\n\r\nexport function ModalWrapper({ isOpen, onRequestClose, children, width }) {\r\n  return (\r\n    <ReactModal\r\n      isOpen={isOpen}\r\n      closeTimeoutMS={200}\r\n      onRequestClose={onRequestClose}\r\n    >\r\n      <StyledRootWrapper onClick={onRequestClose}>\r\n        <StyledWrapper>\r\n          <StyledInner width={width} onClick={(e) => e.stopPropagation()}>\r\n            {children}\r\n            <CloseModal onClick={onRequestClose} />\r\n          </StyledInner>\r\n        </StyledWrapper>\r\n      </StyledRootWrapper>\r\n    </ReactModal>\r\n  );\r\n}\r\n\r\nexport const StyledInner = styled.div`\r\n  background: #fff;\r\n  padding: 25px;\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  text-align: left;\r\n  max-width: 800px;\r\n  margin: 10px;\r\n  width: ${({ width }) => width}px;\r\n  position: relative;\r\n  border-radius: 10px;\r\n  opacity: 0;\r\n  transition: all 0.3s;\r\n  transform: translateX(-100px);\r\n`;\r\n\r\nexport const StyledRootWrapper = styled.div`\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1043;\r\n  position: fixed;\r\n  opacity: 0;\r\n  transition: all 0.3s;\r\n`;\r\n\r\nexport const StyledWrapper = styled.div`\r\n  position: absolute;\r\n  margin: 0;\r\n  padding: 0;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1045;\r\n  outline: 0;\r\n  overflow: auto;\r\n  white-space: normal;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #27262687;\r\n`;\r\n\r\nconst CloseModal = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  cursor: pointer;\r\n  width: 30px;\r\n  height: 30px;\r\n  &:after {\r\n    position: absolute;\r\n    content: \"\\\\2718\";\r\n    top: 50%;\r\n    right: 50%;\r\n    transform: translate(50%, -50%);\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Icon = styled.div`\r\n  cursor: pointer;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Text = styled.p`\r\n  font-size: 14px;\r\n`;\r\n","import React from \"react\";\r\nimport { Button as DefaultButton } from \"@material-ui/core\";\r\n\r\nexport function Button({\r\n  icon: Icon,\r\n  type,\r\n  size = 14,\r\n  children,\r\n  onClick,\r\n  variant = \"contained\",\r\n  color = \"default\",\r\n}) {\r\n  return type === \"outline\" ? (\r\n    <DefaultButton onClick={onClick}>{children}</DefaultButton>\r\n  ) : (\r\n    <DefaultButton\r\n      style={{ fontSize: \"11px\" }}\r\n      onClick={onClick}\r\n      variant={variant}\r\n      color={color}\r\n      startIcon={Icon && <Icon size={size} />}\r\n    >\r\n      {children}\r\n    </DefaultButton>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { css } from \"styled-components\";\r\n\r\nexport const WithTag = ({ as, children, to, onClick, ...props }) =>\r\n  React.createElement(as, { to, onClick, ...props }, children);\r\n\r\nWithTag.defaultProps = {\r\n  as: \"div\",\r\n};\r\n\r\nconst is = (value) => Boolean(value);\r\nconst prop = (value) => (is(value) ? value : \"initial\");\r\nexport const ifProps = (name, styles) => (props) => is(props[name]) && styles;\r\nexport const getStyle = (propsName, styles) => (props) =>\r\n  props[propsName] && styles[props[propsName]];\r\n\r\nexport const mixins = (props) => css`\r\n  align-content: ${prop(props.alignContent)};\r\n  align-items: ${prop(props.align)};\r\n  flex-basis: ${prop(props.basis)};\r\n  flex-grow: ${prop(props.grow)};\r\n  flex-shrink: ${prop(props.shrink)};\r\n  justify-content: ${prop(props.justify)};\r\n  order: ${prop(props.order)};\r\n  padding: ${prop(props.padding)};\r\n  width: ${prop(props.width)};\r\n  max-width: ${prop(props.maxW)};\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { WithTag, mixins } from \"../../lib/styled-components-layout\";\r\n\r\nexport const FlexContainer = styled(WithTag)`\r\n  ${mixins}\r\n  display: flex;\r\n  flex-direction: ${({ direction }) => direction || \"row\"};\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  padding: 15px 0px;\r\n`;\r\n\r\nexport const Left = styled.div`\r\n  width: 25%;\r\n  text-align: left;\r\n  padding-right: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport { FormControlLabel, Switch as DefaultSwitch } from \"@material-ui/core\";\r\nimport { FlexContainer, Left } from \"../templates\";\r\n\r\nexport function Switch({ label, name = \"gilad\", ...rest }) {\r\n  return (\r\n    <label style={{ cursor: \"pointer\" }}>\r\n      <FlexContainer>\r\n        <Left>\r\n          <FormControlLabel control={<DefaultSwitch {...rest} name={name} />} />\r\n        </Left>\r\n        <h3>{label}</h3>\r\n      </FlexContainer>\r\n    </label>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FiSettings } from \"react-icons/fi\";\r\nimport { ModalWrapper } from \"./modal-wrapper\";\r\nimport { Icon } from \"../atoms\";\r\n\r\nexport function Settings() {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  return (\r\n    <>\r\n      <Icon onClick={() => setOpen(true)}>\r\n        <FiSettings color=\"#fff\" size=\"35\" />\r\n      </Icon>\r\n      <ModalWrapper isOpen={isOpen} onRequestClose={() => setOpen(false)}>\r\n        Setting info\r\n      </ModalWrapper>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FiInfo } from \"react-icons/fi\";\r\nimport { ModalWrapper } from \"./modal-wrapper\";\r\nimport { Icon, Text } from \"../atoms\";\r\nimport { FlexContainer } from \"../templates\";\r\n\r\nexport function Info() {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  return (\r\n    <>\r\n      <Icon onClick={() => setOpen(true)}>\r\n        <FiInfo color=\"#fff\" size=\"35\" />\r\n      </Icon>\r\n\r\n      <InfoModal isOpen={isOpen} setOpen={setOpen} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction InfoModal({ isOpen, setOpen }) {\r\n  return (\r\n    <ModalWrapper\r\n      width={500}\r\n      isOpen={isOpen}\r\n      onRequestClose={() => setOpen(false)}\r\n    >\r\n      <FlexContainer>\r\n        <ColorBlock color=\"green\" />\r\n        <Text>- Точка старта алгоритма</Text>\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <ColorBlock color=\"red\" />\r\n        <Text>- Точка завершения алгоритма</Text>\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <ColorBlock color=\"#00bcd4\" />\r\n        <Text>- Пройденная вершина</Text>\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <ColorBlock color=\"#f3fc23\" />\r\n        <Text>- Вершина, находящаяся в обработке</Text>\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <ColorBlock color=\"#d2ef99\" />\r\n        <Text>- Соседи текущей вершины</Text>\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <ColorBlock color=\"#bbbbbb\" />\r\n        <Text>- Цвет не проходимого барьера</Text>\r\n      </FlexContainer>\r\n    </ModalWrapper>\r\n  );\r\n}\r\n\r\nconst ColorBlock = styled.div`\r\n  width: 35px;\r\n  height: 35px;\r\n  background: ${({ color }) => color};\r\n  margin-right: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport { FiBook } from \"react-icons/fi\";\r\nimport { ModalWrapper } from \"./modal-wrapper\";\r\nimport { Icon } from \"../atoms\";\r\n\r\nexport function AboutAlgoritms() {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  return (\r\n    <>\r\n      <Icon onClick={() => setOpen(true)}>\r\n        <FiBook color=\"#fff\" size=\"35\" />\r\n      </Icon>\r\n      <ModalWrapper isOpen={isOpen} onRequestClose={() => setOpen(false)}>\r\n        algoritm info\r\n      </ModalWrapper>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { Button } from \"../atoms\";\r\n\r\nexport function InfoAboutAlgoritmApi({ codeString }) {\r\n  const [isOpen, toggle] = React.useReducer((prev) => !prev, false);\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={toggle} type=\"outline\">\r\n        Посмотреть информацию об api\r\n      </Button>\r\n      <Wrapper isOpen={isOpen}>\r\n        <a\r\n          href=\"https://github.com/bogdanq/algorithms/blob/master/src/algoritms/bred-first-search.js\"\r\n          target=\"_blank\"\r\n        >\r\n          Пример алгоритма\r\n        </a>\r\n        <SyntaxHighlighter language=\"typescript\" style={docco}>\r\n          {codeString}\r\n        </SyntaxHighlighter>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  ${({ isOpen }) =>\r\n    isOpen\r\n      ? css`\r\n          height: 500px;\r\n          border-top: 1px solid #00bcd4;\r\n          margin-bottom: 15px;\r\n          overflow-y: auto;\r\n        `\r\n      : css`\r\n          height: 0;\r\n          overflow: hidden;\r\n        `};\r\n  transition: all 0.2s;\r\n  padding-top: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport { Select as DefaultSelect, MenuItem } from \"@material-ui/core\";\r\nimport { ceilType } from \"../../../config\";\r\nimport { setBarrierType, $barrierType } from \"../../../graph\";\r\nimport { useStore } from \"effector-react\";\r\n\r\nexport function SelectBarrierType() {\r\n  const barrierType = useStore($barrierType);\r\n\r\n  const handleChange = React.useCallback((event) => {\r\n    setBarrierType(event.target.value);\r\n  }, []);\r\n\r\n  return (\r\n    <DefaultSelect\r\n      style={{ width: \"100%\" }}\r\n      value={barrierType}\r\n      onChange={handleChange}\r\n    >\r\n      <MenuItem value={ceilType.BARIER}>Не проходимый барьер</MenuItem>\r\n      <MenuItem value={ceilType.WATER}>Вода (вес 10)</MenuItem>\r\n      <MenuItem value={ceilType.SAND}>Песок (вес 3)</MenuItem>\r\n    </DefaultSelect>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FaHistory } from \"react-icons/fa\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useStore } from \"effector-react\";\r\nimport { $historyGame, recoveryHistoryGame, $currentGame } from \"../../../game\";\r\nimport { ModalWrapper } from \"../molecules\";\r\nimport { FlexContainer } from \"../templates\";\r\nimport { Icon } from \"../atoms\";\r\n\r\nexport function History() {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  const historyGame = useStore($historyGame);\r\n\r\n  return (\r\n    <HistoryIcon historyCount={historyGame.length}>\r\n      <Icon onClick={() => setOpen(true)}>\r\n        <FaHistory color=\"#fff\" size=\"35\" />\r\n      </Icon>\r\n      <ModalWrapper\r\n        width={600}\r\n        isOpen={isOpen}\r\n        onRequestClose={() => setOpen(false)}\r\n      >\r\n        {historyGame.length > 0 ? (\r\n          <HistoryList historyGame={historyGame} setOpen={setOpen} />\r\n        ) : (\r\n          <h1>У вас нет законченных игр </h1>\r\n        )}\r\n      </ModalWrapper>\r\n    </HistoryIcon>\r\n  );\r\n}\r\n\r\nfunction HistoryList({ historyGame, setOpen }) {\r\n  const currentGame = useStore($currentGame);\r\n  const handleChangeItem = React.useCallback(\r\n    (item) => {\r\n      recoveryHistoryGame(item.date);\r\n      setOpen(false);\r\n    },\r\n    [setOpen]\r\n  );\r\n\r\n  return (\r\n    <HistoryListWrapper>\r\n      <FlexContainer>\r\n        {historyGame.map((item, index) => (\r\n          <HistoryItem\r\n            active={currentGame === item.date}\r\n            onClick={() => handleChangeItem(item)}\r\n            key={index.toString()}\r\n          >\r\n            <p>Баррьеры: {item.barrier.length}</p>\r\n            <p>Старт: {item.startEndPosition[0]}</p>\r\n            <p>Конец: {item.startEndPosition[1]}</p>\r\n            <h3>{item.date}</h3>\r\n          </HistoryItem>\r\n        ))}\r\n      </FlexContainer>\r\n    </HistoryListWrapper>\r\n  );\r\n}\r\n\r\nconst HistoryItem = styled.div`\r\n  border: 2px solid #666666;\r\n  border-radius: 10px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  margin: 5px;\r\n  transition: all 0.3s;\r\n\r\n  ${({ active }) =>\r\n    active &&\r\n    css`\r\n      border: 2px solid #00bcd4;\r\n    `}\r\n\r\n  &:hover {\r\n    border: 2px solid #00bcd4;\r\n  }\r\n`;\r\n\r\nconst HistoryListWrapper = styled.div`\r\n  overflow-y: auto;\r\n  max-height: 500px;\r\n`;\r\n\r\nconst HistoryIcon = styled.div`\r\n  position: relative;\r\n  &:after {\r\n    ${({ historyCount }) =>\r\n      historyCount > 0 &&\r\n      css`\r\n    position: absolute;\r\n    content: \"${historyCount}\";\r\n    background: red;\r\n    border-radius: 50%;\r\n    padding: 3px;\r\n    font-size: 12px;\r\n    text-align: center;\r\n    top: -10px;\r\n    right: -15px;\r\n    height: 13px;\r\n    width: 13px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center\r\n    `}\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Draggable from \"react-draggable\";\r\nimport { Settings, Info, AboutAlgoritms } from \"../molecules\";\r\nimport { History } from \"./history\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  padding: 15px 10px;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.5);\r\n  cursor: default;\r\n  left: 20px;\r\n  bottom: 20px;\r\n\r\n  &:hover {\r\n    cursor: move;\r\n  }\r\n\r\n  & > div {\r\n    margin: 0 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport function InfoDraggable() {\r\n  return (\r\n    <Draggable>\r\n      <Wrapper>\r\n        <Info />\r\n        <Settings />\r\n        <AboutAlgoritms />\r\n        <History />\r\n      </Wrapper>\r\n    </Draggable>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useStore } from \"effector-react\";\r\nimport { GrResume, GrClear, GrPlay, GrPause } from \"react-icons/gr\";\r\nimport {\r\n  gameStatus,\r\n  setGameStatus,\r\n  $gameState,\r\n  checkGameStatus,\r\n} from \"../../../game\";\r\nimport { Button } from \"../atoms\";\r\nimport { FlexContainer } from \"../templates\";\r\n\r\nexport function GameControllButtons() {\r\n  const gameState = useStore($gameState);\r\n\r\n  return (\r\n    <FlexContainer justify=\"space-around\">\r\n      {checkGameStatus(gameState, [\r\n        gameStatus.START,\r\n        gameStatus.PAUSE,\r\n        gameStatus.RESUME,\r\n      ]) ? (\r\n        !checkGameStatus(gameState, [gameStatus.PAUSE]) ? (\r\n          <Button\r\n            onClick={() => setGameStatus(gameStatus.PAUSE)}\r\n            icon={GrPause}\r\n          >\r\n            Пауза\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={() => setGameStatus(gameStatus.RESUME)}\r\n            icon={GrResume}\r\n          >\r\n            Продолжить\r\n          </Button>\r\n        )\r\n      ) : (\r\n        <Button onClick={() => setGameStatus(gameStatus.START)} icon={GrPlay}>\r\n          Старт\r\n        </Button>\r\n      )}\r\n      <Button onClick={() => setGameStatus(gameStatus.CLEAR)} icon={GrClear}>\r\n        Очистить\r\n      </Button>\r\n    </FlexContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { sample, createStore } from \"effector\";\r\nimport { useStore } from \"effector-react\";\r\nimport { $path, endGame } from \"../../../game\";\r\n\r\nconst $graphState = createStore({});\r\n\r\nsample({\r\n  source: $path,\r\n  clock: endGame,\r\n  target: $graphState,\r\n});\r\n\r\nexport function AlgotitmResult() {\r\n  const graphState = useStore($graphState);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"select-bar_info\">\r\n        Количество итераций: <span>{graphState?.count || 0}</span>\r\n      </h3>\r\n      <h3 className=\"select-bar_info\">\r\n        Время прохождения:\r\n        <span> {graphState?.timeEnd?.toFixed(4) || 0} ms</span>\r\n      </h3>\r\n      <h3 className=\"select-bar_info\">\r\n        Длина пути: <span>{graphState?.path?.length || 0}</span>\r\n      </h3>\r\n    </>\r\n  );\r\n}\r\n","import { createEvent, restore } from \"effector\";\r\n\r\nexport const handleChangeCode = createEvent();\r\nexport const $code = restore(handleChangeCode, \"\");\r\n","export const codeString = `\r\n// что бы работала визуализация, функция должна следовать общему api\r\n  type youAlgoritmFunction = (\r\n    startIndex: number, \r\n    endIndex: number, \r\n    graph: Graph\r\n  ) => { \r\n    path: Array<number>, \r\n    AlgoritmController \r\n  }\r\n\r\n// метод нужен, что бы каждую итерацию алгоритма сохранять его данные\r\n\r\n  type AlgoritmController = {\r\n    increment: () => void;\r\n    getAlgotitmResult: () => AlgoritmController;\r\n    addVertex: (\r\n      processing: Array<{vertex: number, siblings: number[]}>,\r\n      visited: number\r\n    ) => void;\r\n    count: number;\r\n    processing: Array<{vertex: number, siblings: number[]}>;\r\n    visited: number | null[];\r\n    startIndex: number;\r\n    endIndex: number;\r\n  }\r\n\r\n  const algoritmController = new AlgoritmController(startIndex: number, endIndex: number)\r\n\r\n\r\n  /*\r\n    GraphControll - создает граф, может вернуть вершину по индексу\r\n  */\r\n\r\n  enum CeilType {\r\n    START_POSITION = \"START_POSITION\",\r\n    END_POSITION = \"END_POSITION\",\r\n    BARIER = \"BARIER\",\r\n    EMPTY = \"EMPTY\",\r\n    VISITED = \"VISITED\",\r\n  };\r\n  \r\n  type Graph = { [key: string]: { type: CeilType , siblings: Array<number> } }\r\n\r\n  type GraphControll = {\r\n    getVertexByIndex: (index: number) => Graph\r\n  }\r\n\r\n  /* \r\n    функция restorePath восстановить путь, по переданному обьекту. \r\n    Содержит путь от предыдущего к следующей вершине\r\n  */\r\n\r\n  type RestorePath = (\r\n    endIndex: number, \r\n    startIndex: number, \r\n    parent: { [key: string]: number }\r\n  ) => Array<number>\r\n\r\n  // сanVisitedVertex проверяет, можно ли прайти на указанную вершину\r\n    type CanVisitedVertex = (\r\n      vertex: { type: CeilType , siblings: Array<number> }\r\n    ) => boolean\r\n`;\r\n","import React from \"react\";\r\nimport { useStore } from \"effector-react\";\r\nimport { graphControll as newGraph } from \"../../../../graph\";\r\nimport {\r\n  canVisitedVertex as newCan,\r\n  restorePath as newRe,\r\n  addCustomAlgoritm,\r\n} from \"../../../../algoritms\";\r\nimport { AlgoritmController as newAlg } from \"../../../../algoritms/controller\";\r\nimport { Button } from \"../../atoms\";\r\nimport { InfoAboutAlgoritmApi } from \"../../molecules\";\r\nimport { $code, handleChangeCode } from \"./model\";\r\nimport { codeString } from \"./code-string\";\r\n\r\nconst AlgoritmController = newAlg;\r\nconst restorePath = newRe;\r\nconst canVisitedVertex = newCan;\r\nconst graphControll = newGraph;\r\n\r\nlet foo = null;\r\n\r\nexport function CodeArea({ onRequestClose }) {\r\n  const code = useStore($code);\r\n\r\n  const handleChangeAlgoritm = React.useCallback(() => {\r\n    foo = new Function(\r\n      \"AlgoritmController\",\r\n      \"restorePath\",\r\n      \"canVisitedVertex\",\r\n      \"graphControll\",\r\n      `return ${code}`\r\n    );\r\n\r\n    addCustomAlgoritm(\r\n      foo(AlgoritmController, restorePath, canVisitedVertex, graphControll)\r\n    );\r\n\r\n    onRequestClose();\r\n  }, [onRequestClose, code]);\r\n\r\n  return (\r\n    <>\r\n      <InfoAboutAlgoritmApi codeString={codeString} />\r\n      <textarea\r\n        style={{ height: \"200px\", width: \"100%\" }}\r\n        onChange={(e) => handleChangeCode(e.target.value)}\r\n        value={code}\r\n      />\r\n      <Button onClick={handleChangeAlgoritm}>Сохранить</Button>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { combine } from \"effector\";\r\nimport { useStore } from \"effector-react\";\r\nimport { ModalWrapper } from \"../molecules\";\r\nimport {\r\n  $algoritms,\r\n  selectAlgoritm,\r\n  $currentAlgoritm,\r\n} from \"../../../algoritms\";\r\nimport { CodeArea } from \"./code-area\";\r\n\r\nconst $state = combine({\r\n  algoritms: $algoritms,\r\n  currentAlgoritm: $currentAlgoritm,\r\n});\r\n\r\nexport function AlgoritmsList() {\r\n  const { algoritms, currentAlgoritm } = useStore($state);\r\n  const [isOpen, setOpen] = React.useState(false);\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"select-bar_title\">Выбирите алгоритм:</h2>\r\n      <ul>\r\n        {algoritms.map((algoritm) => (\r\n          <li\r\n            onClick={() => {\r\n              selectAlgoritm(algoritm.name);\r\n              if (algoritm.modal) {\r\n                setOpen(true);\r\n              }\r\n            }}\r\n            className={currentAlgoritm === algoritm.name ? \"isActive\" : \"\"}\r\n            key={algoritm.name}\r\n          >\r\n            {algoritm.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <CustomAlgoritmModal isOpen={isOpen} setOpen={setOpen} />\r\n    </>\r\n  );\r\n}\r\n\r\nconst CustomAlgoritmModal = ({ isOpen, setOpen }) => {\r\n  return (\r\n    <ModalWrapper\r\n      width={700}\r\n      isOpen={isOpen}\r\n      onRequestClose={() => setOpen(false)}\r\n    >\r\n      <CodeArea onRequestClose={() => setOpen(false)} />\r\n    </ModalWrapper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport DraggableDefault from \"react-draggable\";\r\nimport { combine } from \"effector\";\r\nimport { useStore } from \"effector-react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { setTimer, $currentTimer } from \"../../../game\";\r\nimport { $canMoveDiagonal, changeDirection } from \"../../../graph\";\r\nimport { SelectBarrierType } from \"../molecules\";\r\nimport { Left, FlexContainer } from \"../templates\";\r\nimport { Switch } from \"../atoms\";\r\nimport { GameControllButtons } from \"./game-controll-buttons\";\r\nimport { AlgotitmResult } from \"./algoritm-result\";\r\nimport { AlgoritmsList } from \"./algoritms\";\r\n\r\nconst $state = combine({\r\n  currentTimer: $currentTimer,\r\n  canMoveDiagonal: $canMoveDiagonal,\r\n});\r\n\r\nexport function RightSideBar() {\r\n  const { currentTimer, canMoveDiagonal } = useStore($state);\r\n\r\n  return (\r\n    <DraggableDefault>\r\n      <div className=\"select-bar\">\r\n        <h2 className=\"select-bar_title\">Информация:</h2>\r\n        <AlgotitmResult />\r\n        <AlgoritmsList />\r\n        <GameControllButtons />\r\n        <div className=\"info-wrapper\" style={{ borderTop: \"2px solid #fff\" }}>\r\n          <FlexContainer>\r\n            <Left>\r\n              <TextField\r\n                type=\"number\"\r\n                value={currentTimer}\r\n                onChange={({ target }) => {\r\n                  setTimer(parseInt(target.value));\r\n                }}\r\n              />\r\n            </Left>\r\n            <h3 className=\"select-bar_info\">Скорость</h3>\r\n          </FlexContainer>\r\n\r\n          <Switch\r\n            checked={canMoveDiagonal}\r\n            onChange={changeDirection}\r\n            label=\"Проход по диагонали\"\r\n          />\r\n          <SelectBarrierType />\r\n        </div>\r\n      </div>\r\n    </DraggableDefault>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { renderCanvas } from \"./canvas\";\r\nimport { InfoDraggable } from \"./gui/ui/organisms/info-block\";\r\nimport { RightSideBar } from \"./gui/ui/organisms/right-side-bar\";\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <RightSideBar />\r\n      <InfoDraggable />\r\n    </>\r\n  );\r\n}\r\n","import { createGlobalStyle, css } from \"styled-components\";\r\nimport {\r\n  StyledRootWrapper,\r\n  StyledInner,\r\n} from \"./gui/ui/molecules/modal-wrapper\";\r\n\r\nconst globalCss = css`\r\n  .ReactModal__Body--open {\r\n    overflow: hidden;\r\n  }\r\n\r\n  .ReactModal__Content--after-open {\r\n    border: none !important;\r\n    background: transparent !important;\r\n    ${StyledInner} {\r\n      overflow: hidden;\r\n      opacity: 1;\r\n      transform: translateX(0);\r\n    }\r\n  }\r\n  .ReactModal__Content--before-close {\r\n    ${StyledInner} {\r\n      transform: translateX(100px);\r\n      opacity: 0;\r\n    }\r\n  }\r\n  .ReactModal__Overlay--after-open {\r\n    background-color: transparent !important;\r\n    ${StyledRootWrapper} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n  .ReactModal__Overlay--before-close {\r\n    ${StyledRootWrapper} {\r\n      opacity: 0;\r\n    }\r\n  }\r\n\r\n  .MuiInputBase-input {\r\n    color: #fff;\r\n  }\r\n\r\n  .MuiInput-underline:before,\r\n  .MuiInput-underline:after {\r\n    border-bottom: 1px solid #fff;\r\n  }\r\n`;\r\nexport const GlobalModalStyles = createGlobalStyle`${globalCss}`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { GlobalModalStyles } from \"./global-css\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n    <GlobalModalStyles />\r\n  </>,\r\n  rootElement\r\n);\r\n\r\nexport * from \"./algoritms\";\r\nexport * from \"./graph\";\r\nexport * from \"./game\";\r\n"],"sourceRoot":""}