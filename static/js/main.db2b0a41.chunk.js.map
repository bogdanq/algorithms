{"version":3,"sources":["config.js","control-canvas.js","graph/controller.js","graph/utils.js","graph/model.js","algoritms/utils.js","algoritms/bred-first-search.js","algoritms/depth-first-search.js","algoritms/model.js","ui/loop.js","canvas.js","ui/model.js","config-canvas.js","App.js","index.js"],"names":["cellSize","pageWidth","window","innerWidth","pageHeight","innerHeight","borderSize","colorSchema","borderColor","blockColor","startEndColor","ceilType","START_POSITION","END_POSITION","BARIER","EMPTY","VISITED","getLocalSize","w","h","Math","floor","getGlobalSize","convertLocalPositionToGlobal","_ref","_ref2","Object","slicedToArray","x","y","drawSquare","_ref3","_ref3$color","color","position","context","_convertLocalPosition","_convertLocalPosition2","size","fillStyle","fillRect","getIndexByPosition","_ref4","_ref5","getPositionByIndex","index","canvasControl","Controll","classCallCheck","this","isMouseDown","isMouseMove","listeners","state","lastIndex","canvas","_this","addEventListener","event","filter","userEvent","type","forEach","eventListener","_getLocalSize3","clientX","clientY","getTargetIndex","push","graphControll","Graph","graph","cellCount","clear","siblings","getLeftSibling","getTopSibling","getRightSibling","getDownSibling","item","objectSpread2","_getLocalSize","setBarrierToGraph","barriers","barrierIndex","updateGraph","setStartPositionToGraph","startIndex","setEndPositionToGraph","endIndex","graphDomain","createDomain","resetStore","clearCanvas","setBarrier","removeBarrierItem","triggerStartPosition","triggerEndPosition","$startEndPosition","store","$barrier","onCreateStore","reset","on","includes","concat","toConsumableArray","$graph","combine","barrier","startEndPosition","map","_state$startEndPositi","start","end","createGraph","watch","canVisitedVertex","vertex","restorePath","parent","path","target","unshift","length","breadthFirstSearch","logger","createLogger","isWork","queue","visited","Map","setVertex","currentIndex","shift","i","next","getVertexByIndex","has","set","setDrowAnimated","depthFirstSearch","stack","algoritmsDomain","selectAlgoritm","createEvent","incrementStep","$canDrowAnimated","$currentAlgoritm","restore","$traversedVertexes","vertexes","$stepCounter","$algoritms","createStore","searchFunction","name","$searchAlgoritm","currentAlgoritm","algoritms","find","algoritm","gameLoop","GameLoop","count","animateId","createClass","key","value","traversedVertexes","stepCounter","$gameState","getState","ref","gameStatus","PAUSE","renderBarrier","requestAnimationFrame","cancelAnimationFrame","setGameStatus","END_GAME","_ref2$path","_ref2$color","prev","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","renderPath","$path","START","RESTART","RESUME","CLEAR","gameDomain","resumeAnimated","pauseAnimated","$isValidGameState","$clearGameState","startGame","guard","source","clearGame","forward","from","to","sample","clock","fn","_graph$startEndPositi","$algoritState","canDrowAnimated","gameState","arguments","undefined","_getPositionByIndex","_getPositionByIndex2","renderCeil","renderForMove","renderForClick","renderLogic","_getLocalSize2","findIndex","renderStart","renderEnd","document","getElementById","getContext","localSize","globalSize","gridData","grid","Path2D","applyStyles","buildGrid","height","width","configureCanvas","registerClickEventToCanvas","addMouseMoveEvent","e","s","addMouseUpEvent","addMouseClickEvent","merge","clearRect","clearALlCanvas","setState","renderActionsCeil","objectWithoutProperties","renderCanvas","App","useStore","_React$useReducer","React","useReducer","_React$useReducer2","react_default","a","createElement","className","onClick","__webpack_require__","d","__webpack_exports__","_setVertex","utils_canVisitedVertex","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.db2b0a41.chunk.js","sourcesContent":["export const cellSize = 35;\r\nexport const pageWidth = window.innerWidth;\r\nexport const pageHeight = window.innerHeight;\r\nexport const borderSize = 0.5;\r\nexport const boardLength = pageWidth * pageHeight;\r\nexport const startPosition = 0;\r\nexport const endPosition = 110;\r\n\r\nexport const colorSchema = {\r\n  borderColor: \"#000\",\r\n  blockColor: \"#8080805c\",\r\n  startEndColor: [\"green\", \"red\"],\r\n};\r\n\r\nexport const ceilType = {\r\n  START_POSITION: \"START_POSITION\",\r\n  END_POSITION: \"END_POSITION\",\r\n  BARIER: \"BARIER\",\r\n  EMPTY: \"EMPTY\",\r\n  VISITED: \"VISITED\",\r\n};\r\n\r\nexport function getLocalSize(w, h) {\r\n  return {\r\n    w: Math.floor(w / cellSize),\r\n    h: Math.floor(h / cellSize),\r\n  };\r\n}\r\n\r\nexport function getGlobalSize(w, h) {\r\n  return {\r\n    w: Math.floor(w * cellSize),\r\n    h: Math.floor(h * cellSize),\r\n  };\r\n}\r\n\r\nexport function convertLocalPositionToGlobal([x, y]) {\r\n  return [x * cellSize, y * cellSize];\r\n}\r\n\r\nexport function drawSquare({\r\n  color = \"rgb(152, 251, 152)\",\r\n  position,\r\n  context,\r\n}) {\r\n  const [x, y] = convertLocalPositionToGlobal(position);\r\n  const size = cellSize - borderSize * 2;\r\n\r\n  context.fillStyle = color;\r\n  context.fillRect(x + borderSize * 2, y + borderSize * 2, size, size);\r\n}\r\n\r\nexport function clearALlCanvas(context, canvas) {\r\n  return context.clearRect(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\nexport function getIndexByPosition([x, y]) {\r\n  const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n  return y * w + x;\r\n}\r\n\r\nexport function getPositionByIndex(index) {\r\n  const { w } = getLocalSize(pageWidth, pageHeight);\r\n  const y = Math.floor(index / w);\r\n  const x = index - y * w;\r\n\r\n  return [x, y];\r\n}\r\n\r\nexport function getTargetIndex(event) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  return index;\r\n}\r\n","import { getTargetIndex } from \"./config\";\r\n\r\nclass Controll {\r\n  constructor() {\r\n    this.isMouseDown = false;\r\n    this.isMouseMove = false;\r\n    this.listeners = [];\r\n    this.state = {};\r\n    this.lastIndex = null;\r\n  }\r\n\r\n  registerClickEventToCanvas(canvas) {\r\n    canvas.addEventListener(\"mousedown\", (event) => {\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"mousedown\")\r\n        .forEach((userEvent) => userEvent.eventListener());\r\n\r\n      this.isMouseDown = true;\r\n      this.isMouseMove = false;\r\n    });\r\n\r\n    canvas.addEventListener(\"mouseup\", (event) => {\r\n      this.isMouseDown = false;\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"mouseup\")\r\n        .forEach((userEvent) => userEvent.eventListener(event, this.state));\r\n    });\r\n\r\n    canvas.addEventListener(\"click\", (event) => {\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"click\")\r\n        .forEach((userEvent) => {\r\n          if (!this.isMouseMove) {\r\n            userEvent.eventListener(event, this.state);\r\n          }\r\n        });\r\n    });\r\n\r\n    canvas.addEventListener(\"mousemove\", (event) => {\r\n      const index = getTargetIndex(event);\r\n\r\n      if (this.isMouseDown && index !== this.lastIndex) {\r\n        this.lastIndex = index;\r\n        this.isMouseMove = true;\r\n        this.listeners\r\n          .filter((userEvent) => userEvent.type === \"mousemove\")\r\n          .forEach((userEvent) =>\r\n            userEvent.eventListener(event, this.state, this.lastIndex)\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  addMouseDownEvent(eventListener) {\r\n    this.listeners.push({ type: \"mousedown\", eventListener });\r\n  }\r\n\r\n  addMouseUpEvent(eventListener) {\r\n    this.listeners.push({ type: \"mouseup\", eventListener });\r\n  }\r\n\r\n  addMouseMoveEvent(eventListener) {\r\n    this.listeners.push({ type: \"mousemove\", eventListener });\r\n  }\r\n\r\n  addMouseClickEvent(eventListener) {\r\n    this.listeners.push({ type: \"click\", eventListener });\r\n  }\r\n\r\n  setState(state) {\r\n    this.state = state;\r\n    return this;\r\n  }\r\n}\r\n\r\nexport const canvasControl = new Controll();\r\n","import { ceilType, pageWidth, getLocalSize, pageHeight } from \"../config\";\r\n\r\nclass Graph {\r\n  constructor({ w, h }) {\r\n    this.graph = {};\r\n    this.cellCount = w * h;\r\n    this.lastIndex = null;\r\n  }\r\n\r\n  createGraph() {\r\n    this.clear();\r\n    for (let index = 0; index < this.cellCount; index++) {\r\n      this.graph[index] = {\r\n        type: ceilType.EMPTY,\r\n        siblings: [\r\n          this.getLeftSibling(index),\r\n          this.getTopSibling(index),\r\n          this.getRightSibling(index),\r\n          this.getDownSibling(index),\r\n        ].filter((item) => typeof item !== \"undefined\"),\r\n      };\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  getVertexByIndex(index) {\r\n    return this.graph[index];\r\n  }\r\n\r\n  updateGraph({ index, type }) {\r\n    if (this.graph[index]) {\r\n      this.graph[index] = { ...this.graph[index], type };\r\n      if (type === ceilType.BARIER) {\r\n        this.graph[index] = { ...this.graph[index], type, siblings: [] };\r\n      }\r\n    }\r\n  }\r\n\r\n  getDownSibling(index) {\r\n    const { w, h } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasDownNeighbour = Math.floor(index / w) < h - 1;\r\n\r\n    if (hasDownNeighbour) {\r\n      return index + w;\r\n    }\r\n  }\r\n\r\n  getTopSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasTopNeighbour = Math.floor(index / w) > 0;\r\n\r\n    if (hasTopNeighbour) {\r\n      return index - w;\r\n    }\r\n  }\r\n\r\n  getRightSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasRightNeighbour = index % w < w - 1;\r\n\r\n    if (hasRightNeighbour) {\r\n      return index + 1;\r\n    }\r\n  }\r\n\r\n  getLeftSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasLeftNeighbour = index % w > 0;\r\n\r\n    if (hasLeftNeighbour) {\r\n      return index - 1;\r\n    }\r\n  }\r\n\r\n  getGraph() {\r\n    return this.graph;\r\n  }\r\n\r\n  clear() {\r\n    this.graph = {};\r\n    return this;\r\n  }\r\n}\r\n\r\nexport const graphControll = new Graph(getLocalSize(pageWidth, pageHeight));\r\n","import { ceilType } from \"../config\";\r\n\r\nexport function setBarrierToGraph(graph, barriers) {\r\n  barriers.forEach((barrierIndex) => {\r\n    graph.updateGraph({ index: barrierIndex, type: ceilType.BARIER });\r\n  });\r\n}\r\n\r\nexport function setStartPositionToGraph(graph, startIndex) {\r\n  graph.updateGraph({ index: startIndex, type: ceilType.START_POSITION });\r\n}\r\n\r\nexport function setEndPositionToGraph(graph, endIndex) {\r\n  graph.updateGraph({ index: endIndex, type: ceilType.END_POSITION });\r\n}\r\n","import { combine, createDomain } from \"effector\";\r\nimport { startPosition, endPosition } from \"../config\";\r\nimport { graphControll } from \"./controller\";\r\nimport {\r\n  setBarrierToGraph,\r\n  setStartPositionToGraph,\r\n  setEndPositionToGraph,\r\n} from \"./utils\";\r\n\r\nconst graphDomain = createDomain(\"graph\");\r\n\r\nexport const resetStore = graphDomain.event();\r\nexport const clearCanvas = graphDomain.event();\r\n\r\nexport const setBarrier = graphDomain.event();\r\nexport const removeBarrierItem = graphDomain.event();\r\n\r\nexport const triggerStartPosition = graphDomain.event();\r\nexport const triggerEndPosition = graphDomain.event();\r\n\r\nexport const $startEndPosition = graphDomain.store([\r\n  startPosition,\r\n  endPosition,\r\n]);\r\n\r\nexport const $barrier = graphDomain.store([]);\r\n\r\ngraphDomain.onCreateStore((store) => store.reset(resetStore));\r\n\r\n$barrier\r\n  .on(setBarrier, (state, index) => {\r\n    const isFindIndex = state.includes(index);\r\n\r\n    return isFindIndex ? state : [...state, index];\r\n  })\r\n  .on(removeBarrierItem, (state, index) =>\r\n    state.filter((item) => item !== index)\r\n  );\r\n\r\n$startEndPosition\r\n  .on(triggerStartPosition, (state, index) => [index, state[1]])\r\n  .on(triggerEndPosition, (state, index) => [state[0], index]);\r\n\r\nexport const $graph = combine({\r\n  barrier: $barrier,\r\n  startEndPosition: $startEndPosition,\r\n}).map((state) => {\r\n  const [start, end] = state.startEndPosition;\r\n\r\n  const graph = graphControll.createGraph();\r\n\r\n  setBarrierToGraph(graph, state.barrier);\r\n  setStartPositionToGraph(graph, start);\r\n  setEndPositionToGraph(graph, end);\r\n\r\n  return { ...state, graph: graph.graph };\r\n});\r\n\r\n$graph.watch(clearCanvas);\r\n","import { ceilType } from \"../config\";\r\n\r\nexport const canVisitedVertex = (vertex) => {\r\n  if (vertex.type !== ceilType.BARIER) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport function restorePath(endIndex, startIndex, parent) {\r\n  const path = [];\r\n  let target = parent[endIndex];\r\n\r\n  while (target && target !== startIndex) {\r\n    path.unshift(target);\r\n    target = parent[target];\r\n  }\r\n\r\n  if (path.length > 0) {\r\n    path.push(endIndex);\r\n  }\r\n\r\n  path.unshift(startIndex);\r\n\r\n  return path;\r\n}\r\n","import { createLogger, incrementStep } from \"../index\";\r\nimport { graphControll } from \"../graph\";\r\nimport { canVisitedVertex, restorePath } from \"./utils\";\r\nexport function breadthFirstSearch(startIndex, endIndex, graph) {\r\n  const logger = createLogger();\r\n\r\n  let isWork = true;\r\n  const queue = [startIndex];\r\n  const visited = new Map([[startIndex, true]]);\r\n  const parent = {};\r\n\r\n  while (isWork && queue.length > 0) {\r\n    logger.setVertex(queue.map((item) => item));\r\n\r\n    const currentIndex = queue.shift();\r\n\r\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\r\n      const next = graph[currentIndex].siblings[i];\r\n      const vertex = graphControll.getVertexByIndex(next);\r\n\r\n      if (!visited.has(next) && canVisitedVertex(vertex)) {\r\n        queue.push(next);\r\n        visited.set(next, true);\r\n\r\n        parent[next] = currentIndex;\r\n      }\r\n\r\n      if (next === endIndex) {\r\n        isWork = false;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  logger.setDrowAnimated();\r\n\r\n  return restorePath(endIndex, startIndex, parent);\r\n}\r\n","import { graphControll } from \"../graph\";\r\nimport { createLogger } from \"../index\";\r\nimport { canVisitedVertex, restorePath } from \"./utils\";\r\n\r\nexport function depthFirstSearch(startIndex, endIndex, graph) {\r\n  const logger = createLogger();\r\n  let isWork = true;\r\n  const stack = [startIndex];\r\n  const visited = new Map([[startIndex, true]]);\r\n  const parent = {};\r\n\r\n  while (isWork && stack.length > 0) {\r\n    logger.setVertex(stack.map((item) => item));\r\n\r\n    const currentIndex = stack.shift();\r\n\r\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\r\n      const next = graph[currentIndex].siblings[i];\r\n      const vertex = graphControll.getVertexByIndex(next);\r\n\r\n      if (!visited.has(next) && canVisitedVertex(vertex)) {\r\n        stack.unshift(next);\r\n        visited.set(next, true);\r\n\r\n        parent[next] = currentIndex;\r\n      }\r\n\r\n      if (next === endIndex) {\r\n        isWork = false;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  logger.setDrowAnimated();\r\n\r\n  return restorePath(endIndex, startIndex, parent);\r\n}\r\n","import {\r\n  createStore,\r\n  combine,\r\n  createEvent,\r\n  restore,\r\n  createDomain,\r\n} from \"effector\";\r\nimport { breadthFirstSearch } from \"./bred-first-search\";\r\nimport { depthFirstSearch } from \"./depth-first-search\";\r\nimport { clearCanvas, resetStore } from \"../graph\";\r\n\r\nconst algoritmsDomain = createDomain();\r\n\r\nexport const selectAlgoritm = createEvent();\r\nexport const incrementStep = createEvent();\r\nexport const setVertex = createEvent();\r\nexport const setDrowAnimated = createEvent();\r\n\r\nexport const $canDrowAnimated = algoritmsDomain\r\n  .store(false)\r\n  .on(setDrowAnimated, () => true);\r\n\r\nexport const $currentAlgoritm = restore(selectAlgoritm, \"bredth first search\");\r\nexport const $traversedVertexes = algoritmsDomain\r\n  .store([])\r\n  .on(setVertex, (vertexes, vertex) => {\r\n    return [...vertexes, vertex];\r\n  });\r\n\r\nexport const $stepCounter = algoritmsDomain\r\n  .store(0)\r\n  .on(incrementStep, (state) => state + 1);\r\n\r\nexport const $algoritms = createStore([\r\n  {\r\n    searchFunction: breadthFirstSearch,\r\n    name: \"bredth first search\",\r\n  },\r\n  {\r\n    searchFunction: depthFirstSearch,\r\n    name: \"depth first search\",\r\n  },\r\n]);\r\n\r\nexport const $searchAlgoritm = combine(\r\n  $currentAlgoritm,\r\n  $algoritms,\r\n  (currentAlgoritm, algoritms) =>\r\n    algoritms.find((algoritm) => algoritm.name === currentAlgoritm)\r\n);\r\n\r\nexport const createLogger = () => {\r\n  return {\r\n    setDrowAnimated,\r\n    setVertex: (vertex) => {\r\n      setVertex(vertex);\r\n      incrementStep();\r\n    },\r\n  };\r\n};\r\n\r\nalgoritmsDomain.onCreateStore((store) => store.reset(clearCanvas, resetStore));\r\n\r\nselectAlgoritm.watch(clearCanvas);\r\n","import { clearCanvas } from \"../graph\";\r\nimport { renderBarrier, renderPath } from \"../canvas\";\r\nimport { gameStatus, $path, setGameStatus, $gameState } from \"./model\";\r\n\r\nexport class GameLoop {\r\n  constructor() {\r\n    this.count = 0;\r\n    this.animateId = null;\r\n  }\r\n\r\n  start(state, context) {\r\n    const { traversedVertexes, stepCounter } = state;\r\n    const gameState = $gameState.getState();\r\n\r\n    if (gameState.ref === gameStatus.PAUSE) {\r\n      cancelAnimationFrame(this.animateId);\r\n      return;\r\n    }\r\n\r\n    // if (gameState.ref === gameStatus.RESUME) {\r\n    // }\r\n\r\n    // if (gameState === gameStatus.RESTART) {\r\n    //   this.clear();\r\n    //   setGameStatus(gameStatus.START);\r\n    //   return;\r\n    // }\r\n\r\n    if (this.count < stepCounter) {\r\n      renderBarrier(traversedVertexes[this.count], context, \"#ffff0061\");\r\n\r\n      this.animateId = requestAnimationFrame(() =>\r\n        this.start({ traversedVertexes, stepCounter }, context)\r\n      );\r\n\r\n      clearCanvas.watch(() => cancelAnimationFrame(this.animateId));\r\n\r\n      this.count++;\r\n    } else {\r\n      setGameStatus(gameStatus.END_GAME);\r\n      this.clear();\r\n      const path = $path.getState();\r\n      renderPath({\r\n        path,\r\n        context,\r\n      });\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    cancelAnimationFrame(this.animateId);\r\n    this.count = 0;\r\n    this.animateId = null;\r\n  }\r\n}\r\n\r\nexport const gameLoop = new GameLoop();\r\n","import { guard, sample, merge, combine, forward } from \"effector\";\r\nimport {\r\n  colorSchema,\r\n  cellSize,\r\n  pageHeight,\r\n  pageWidth,\r\n  borderSize,\r\n  getLocalSize,\r\n  getGlobalSize,\r\n  drawSquare,\r\n  clearALlCanvas,\r\n  getPositionByIndex,\r\n  getIndexByPosition,\r\n  ceilType,\r\n  convertLocalPositionToGlobal,\r\n} from \"./config\";\r\nimport { configureCanvas } from \"./config-canvas\";\r\nimport { canvasControl } from \"./control-canvas\";\r\nimport {\r\n  setBarrier,\r\n  removeBarrierItem,\r\n  triggerStartPosition,\r\n  triggerEndPosition,\r\n  $graph,\r\n  resetStore,\r\n  clearCanvas,\r\n} from \"./graph\";\r\n\r\nimport {\r\n  $path,\r\n  $isValidGameState,\r\n  gameStatus,\r\n  setGameStatus,\r\n  $gameState,\r\n} from \"./ui/model\";\r\nimport {\r\n  $canDrowAnimated,\r\n  $traversedVertexes,\r\n  $stepCounter,\r\n} from \"./algoritms\";\r\nimport { GameLoop, gameLoop } from \"./ui/loop\";\r\n\r\nconst $algoritState = combine({\r\n  canDrowAnimated: $canDrowAnimated,\r\n  traversedVertexes: $traversedVertexes,\r\n  stepCounter: $stepCounter,\r\n  gameState: $gameState,\r\n});\r\n\r\nexport function renderBarrier(\r\n  barrier,\r\n  context,\r\n  color = colorSchema.blockColor\r\n) {\r\n  for (let i = 0; i < barrier.length; i++) {\r\n    const [x, y] = getPositionByIndex(barrier[i]);\r\n    drawSquare({\r\n      position: [x, y],\r\n      context,\r\n      color,\r\n    });\r\n  }\r\n}\r\n\r\nfunction renderActionsCeil(startEndPosition, context) {\r\n  for (let i = 0; i < startEndPosition.length; i++) {\r\n    const index = getPositionByIndex(startEndPosition[i]);\r\n    drawSquare({\r\n      position: index,\r\n      context,\r\n      color: colorSchema.startEndColor[i],\r\n    });\r\n  }\r\n}\r\n\r\nfunction renderCeil(event, state) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  const [startIndex, endIndex] = state.startEndPosition;\r\n\r\n  return {\r\n    renderForMove: () => {\r\n      if (index !== startIndex && index !== endIndex) {\r\n        setBarrier(index);\r\n      }\r\n    },\r\n    renderForClick: () => {\r\n      if (index !== startIndex && index !== endIndex) {\r\n        removeBarrierItem(index);\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nfunction renderStart(index, state) {\r\n  const findIndex = state.barrier.includes(index);\r\n  const [, endIndex] = state.startEndPosition;\r\n\r\n  if (!findIndex && index !== endIndex) {\r\n    triggerStartPosition(index);\r\n  }\r\n}\r\n\r\nfunction renderEnd(index, state, lastIndex) {\r\n  const findIndex = state.barrier.includes(index);\r\n  const [startIndex] = state.startEndPosition;\r\n\r\n  if (!findIndex && index !== startIndex) {\r\n    triggerEndPosition(index);\r\n  }\r\n}\r\n\r\nlet type = null;\r\nfunction renderLogic(event) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n  const state = $graph.getState();\r\n\r\n  if (!type) {\r\n    type = state.graph[index].type;\r\n  }\r\n\r\n  switch (type) {\r\n    case ceilType.BARIER:\r\n      return renderCeil(event, state).renderForClick();\r\n    case ceilType.START_POSITION:\r\n      return renderStart(index, state);\r\n    case ceilType.END_POSITION:\r\n      return renderEnd(index, state);\r\n    case ceilType.EMPTY:\r\n      return renderCeil(event, state).renderForMove();\r\n  }\r\n}\r\n\r\nexport function renderCanvas(canvas, context) {\r\n  const localSize = getLocalSize(pageWidth, pageHeight);\r\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\r\n  const gridData = buildGrid(context);\r\n\r\n  configureCanvas(canvas, globalSize);\r\n\r\n  canvasControl.registerClickEventToCanvas(canvas);\r\n  canvasControl.addMouseMoveEvent((e, s) => {\r\n    return renderLogic(e, s);\r\n  });\r\n  canvasControl.addMouseUpEvent(() => (type = null));\r\n  canvasControl.addMouseClickEvent((e, s) => renderCeil(e, s).renderForClick());\r\n\r\n  function render(state) {\r\n    clearALlCanvas(context, canvas);\r\n    canvasControl.setState(state);\r\n\r\n    renderActionsCeil(state.startEndPosition, context);\r\n    renderBarrier(state.barrier, context);\r\n\r\n    gridData.applyStyles();\r\n    context.stroke(gridData.grid);\r\n  }\r\n\r\n  sample({\r\n    source: $graph,\r\n    clock: merge([resetStore, clearCanvas]),\r\n  }).watch(render);\r\n\r\n  clearCanvas();\r\n\r\n  $algoritState.watch(({ canDrowAnimated, gameState, ...state }) => {\r\n    if (canDrowAnimated) {\r\n      if (gameState.ref === gameStatus.START) {\r\n        gameLoop.clear();\r\n      }\r\n      gameLoop.start(state, context);\r\n    }\r\n  });\r\n}\r\n\r\nlet prev = null;\r\nexport function renderPath({ context, path = [], color = \"blue\" }) {\r\n  for (let i = 0; i < path.length; i++) {\r\n    const position = getPositionByIndex(path[i]);\r\n    const [x, y] = convertLocalPositionToGlobal(position);\r\n\r\n    if (prev) {\r\n      context.beginPath();\r\n      context.strokeStyle = color;\r\n      context.lineWidth = 2;\r\n      context.moveTo(prev[0], prev[1]);\r\n      context.lineTo(x + cellSize / 2, y + cellSize / 2);\r\n      context.stroke();\r\n    }\r\n\r\n    prev = [x + cellSize / 2, y + cellSize / 2];\r\n  }\r\n\r\n  prev = null;\r\n}\r\n\r\nfunction buildGrid(context) {\r\n  const grid = new Path2D();\r\n\r\n  const localSize = getLocalSize(pageWidth, pageHeight);\r\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\r\n\r\n  for (let i = 0; i <= localSize.w; i++) {\r\n    grid.moveTo(i * cellSize + borderSize, 0);\r\n    grid.lineTo(i * cellSize + borderSize, globalSize.h);\r\n  }\r\n\r\n  for (let i = 0; i <= localSize.h; i++) {\r\n    grid.moveTo(0, i * cellSize + borderSize);\r\n    grid.lineTo(globalSize.w, i * cellSize + borderSize);\r\n  }\r\n\r\n  return {\r\n    grid,\r\n    applyStyles: () => {\r\n      context.lineWidth = borderSize;\r\n      context.strokeStyle = colorSchema.borderColor;\r\n    },\r\n  };\r\n}\r\n\r\nconst canvas = document.getElementById(\"viewport\");\r\n\r\nif (canvas) {\r\n  const context = canvas.getContext(\"2d\");\r\n\r\n  renderCanvas(canvas, context);\r\n}\r\n","import { sample, guard, restore, forward, createDomain } from \"effector\";\r\nimport { $graph, resetStore, clearCanvas } from \"../graph\";\r\nimport { $searchAlgoritm } from \"../algoritms/model\";\r\nimport { gameLoop, clearLoop } from \"./loop\";\r\n\r\nexport const gameStatus = {\r\n  START: \"START\",\r\n  RESTART: \"RESTART\",\r\n  PAUSE: \"PAUSE\",\r\n  RESUME: \"RESUME\",\r\n  CLEAR: \"CLEAR\",\r\n  END_GAME: \"END_GAME\",\r\n};\r\n\r\nconst gameDomain = createDomain(\"game\");\r\n\r\nexport const setGameStatus = gameDomain.event();\r\nexport const resumeAnimated = gameDomain.event();\r\nexport const pauseAnimated = gameDomain.event();\r\n\r\nexport const $path = gameDomain.store([]).reset(resetStore, clearCanvas);\r\n\r\nexport const $gameState = restore(setGameStatus, {\r\n  ref: gameStatus.END_GAME,\r\n}).reset(resetStore);\r\n\r\nexport const $isValidGameState = $gameState.map(\r\n  (state) => state.ref === gameStatus.START\r\n);\r\n\r\nexport const $clearGameState = $gameState.map(\r\n  (state) => state.ref === gameStatus.CLEAR\r\n);\r\n\r\nexport const startGame = guard({\r\n  source: $gameState,\r\n  filter: $isValidGameState,\r\n});\r\n// startGame.watch(clearLoop);\r\n\r\nconst clearGame = guard({\r\n  source: $gameState,\r\n  filter: $clearGameState,\r\n});\r\n\r\n// При остановке игры, нужно полностью очистить состояние приложения\r\nforward({\r\n  from: clearGame,\r\n  to: resetStore,\r\n});\r\n\r\n// При старте игры - нужно удалить полностью те елементы канваса, которых нет в графе\r\nforward({\r\n  from: startGame,\r\n  to: clearCanvas,\r\n});\r\n\r\n// При старте игры, нужно расчитать путь, взяв данные из состояния\r\nsample({\r\n  source: {\r\n    graph: $graph,\r\n    algoritm: $searchAlgoritm,\r\n  },\r\n  clock: startGame,\r\n  target: $path,\r\n  fn: ({ graph, algoritm }) => {\r\n    const [start, end] = graph.startEndPosition;\r\n    // clearLoop();\r\n    return algoritm.searchFunction(start, end, graph.graph);\r\n  },\r\n});\r\n","export function configureCanvas(canvas, { w, h }) {\r\n  canvas.height = h;\r\n  canvas.width = w;\r\n}\r\n","import React from \"react\";\r\nimport { useStore } from \"effector-react\";\r\nimport { renderCanvas } from \"./canvas\";\r\nimport {\r\n  setGameStatus,\r\n  gameStatus,\r\n  $gameState,\r\n  resumeAnimated,\r\n  pauseAnimated,\r\n} from \"./ui/model\";\r\nimport {\r\n  $algoritms,\r\n  selectAlgoritm,\r\n  $currentAlgoritm,\r\n} from \"./algoritms/model\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  const algoritms = useStore($algoritms);\r\n  const currentAlgoritm = useStore($currentAlgoritm);\r\n  const gameState = useStore($gameState);\r\n  const [_, forceUpdate] = React.useReducer(() => ({}));\r\n\r\n  const name = () => {\r\n    forceUpdate();\r\n    return gameStatus.START;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"select-bar\">\r\n        <h2 className=\"select-bar_title\">Select algoritm</h2>\r\n        <ul>\r\n          {algoritms.map((algoritm, index) => (\r\n            <li\r\n              onClick={() => selectAlgoritm(algoritm.name)}\r\n              className={currentAlgoritm === algoritm.name ? \"isActive\" : \"\"}\r\n              key={algoritm.name}\r\n            >\r\n              {algoritm.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"btn-wrapper\">\r\n          <button\r\n            className=\"btn\"\r\n            onClick={() => setGameStatus({ ref: gameStatus.START })}\r\n          >\r\n            start\r\n          </button>\r\n          <button\r\n            className=\"btn\"\r\n            onClick={() => setGameStatus({ ref: gameStatus.PAUSE })}\r\n          >\r\n            pause\r\n          </button>\r\n\r\n          <button\r\n            className=\"btn\"\r\n            onClick={() => setGameStatus({ ref: gameStatus.RESUME })}\r\n          >\r\n            resume\r\n          </button>\r\n\r\n          {/* <button\r\n            className=\"btn\"\r\n            onClick={() => setGameStatus(gameStatus.CLEAR)}\r\n          >\r\n            clear\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n\r\nexport * from \"./algoritms\";\r\nexport * from \"./graph\";\r\nexport * from \"./ui/model\";\r\n"],"sourceRoot":""}