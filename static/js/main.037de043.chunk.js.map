{"version":3,"sources":["config.js","graph/controller.js","graph/utils.js","graph/model.js","algoritms/utils.js","algoritms/bred-first-search.js","algoritms/depth-first-search.js","algoritms/model.js","ui/model.js","ui/utils.js","control-canvas.js","ui/loop.js","canvas.js","config-canvas.js","App.js","index.js"],"names":["cellSize","pageWidth","window","innerWidth","pageHeight","innerHeight","borderSize","colorSchema","borderColor","blockColor","startEndColor","ceilType","START_POSITION","END_POSITION","BARIER","EMPTY","VISITED","getLocalSize","w","h","Math","floor","getGlobalSize","convertLocalPositionToGlobal","_ref","_ref2","Object","slicedToArray","x","y","drawSquare","_ref3","_ref3$color","color","position","context","_convertLocalPosition","_convertLocalPosition2","size","fillStyle","fillRect","getIndexByPosition","_ref4","_ref5","getPositionByIndex","index","graphControll","Graph","classCallCheck","this","graph","cellCount","lastIndex","clear","type","siblings","getLeftSibling","getTopSibling","getRightSibling","getDownSibling","filter","item","objectSpread2","_getLocalSize","setBarrierToGraph","barriers","forEach","barrierIndex","updateGraph","setStartPositionToGraph","startIndex","setEndPositionToGraph","endIndex","graphDomain","createDomain","resetStore","event","clearCanvas","setBarrier","removeBarrierItem","triggerStartPosition","triggerEndPosition","$startEndPosition","store","$barrier","onCreateStore","reset","on","state","includes","concat","toConsumableArray","$graph","combine","barrier","startEndPosition","map","_state$startEndPositi","start","end","createGraph","canVisitedVertex","vertex","restorePath","parent","path","target","unshift","length","push","breadthFirstSearch","logger","createLogger","isWork","queue","visited","Map","setVertex","currentIndex","shift","i","next","getVertexByIndex","has","set","setDrowAnimated","depthFirstSearch","stack","algoritmsDomain","selectAlgoritm","createEvent","incrementStep","$canDrowAnimated","$currentAlgoritm","restore","$traversedVertexes","vertexes","$stepCounter","$algoritms","createStore","searchFunction","name","$searchAlgoritm","currentAlgoritm","algoritms","find","algoritm","watch","setGameStatus","gameStatus","END_GAME","START","RESTART","PAUSE","RESUME","CLEAR","gameDomain","setEndGame","$path","$gameIsEnd","$gameState","startGame","guard","source","checkGameStatus","_len","arguments","status","Array","_key","some","sample","clock","fn","_graph$startEndPositi","canvasControl","Controll","isMouseDown","isMouseMove","listeners","disabledListeners","_this","disabledListener","includeListener","canvas","_this2","addEventListener","userEvent","eventListener","_getLocalSize3","clientX","clientY","getTargetIndex","init","gameLoop","GameLoop","count","animateId","createClass","key","value","traversedVertexes","stepCounter","gameState","getState","gameIsEnd","cancelAnimationFrame","renderBarrier","requestAnimationFrame","_ref2$path","_ref2$color","prev","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","renderPath","$algoritState","canDrowAnimated","undefined","_getPositionByIndex","_getPositionByIndex2","renderCeil","renderForMove","renderForClick","renderLogic","_getLocalSize2","findIndex","renderStart","renderEnd","document","getElementById","getContext","localSize","globalSize","gridData","grid","Path2D","applyStyles","buildGrid","render","clearRect","width","height","clearALlCanvas","setState","renderActionsCeil","configureCanvas","registerClickEventToCanvas","addMouseMoveEvent","e","s","addMouseUpEvent","addMouseClickEvent","merge","objectWithoutProperties","removeAnimation","renderCanvas","App","useStore","react_default","a","createElement","className","onClick","Fragment","__webpack_require__","d","__webpack_exports__","_setVertex","utils_canVisitedVertex","rootElement","ReactDOM"],"mappings":"4NAAaA,EAAW,GACXC,EAAYC,OAAOC,WACnBC,EAAaF,OAAOG,YACpBC,EAAa,GAKbC,EAAc,CACzBC,YAAa,OACbC,WAAY,YACZC,cAAe,CAAC,QAAS,QAGdC,EAAW,CACtBC,eAAgB,iBAChBC,aAAc,eACdC,OAAQ,SACRC,MAAO,QACPC,QAAS,WAGJ,SAASC,EAAaC,EAAGC,GAC9B,MAAO,CACLD,EAAGE,KAAKC,MAAMH,EAAIlB,GAClBmB,EAAGC,KAAKC,MAAMF,EAAInB,IAIf,SAASsB,EAAcJ,EAAGC,GAC/B,MAAO,CACLD,EAAGE,KAAKC,MAAMH,EAAIlB,GAClBmB,EAAGC,KAAKC,MAAMF,EAAInB,IAIf,SAASuB,EAATC,GAA8C,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,GAAPI,EAAOH,EAAA,GAAJI,EAAIJ,EAAA,GACnD,MAAO,CAACG,EAAI5B,EAAU6B,EAAI7B,GAGrB,SAAS8B,EAATC,GAIJ,IAAAC,EAAAD,EAHDE,aAGC,IAAAD,EAHO,qBAGPA,EAFDE,EAECH,EAFDG,SACAC,EACCJ,EADDI,QACCC,EACcb,EAA6BW,GAD3CG,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GACMR,EADNS,EAAA,GACSR,EADTQ,EAAA,GAEKC,EAAOtC,EAAwB,EAAbM,EAExB6B,EAAQI,UAAYN,EACpBE,EAAQK,SAASZ,EAAiB,EAAbtB,EAAgBuB,EAAiB,EAAbvB,EAAgBgC,EAAMA,GAO1D,SAASG,EAATC,GAAoC,IAAAC,EAAAjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GAAPd,EAAOe,EAAA,GAGzC,OAHyCA,EAAA,GAC3B1B,EAAahB,EAAWG,GAA9Bc,EAEOU,EAGV,SAASgB,EAAmBC,GAAO,IAChC3B,EAAMD,EAAahB,EAAWG,GAA9Bc,EACFW,EAAIT,KAAKC,MAAMwB,EAAQ3B,GAG7B,MAAO,CAFG2B,EAAQhB,EAAIX,EAEXW,4BCsBAiB,EAAgB,eAtF3B,SAAAC,EAAAvB,GAAsB,IAARN,EAAQM,EAARN,EAAGC,EAAKK,EAALL,EAAKO,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAAF,GACpBE,KAAKC,MAAQ,GACbD,KAAKE,UAAYjC,EAAIC,EACrB8B,KAAKG,UAAY,+DAIjBH,KAAKI,QACL,IAAK,IAAIR,EAAQ,EAAGA,EAAQI,KAAKE,UAAWN,IAC1CI,KAAKC,MAAML,GAAS,CAClBS,KAAM3C,EAASI,MACfwC,SAAU,CACRN,KAAKO,eAAeX,GACpBI,KAAKQ,cAAcZ,GACnBI,KAAKS,gBAAgBb,GACrBI,KAAKU,eAAed,IACpBe,OAAO,SAACC,GAAD,MAA0B,qBAATA,KAI9B,OAAOZ,8CAGQJ,GACf,OAAOI,KAAKC,MAAML,0CAGS,IAAfA,EAAepB,EAAfoB,MAAOS,EAAQ7B,EAAR6B,KACfL,KAAKC,MAAML,KACbI,KAAKC,MAAML,GAAXnB,OAAAoC,EAAA,EAAApC,CAAA,GAAyBuB,KAAKC,MAAML,GAApC,CAA4CS,SACxCA,IAAS3C,EAASG,SACpBmC,KAAKC,MAAML,GAAXnB,OAAAoC,EAAA,EAAApC,CAAA,GAAyBuB,KAAKC,MAAML,GAApC,CAA4CS,OAAMC,SAAU,8CAKnDV,GAAO,IAAAkB,EACH9C,EAAahB,EAAWG,GAAjCc,EADY6C,EACZ7C,EAAGC,EADS4C,EACT5C,EAIX,GAFyBC,KAAKC,MAAMwB,EAAQ3B,GAAKC,EAAI,EAGnD,OAAO0B,EAAQ3B,wCAIL2B,GAAO,IACX3B,EAAMD,EAAahB,EAAWG,GAA9Bc,EAIR,GAFwBE,KAAKC,MAAMwB,EAAQ3B,GAAK,EAG9C,OAAO2B,EAAQ3B,0CAIH2B,GAAO,IACb3B,EAAMD,EAAahB,EAAWG,GAA9Bc,EAIR,GAF0B2B,EAAQ3B,EAAIA,EAAI,EAGxC,OAAO2B,EAAQ,yCAIJA,GAKb,GAFyBA,EAFX5B,EAAahB,EAAWG,GAA9Bc,EAE6B,EAGnC,OAAO2B,EAAQ,qCAKjB,OAAOI,KAAKC,sCAKZ,OADAD,KAAKC,MAAQ,GACND,cAIkB,CAAUhC,EAAahB,EAAWG,WCvFxD,SAAS4D,EAAkBd,EAAOe,GACvCA,EAASC,QAAQ,SAACC,GAChBjB,EAAMkB,YAAY,CAAEvB,MAAOsB,EAAcb,KAAM3C,EAASG,WAIrD,SAASuD,EAAwBnB,EAAOoB,GAC7CpB,EAAMkB,YAAY,CAAEvB,MAAOyB,EAAYhB,KAAM3C,EAASC,iBAGjD,SAAS2D,EAAsBrB,EAAOsB,GAC3CtB,EAAMkB,YAAY,CAAEvB,MAAO2B,EAAUlB,KAAM3C,EAASE,eCJtD,IAAM4D,EAAcC,YAAa,SAEpBC,EAAaF,EAAYG,QACzBC,EAAcJ,EAAYG,QAE1BE,EAAaL,EAAYG,QACzBG,EAAoBN,EAAYG,QAEhCI,EAAuBP,EAAYG,QACnCK,EAAqBR,EAAYG,QAEjCM,EAAoBT,EAAYU,MAAM,CHftB,EACF,MGmBdC,EAAWX,EAAYU,MAAM,IAE1CV,EAAYY,cAAc,SAACF,GAAD,OAAWA,EAAMG,MAAMX,KAEjDS,EACGG,GAAGT,EAAY,SAACU,EAAO3C,GAGtB,OAFoB2C,EAAMC,SAAS5C,GAEd2C,EAAH,GAAAE,OAAAhE,OAAAiE,EAAA,EAAAjE,CAAe8D,GAAf,CAAsB3C,MAEzC0C,GAAGR,EAAmB,SAACS,EAAO3C,GAAR,OACrB2C,EAAM5B,OAAO,SAACC,GAAD,OAAUA,IAAShB,MAGpCqC,EACGK,GAAGP,EAAsB,SAACQ,EAAO3C,GAAR,MAAkB,CAACA,EAAO2C,EAAM,MACzDD,GAAGN,EAAoB,SAACO,EAAO3C,GAAR,MAAkB,CAAC2C,EAAM,GAAI3C,KAEhD,IAAM+C,EAASC,YAAQ,CAC5BC,QAASV,EACTW,iBAAkBb,IACjBc,IAAI,SAACR,GAAU,IAAAS,EAAAvE,OAAAC,EAAA,EAAAD,CACK8D,EAAMO,iBADX,GACTG,EADSD,EAAA,GACFE,EADEF,EAAA,GAGV/C,EAAQJ,EAAcsD,cAM5B,OAJApC,EAAkBd,EAAOsC,EAAMM,SAC/BzB,EAAwBnB,EAAOgD,GAC/B3B,EAAsBrB,EAAOiD,GAEtBzE,OAAAoC,EAAA,EAAApC,CAAA,GAAK8D,EAAZ,CAAmBtC,MAAOA,EAAMA,UCrDrBmD,EAAmB,SAACC,GAC/B,OAAIA,EAAOhD,OAAS3C,EAASG,QAMxB,SAASyF,EAAY/B,EAAUF,EAAYkC,GAIhD,IAHA,IAAMC,EAAO,GACTC,EAASF,EAAOhC,GAEbkC,GAAUA,IAAWpC,GAC1BmC,EAAKE,QAAQD,GACbA,EAASF,EAAOE,GASlB,OANID,EAAKG,OAAS,GAChBH,EAAKI,KAAKrC,GAGZiC,EAAKE,QAAQrC,GAENmC,ECrBF,SAASK,EAAmBxC,EAAYE,EAAUtB,GAQvD,IAPA,IAAM6D,EAASC,KAEXC,GAAS,EACPC,EAAQ,CAAC5C,GACT6C,EAAU,IAAIC,IAAI,CAAC,CAAC9C,GAAY,KAChCkC,EAAS,GAERS,GAAUC,EAAMN,OAAS,GAAG,CACjCG,EAAOM,UAAUH,EAAMlB,IAAI,SAACnC,GAAD,OAAUA,KAIrC,IAFA,IAAMyD,EAAeJ,EAAMK,QAElBC,EAAI,EAAGA,EAAItE,EAAMoE,GAAc/D,SAASqD,OAAQY,IAAK,CAC5D,IAAMC,EAAOvE,EAAMoE,GAAc/D,SAASiE,GACpClB,EAASxD,EAAc4E,iBAAiBD,GAS9C,IAPKN,EAAQQ,IAAIF,IAASpB,EAAiBC,KACzCY,EAAML,KAAKY,GACXN,EAAQS,IAAIH,GAAM,GAElBjB,EAAOiB,GAAQH,GAGbG,IAASjD,EAAU,CACrByC,GAAS,EACT,QAON,OAFAF,EAAOc,kBAEAtB,EAAY/B,EAAUF,EAAYkC,GChCpC,SAASsB,EAAiBxD,EAAYE,EAAUtB,GAOrD,IANA,IAAM6D,EAASC,KACXC,GAAS,EACPc,EAAQ,CAACzD,GACT6C,EAAU,IAAIC,IAAI,CAAC,CAAC9C,GAAY,KAChCkC,EAAS,GAERS,GAAUc,EAAMnB,OAAS,GAAG,CACjCG,EAAOM,UAAUU,EAAM/B,IAAI,SAACnC,GAAD,OAAUA,KAIrC,IAFA,IAAMyD,EAAeS,EAAMR,QAElBC,EAAI,EAAGA,EAAItE,EAAMoE,GAAc/D,SAASqD,OAAQY,IAAK,CAC5D,IAAMC,EAAOvE,EAAMoE,GAAc/D,SAASiE,GACpClB,EAASxD,EAAc4E,iBAAiBD,GAS9C,IAPKN,EAAQQ,IAAIF,IAASpB,EAAiBC,KACzCyB,EAAMpB,QAAQc,GACdN,EAAQS,IAAIH,GAAM,GAElBjB,EAAOiB,GAAQH,GAGbG,IAASjD,EAAU,CACrByC,GAAS,EACT,QAON,OAFAF,EAAOc,kBAEAtB,EAAY/B,EAAUF,EAAYkC,GCxB3C,IAAMwB,EAAkBtD,cAEXuD,EAAiBC,cACjBC,EAAgBD,cAChBb,EAAYa,cACZL,EAAkBK,cAElBE,EAAmBJ,EAC7B7C,OAAM,GACNI,GAAGsC,EAAiB,kBAAM,IAEhBQ,EAAmBC,YAAQL,EAAgB,uBAC3CM,EAAqBP,EAC/B7C,MAAM,IACNI,GAAG8B,EAAW,SAACmB,EAAUlC,GACxB,SAAAZ,OAAAhE,OAAAiE,EAAA,EAAAjE,CAAW8G,GAAX,CAAqBlC,MAGZmC,EAAeT,EACzB7C,MAAM,GACNI,GAAG4C,EAAe,SAAC3C,GAAD,OAAWA,EAAQ,IAE3BkD,GAAaC,YAAY,CACpC,CACEC,eAAgB9B,EAChB+B,KAAM,uBAER,CACED,eAAgBd,EAChBe,KAAM,wBAIGC,GAAkBjD,YAC7BwC,EACAK,GACA,SAACK,EAAiBC,GAAlB,OACEA,EAAUC,KAAK,SAACC,GAAD,OAAcA,EAASL,OAASE,MAGtC/B,GAAe,WAC1B,MAAO,CACLa,kBACAR,UAAW,SAACf,GACVe,EAAUf,GACV6B,OAKNH,EAAgB3C,cAAc,SAACF,GAAD,OAAWA,EAAMG,MAAMT,EAAaF,KAElEsD,EAAekB,MAAM,WAEnBC,GAAcC,GAAWC,YC7DpB,IAAMD,GAAa,CACxBE,MAAO,QACPC,QAAS,UACTC,MAAO,QACPC,OAAQ,SACRC,MAAO,QACPL,SAAU,YAGNM,GAAalF,YAAa,QAEnB0E,GAAgBQ,GAAWhF,QAC3BiF,GAAaD,GAAWhF,QAExBkF,GAAQF,GAAWzE,MAAM,IAAIG,MAAMX,EAAYE,GAC/CkF,GAAaH,GACvBzE,OAAM,GACNI,GAAGsE,GAAY,kBAAM,IACrBvE,MAAMX,EAAYE,GAERmF,GAAa1B,YAAQc,GAAeC,GAAWC,UAAUhE,MACpEX,GAGWsF,GAAYC,YAAM,CAC7BC,OAAQH,GACRpG,OAAQoG,GAAWhE,IAAI,SAACR,GAAD,OAAWA,IAAU6D,GAAWE,UC/BlD,SAASa,GAAgB1D,GAAmB,QAAA2D,EAAAC,UAAA1D,OAAR2D,EAAQ,IAAAC,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAARF,EAAQE,EAAA,GAAAH,UAAAG,GACjD,OAAOF,EAAOG,KAAK,SAAC7G,GAAD,OAAU6C,IAAW7C,IDiC1CqG,YAAM,CACJC,OAAQH,GACRpG,OAAQoG,GAAWhE,IAAI,SAACR,GAAD,OAAWA,IAAU6D,GAAWM,QACvDjD,OAAQ/B,IAGVuF,YAAM,CACJC,OAAQH,GACRpG,OAAQoG,GAAWhE,IAAI,SAACR,GAAD,OAAWA,IAAU6D,GAAWC,WACvD5C,OAAQmD,KAUVc,YAAO,CACLR,OAAQ,CACNjH,MAAO0C,EACPsD,SAAUJ,IAEZ8B,MAAOX,GACPvD,OAAQoD,GACRe,GAAI,SAAArJ,GAAyB,IAAtB0B,EAAsB1B,EAAtB0B,MAAOgG,EAAe1H,EAAf0H,SAAe4B,EAAApJ,OAAAC,EAAA,EAAAD,CACNwB,EAAM6C,iBADA,GACpBG,EADoB4E,EAAA,GACb3E,EADa2E,EAAA,GAK3B,OAFAjG,IAEOqE,EAASN,eAAe1C,EAAOC,EAAKjD,EAAMA,cEkDxC6H,GAAgB,eA9G3B,SAAAC,IAAetJ,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAA+H,GACb/H,KAAKgI,aAAc,EACnBhI,KAAKiI,aAAc,EACnBjI,KAAKkI,UAAY,GACjBlI,KAAKuC,MAAQ,GACbvC,KAAKG,UAAY,KACjBH,KAAKmI,kBAAoB,sDAGpB,IAAAC,EAAApI,KAgBL,OAfA+G,GAAWb,MAAM,SAAC3D,GAEd4E,GACE5E,EACA6D,GAAWE,MACXF,GAAWI,MACXJ,GAAWK,QAGb2B,EAAKC,mBAELD,EAAKE,oBAIFtI,wDAGkBuI,GAAQ,IAAAC,EAAAxI,KACjCuI,EAAOE,iBAAiB,YAAa,SAAC9G,GACpC6G,EAAKN,UACFvH,OAAO,SAAC+H,GAAD,MAAkC,cAAnBA,EAAUrI,OAChCY,QAAQ,SAACyH,GAAD,OAAeA,EAAUC,kBAEpCH,EAAKR,aAAc,EACnBQ,EAAKP,aAAc,IAGrBM,EAAOE,iBAAiB,UAAW,SAAC9G,GAClC6G,EAAKR,aAAc,EACnBQ,EAAKN,UACFvH,OAAO,SAAC+H,GAAD,MAAkC,YAAnBA,EAAUrI,OAChCY,QAAQ,SAACyH,GAAD,OAAeA,EAAUC,cAAchH,EAAO6G,EAAKjG,WAGhEgG,EAAOE,iBAAiB,QAAS,SAAC9G,GAChC6G,EAAKN,UACFvH,OAAO,SAAC+H,GAAD,MAAkC,UAAnBA,EAAUrI,OAChCY,QAAQ,SAACyH,GACHF,EAAKP,aACRS,EAAUC,cAAchH,EAAO6G,EAAKjG,WAK5CgG,EAAOE,iBAAiB,YAAa,SAAC9G,GACpC,IAAM/B,EVSL,SAAwB+B,GAAO,IAAAiH,EACnB5K,EAAa2D,EAAMkH,QAASlH,EAAMmH,SAGnD,OAFctJ,EAAmB,CAFGoJ,EAC5B3K,EAD4B2K,EACzB1K,IUVO6K,CAAepH,GAEzB6G,EAAKR,aAAepI,IAAU4I,EAAKrI,YACrCqI,EAAKrI,UAAYP,EACjB4I,EAAKP,aAAc,EACnBO,EAAKN,UACFvH,OAAO,SAAC+H,GAAD,MAAkC,cAAnBA,EAAUrI,OAChCY,QAAQ,SAACyH,GAAD,OACPA,EAAUC,cAAchH,EAAO6G,EAAKjG,MAAOiG,EAAKrI,2DAOxDH,KAAKI,kDAILJ,KAAKkI,UAAYlI,KAAKmI,4DAGNQ,GAChB3I,KAAKkI,UAAUtE,KAAK,CAAEvD,KAAM,YAAasI,0DAG3BA,GACd3I,KAAKkI,UAAUtE,KAAK,CAAEvD,KAAM,UAAWsI,4DAGvBA,GAChB3I,KAAKkI,UAAUtE,KAAK,CAAEvD,KAAM,YAAasI,6DAGxBA,GACjB3I,KAAKkI,UAAUtE,KAAK,CAAEvD,KAAM,QAASsI,mDAG9BpG,GAEP,OADAvC,KAAKuC,MAAQA,EACNvC,qCAIHA,KAAKkI,UAAUvE,OAAS,IAC1B3D,KAAKmI,kBAAoBnI,KAAKkI,UAC9BlI,KAAKgI,aAAc,EACnBhI,KAAKiI,aAAc,EACnBjI,KAAKkI,UAAY,GACjBlI,KAAKG,UAAY,gBAMvB2H,GAAckB,OC1GP,IA0DMC,GAAW,IA1DxB,WACE,SAAAC,IAAezK,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAAkJ,GACblJ,KAAKmJ,MAAQ,EACbnJ,KAAKoJ,UAAY,KAHrB,OAAA3K,OAAA4K,EAAA,EAAA5K,CAAAyK,EAAA,EAAAI,IAAA,QAAAC,MAAA,SAMQhH,EAAOrD,GAAS,IAAAkJ,EAAApI,KACZwJ,EAAmCjH,EAAnCiH,kBAAmBC,EAAgBlH,EAAhBkH,YACrBC,EAAY3C,GAAW4C,WACvBC,EAAY9C,GAAW6C,WAEzBD,IAActD,GAAWC,WAKzBqD,IAActD,GAAWI,MAKzBkD,IAActD,GAAWK,QAAUmD,EACrCC,qBAAqB7J,KAAKoJ,WAIxBpJ,KAAKmJ,MAAQM,GACfK,GAAcN,EAAkBxJ,KAAKmJ,OAAQjK,EAAS,aAEtDc,KAAKoJ,UAAYW,sBAAsB,kBACrC3B,EAAKnF,MAAM,CAAEuG,oBAAmBC,eAAevK,KAGjD0C,EAAYsE,MAAM,kBAAM2D,qBAAqBzB,EAAKgB,aAElDpJ,KAAKmJ,UAELhD,GAAcC,GAAWC,UACzBrG,KAAKI,QCoIJ,SAAA5B,GACL,IADiE,IAAtCU,EAAsCV,EAAtCU,QAAsC8K,EAAAxL,EAA7BgF,YAA6B,IAAAwG,EAAtB,GAAsBA,EAAAC,EAAAzL,EAAlBQ,aAAkB,IAAAiL,EAAV,OAAUA,EACxD1F,EAAI,EAAGA,EAAIf,EAAKG,OAAQY,IAAK,CACpC,IAAMtF,EAAWU,EAAmB6D,EAAKe,IADLpF,EAErBb,EAA6BW,GAFRG,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAE7BR,EAF6BS,EAAA,GAE1BR,EAF0BQ,EAAA,GAIhC8K,KACFhL,EAAQiL,YACRjL,EAAQkL,YAAcpL,EACtBE,EAAQmL,UAAY,EACpBnL,EAAQoL,OAAOJ,GAAK,GAAIA,GAAK,IAC7BhL,EAAQqL,OAAO5L,EAAI5B,EAAW,EAAG6B,EAAI7B,EAAW,GAChDmC,EAAQsL,UAGVN,GAAO,CAACvL,EAAI5B,EAAW,EAAG6B,EAAI7B,EAAW,GAG3CmN,GAAO,KDnJHO,CAAW,CACTjH,KAFWqD,GAAM8C,WAGjBzK,aAzBF2K,qBAAqB7J,KAAKoJ,cAjBhC,CAAAE,IAAA,QAAAC,MAAA,WAgDIM,qBAAqB7J,KAAKoJ,WAC1BpJ,KAAKmJ,MAAQ,EACbnJ,KAAKoJ,UAAY,OAlDrB,CAAAE,IAAA,kBAAAC,MAAA,WAsDIM,qBAAqB7J,KAAKoJ,eAtD9BF,EAAA,ICgCMwB,GAAgB9H,YAAQ,CAC5B+H,gBAAiBxF,EACjBqE,kBAAmBlE,EACnBmE,YAAajE,EACbkE,UAAW3C,KAGN,SAAS+C,GACdjH,EACA3D,GAGA,IADA,IADAF,EACAqI,UAAA1D,OAAA,QAAAiH,IAAAvD,UAAA,GAAAA,UAAA,GADQ/J,EAAYE,WAEX+G,EAAI,EAAGA,EAAI1B,EAAQc,OAAQY,IAAK,KAAAsG,EACxBlL,EAAmBkD,EAAQ0B,IADHuG,EAAArM,OAAAC,EAAA,EAAAD,CAAAoM,EAAA,GAEvChM,EAAW,CACTI,SAAU,CAH2B6L,EAAA,GAAAA,EAAA,IAIrC5L,UACAF,WAgBN,SAAS+L,GAAWpJ,EAAOY,GAAO,IAAAzB,EACf9C,EAAa2D,EAAMkH,QAASlH,EAAMmH,SAC7ClJ,EAAQJ,EAAmB,CAFDsB,EACxB7C,EADwB6C,EACrB5C,IADqB8E,EAAAvE,OAAAC,EAAA,EAAAD,CAID8D,EAAMO,iBAJL,GAIzBzB,EAJyB2B,EAAA,GAIbzB,EAJayB,EAAA,GAMhC,MAAO,CACLgI,cAAe,WACTpL,IAAUyB,GAAczB,IAAU2B,GACpCM,EAAWjC,IAGfqL,eAAgB,WACVrL,IAAUyB,GAAczB,IAAU2B,GACpCO,EAAkBlC,KAwB1B,IAAIS,GAAO,KACX,SAAS6K,GAAYvJ,GAAO,IAAAwJ,EACTnN,EAAa2D,EAAMkH,QAASlH,EAAMmH,SAC7ClJ,EAAQJ,EAAmB,CAFP2L,EAClBlN,EADkBkN,EACfjN,IAELqE,EAAQI,EAAOgH,WAMrB,OAJKtJ,KACHA,GAAOkC,EAAMtC,MAAML,GAAOS,MAGpBA,IACN,KAAK3C,EAASG,OACZ,OAAOkN,GAAWpJ,EAAOY,GAAO0I,iBAClC,KAAKvN,EAASC,eACZ,OAhCN,SAAqBiC,EAAO2C,GAC1B,IAAM6I,EAAY7I,EAAMM,QAAQL,SAAS5C,GAChC2B,EAFwB9C,OAAAC,EAAA,EAAAD,CAEZ8D,EAAMO,iBAFM,MAI5BsI,GAAaxL,IAAU2B,GAC1BQ,EAAqBnC,GA2BZyL,CAAYzL,EAAO2C,GAC5B,KAAK7E,EAASE,aACZ,OAzBN,SAAmBgC,EAAO2C,EAAOpC,GAC/B,IAAMiL,EAAY7I,EAAMM,QAAQL,SAAS5C,GAClCyB,EAFmC5C,OAAAC,EAAA,EAAAD,CAErB8D,EAAMO,iBAFe,MAIrCsI,GAAaxL,IAAUyB,GAC1BW,EAAmBpC,GAoBV0L,CAAU1L,EAAO2C,GAC1B,KAAK7E,EAASI,MACZ,OAAOiN,GAAWpJ,EAAOY,GAAOyI,iBAgDtC,IAAId,GAAO,KA8CX,IAAM3B,GAASgD,SAASC,eAAe,YAEvC,GAAIjD,GAAQ,CACV,IAAMrJ,GAAUqJ,GAAOkD,WAAW,OA7F7B,SAAsBlD,EAAQrJ,GACnC,IAAMwM,EAAY1N,EAAahB,EAAWG,GACpCwO,EAAatN,EAAcqN,EAAUzN,EAAGyN,EAAUxN,GAClD0N,EA8DR,SAAmB1M,GAMjB,IALA,IAAM2M,EAAO,IAAIC,OAEXJ,EAAY1N,EAAahB,EAAWG,GACpCwO,EAAatN,EAAcqN,EAAUzN,EAAGyN,EAAUxN,GAE/CqG,EAAI,EAAGA,GAAKmH,EAAUzN,EAAGsG,IAChCsH,EAAKvB,OAAO/F,EAAIxH,EAAWM,EAAY,GACvCwO,EAAKtB,OAAOhG,EAAIxH,EAAWM,EAAYsO,EAAWzN,GAGpD,IAAK,IAAIqG,EAAI,EAAGA,GAAKmH,EAAUxN,EAAGqG,IAChCsH,EAAKvB,OAAO,EAAG/F,EAAIxH,EAAWM,GAC9BwO,EAAKtB,OAAOoB,EAAW1N,EAAGsG,EAAIxH,EAAWM,GAG3C,MAAO,CACLwO,OACAE,YAAa,WACX7M,EAAQmL,UAAYhN,EACpB6B,EAAQkL,YAAc9M,EAAYC,cAlFrByO,CAAU9M,GAW3B,SAAS+M,EAAO1J,IZjGX,SAAwBrD,EAASqJ,GAC/BrJ,EAAQgN,UAAU,EAAG,EAAG3D,EAAO4D,MAAO5D,EAAO6D,QYiGlDC,CAAenN,EAASqJ,GACxBT,GAAcwE,SAAS/J,GAvF3B,SAA2BO,EAAkB5D,GAC3C,IAAK,IAAIqF,EAAI,EAAGA,EAAIzB,EAAiBa,OAAQY,IAE3C1F,EAAW,CACTI,SAFYU,EAAmBmD,EAAiByB,IAGhDrF,UACAF,MAAO1B,EAAYG,cAAc8G,KAmFnCgI,CAAkBhK,EAAMO,iBAAkB5D,GAC1C4K,GAAcvH,EAAMM,QAAS3D,GAE7B0M,EAASG,cACT7M,EAAQsL,OAAOoB,EAASC,OC7JrB,SAAyBtD,EAAzBhK,GAA2C,IAARN,EAAQM,EAARN,EAAGC,EAAKK,EAALL,EAC3CqK,EAAO6D,OAASlO,EAChBqK,EAAO4D,MAAQlO,ED0IfuO,CAAgBjE,EAAQoD,GAExB7D,GAAc2E,2BAA2BlE,GACzCT,GAAc4E,kBAAkB,SAACC,EAAGC,GAClC,OAAO1B,GAAYyB,KAErB7E,GAAc+E,gBAAgB,kBAAOxM,GAAO,OAC5CyH,GAAcgF,mBAAmB,SAACH,EAAGC,GAAJ,OAAU7B,GAAW4B,EAAGC,GAAG3B,mBAa5DtI,EAAOuD,MAAM+F,GAEbvE,YAAO,CACLR,OAAQvE,EACRgF,MAAOoF,YAAM,CAACrL,EAAYE,MACzBsE,MAAM+F,GAETvB,GAAcxE,MAAM,SAAA3H,GAA8C,IAA3CoM,EAA2CpM,EAA3CoM,gBAAiBjB,EAA0BnL,EAA1BmL,UAAcnH,EAAY9D,OAAAuO,EAAA,EAAAvO,CAAAF,EAAA,iCAC5DoM,IACEjB,IAActD,GAAWE,OAC3B2C,GAAS7I,QAGX6I,GAASgE,kBACThE,GAAShG,MAAMV,EAAOrD,MAwD1BgO,CAAa3E,GAAQrJ,UEnNR,SAASiO,KACtB,IAAMpH,EAAYqH,YAAS3H,IACrBK,EAAkBsH,YAAShI,GAC3BsE,EAAY0D,YAASrG,IAE3B,OACEsG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,mBACAH,EAAAC,EAAAC,cAAA,UACGxH,EAAUhD,IAAI,SAACkD,EAAUrG,GAAX,OACbyN,EAAAC,EAAAC,cAAA,MACEE,QAAS,kBAAMzI,EAAeiB,EAASL,OACvC4H,UAAW1H,IAAoBG,EAASL,KAAO,WAAa,GAC5D0D,IAAKrD,EAASL,MAEbK,EAASL,SAIhByH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,MACVC,QAAS,kBAAMtH,GAAcC,GAAWE,SAF1C,SAMCa,GACCuC,EACAtD,GAAWE,MACXF,GAAWI,MACXJ,GAAWK,SAEX4G,EAAAC,EAAAC,cAAAF,EAAAC,EAAAI,SAAA,KACEL,EAAAC,EAAAC,cAAA,UACEC,UAAU,MACVC,QAAS,kBAAMtH,GAAcC,GAAWI,SAF1C,SAOA6G,EAAAC,EAAAC,cAAA,UACEC,UAAU,MACVC,QAAS,kBAAMtH,GAAcC,GAAWK,UAF1C,WASJ4G,EAAAC,EAAAC,cAAA,UACEC,UAAU,MACVC,QAAS,kBAAMtH,GAAcC,GAAWM,SAF1C,YCrEViH,EAAAC,EAAAC,EAAA,mCAAA7I,IAAA2I,EAAAC,EAAAC,EAAA,kCAAA3I,IAAAyI,EAAAC,EAAAC,EAAA,8BAAAC,IAAAH,EAAAC,EAAAC,EAAA,oCAAAjJ,IAAA+I,EAAAC,EAAAC,EAAA,qCAAA1I,IAAAwI,EAAAC,EAAAC,EAAA,qCAAAzI,IAAAuI,EAAAC,EAAAC,EAAA,uCAAAvI,IAAAqI,EAAAC,EAAAC,EAAA,iCAAArI,IAAAmI,EAAAC,EAAAC,EAAA,+BAAApI,KAAAkI,EAAAC,EAAAC,EAAA,oCAAAhI,KAAA8H,EAAAC,EAAAC,EAAA,iCAAA9J,KAAA4J,EAAAC,EAAAC,EAAA,qCAAAE,IAAAJ,EAAAC,EAAAC,EAAA,gCAAAvK,IAAAqK,EAAAC,EAAAC,EAAA,uCAAAhK,IAAA8J,EAAAC,EAAAC,EAAA,qCAAAhJ,IAAA8I,EAAAC,EAAAC,EAAA,kCAAAhO,IAAA8N,EAAAC,EAAAC,EAAA,+BAAAnM,IAAAiM,EAAAC,EAAAC,EAAA,gCAAAjM,IAAA+L,EAAAC,EAAAC,EAAA,+BAAAhM,IAAA8L,EAAAC,EAAAC,EAAA,sCAAA/L,IAAA6L,EAAAC,EAAAC,EAAA,yCAAA9L,IAAA4L,EAAAC,EAAAC,EAAA,uCAAA7L,IAAA2L,EAAAC,EAAAC,EAAA,sCAAA5L,IAAA0L,EAAAC,EAAAC,EAAA,6BAAA1L,IAAAwL,EAAAC,EAAAC,EAAA,2BAAAlL,IAAAgL,EAAAC,EAAAC,EAAA,sCAAA9M,IAAA4M,EAAAC,EAAAC,EAAA,4CAAAzM,IAAAuM,EAAAC,EAAAC,EAAA,0CAAAvM,IAAAqM,EAAAC,EAAAC,EAAA,+BAAAzH,KAAAuH,EAAAC,EAAAC,EAAA,kCAAA1H,KAAAwH,EAAAC,EAAAC,EAAA,+BAAAjH,KAAA+G,EAAAC,EAAAC,EAAA,0BAAAhH,KAAA8G,EAAAC,EAAAC,EAAA,+BAAA/G,KAAA6G,EAAAC,EAAAC,EAAA,+BAAA9G,KAAA4G,EAAAC,EAAAC,EAAA,8BAAA7G,KAIA,IAAMgH,GAAczC,SAASC,eAAe,QAC5CyC,IAAShC,OAAOoB,EAAAC,EAAAC,cAACJ,GAAD,MAASa","file":"static/js/main.037de043.chunk.js","sourcesContent":["export const cellSize = 35;\r\nexport const pageWidth = window.innerWidth;\r\nexport const pageHeight = window.innerHeight;\r\nexport const borderSize = 0.5;\r\nexport const boardLength = pageWidth * pageHeight;\r\nexport const startPosition = 0;\r\nexport const endPosition = 110;\r\n\r\nexport const colorSchema = {\r\n  borderColor: \"#000\",\r\n  blockColor: \"#8080805c\",\r\n  startEndColor: [\"green\", \"red\"],\r\n};\r\n\r\nexport const ceilType = {\r\n  START_POSITION: \"START_POSITION\",\r\n  END_POSITION: \"END_POSITION\",\r\n  BARIER: \"BARIER\",\r\n  EMPTY: \"EMPTY\",\r\n  VISITED: \"VISITED\",\r\n};\r\n\r\nexport function getLocalSize(w, h) {\r\n  return {\r\n    w: Math.floor(w / cellSize),\r\n    h: Math.floor(h / cellSize),\r\n  };\r\n}\r\n\r\nexport function getGlobalSize(w, h) {\r\n  return {\r\n    w: Math.floor(w * cellSize),\r\n    h: Math.floor(h * cellSize),\r\n  };\r\n}\r\n\r\nexport function convertLocalPositionToGlobal([x, y]) {\r\n  return [x * cellSize, y * cellSize];\r\n}\r\n\r\nexport function drawSquare({\r\n  color = \"rgb(152, 251, 152)\",\r\n  position,\r\n  context,\r\n}) {\r\n  const [x, y] = convertLocalPositionToGlobal(position);\r\n  const size = cellSize - borderSize * 2;\r\n\r\n  context.fillStyle = color;\r\n  context.fillRect(x + borderSize * 2, y + borderSize * 2, size, size);\r\n}\r\n\r\nexport function clearALlCanvas(context, canvas) {\r\n  return context.clearRect(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\nexport function getIndexByPosition([x, y]) {\r\n  const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n  return y * w + x;\r\n}\r\n\r\nexport function getPositionByIndex(index) {\r\n  const { w } = getLocalSize(pageWidth, pageHeight);\r\n  const y = Math.floor(index / w);\r\n  const x = index - y * w;\r\n\r\n  return [x, y];\r\n}\r\n\r\nexport function getTargetIndex(event) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  return index;\r\n}\r\n","import { ceilType, pageWidth, getLocalSize, pageHeight } from \"../config\";\r\n\r\nclass Graph {\r\n  constructor({ w, h }) {\r\n    this.graph = {};\r\n    this.cellCount = w * h;\r\n    this.lastIndex = null;\r\n  }\r\n\r\n  createGraph() {\r\n    this.clear();\r\n    for (let index = 0; index < this.cellCount; index++) {\r\n      this.graph[index] = {\r\n        type: ceilType.EMPTY,\r\n        siblings: [\r\n          this.getLeftSibling(index),\r\n          this.getTopSibling(index),\r\n          this.getRightSibling(index),\r\n          this.getDownSibling(index),\r\n        ].filter((item) => typeof item !== \"undefined\"),\r\n      };\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  getVertexByIndex(index) {\r\n    return this.graph[index];\r\n  }\r\n\r\n  updateGraph({ index, type }) {\r\n    if (this.graph[index]) {\r\n      this.graph[index] = { ...this.graph[index], type };\r\n      if (type === ceilType.BARIER) {\r\n        this.graph[index] = { ...this.graph[index], type, siblings: [] };\r\n      }\r\n    }\r\n  }\r\n\r\n  getDownSibling(index) {\r\n    const { w, h } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasDownNeighbour = Math.floor(index / w) < h - 1;\r\n\r\n    if (hasDownNeighbour) {\r\n      return index + w;\r\n    }\r\n  }\r\n\r\n  getTopSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasTopNeighbour = Math.floor(index / w) > 0;\r\n\r\n    if (hasTopNeighbour) {\r\n      return index - w;\r\n    }\r\n  }\r\n\r\n  getRightSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasRightNeighbour = index % w < w - 1;\r\n\r\n    if (hasRightNeighbour) {\r\n      return index + 1;\r\n    }\r\n  }\r\n\r\n  getLeftSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasLeftNeighbour = index % w > 0;\r\n\r\n    if (hasLeftNeighbour) {\r\n      return index - 1;\r\n    }\r\n  }\r\n\r\n  getGraph() {\r\n    return this.graph;\r\n  }\r\n\r\n  clear() {\r\n    this.graph = {};\r\n    return this;\r\n  }\r\n}\r\n\r\nexport const graphControll = new Graph(getLocalSize(pageWidth, pageHeight));\r\n","import { ceilType } from \"../config\";\r\n\r\nexport function setBarrierToGraph(graph, barriers) {\r\n  barriers.forEach((barrierIndex) => {\r\n    graph.updateGraph({ index: barrierIndex, type: ceilType.BARIER });\r\n  });\r\n}\r\n\r\nexport function setStartPositionToGraph(graph, startIndex) {\r\n  graph.updateGraph({ index: startIndex, type: ceilType.START_POSITION });\r\n}\r\n\r\nexport function setEndPositionToGraph(graph, endIndex) {\r\n  graph.updateGraph({ index: endIndex, type: ceilType.END_POSITION });\r\n}\r\n","import { combine, createDomain } from \"effector\";\r\nimport { startPosition, endPosition } from \"../config\";\r\nimport { graphControll } from \"./controller\";\r\nimport {\r\n  setBarrierToGraph,\r\n  setStartPositionToGraph,\r\n  setEndPositionToGraph,\r\n} from \"./utils\";\r\n\r\nconst graphDomain = createDomain(\"graph\");\r\n\r\nexport const resetStore = graphDomain.event();\r\nexport const clearCanvas = graphDomain.event();\r\n\r\nexport const setBarrier = graphDomain.event();\r\nexport const removeBarrierItem = graphDomain.event();\r\n\r\nexport const triggerStartPosition = graphDomain.event();\r\nexport const triggerEndPosition = graphDomain.event();\r\n\r\nexport const $startEndPosition = graphDomain.store([\r\n  startPosition,\r\n  endPosition,\r\n]);\r\n\r\nexport const $barrier = graphDomain.store([]);\r\n\r\ngraphDomain.onCreateStore((store) => store.reset(resetStore));\r\n\r\n$barrier\r\n  .on(setBarrier, (state, index) => {\r\n    const isFindIndex = state.includes(index);\r\n\r\n    return isFindIndex ? state : [...state, index];\r\n  })\r\n  .on(removeBarrierItem, (state, index) =>\r\n    state.filter((item) => item !== index)\r\n  );\r\n\r\n$startEndPosition\r\n  .on(triggerStartPosition, (state, index) => [index, state[1]])\r\n  .on(triggerEndPosition, (state, index) => [state[0], index]);\r\n\r\nexport const $graph = combine({\r\n  barrier: $barrier,\r\n  startEndPosition: $startEndPosition,\r\n}).map((state) => {\r\n  const [start, end] = state.startEndPosition;\r\n\r\n  const graph = graphControll.createGraph();\r\n\r\n  setBarrierToGraph(graph, state.barrier);\r\n  setStartPositionToGraph(graph, start);\r\n  setEndPositionToGraph(graph, end);\r\n\r\n  return { ...state, graph: graph.graph };\r\n});\r\n","import { ceilType } from \"../config\";\r\n\r\nexport const canVisitedVertex = (vertex) => {\r\n  if (vertex.type !== ceilType.BARIER) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport function restorePath(endIndex, startIndex, parent) {\r\n  const path = [];\r\n  let target = parent[endIndex];\r\n\r\n  while (target && target !== startIndex) {\r\n    path.unshift(target);\r\n    target = parent[target];\r\n  }\r\n\r\n  if (path.length > 0) {\r\n    path.push(endIndex);\r\n  }\r\n\r\n  path.unshift(startIndex);\r\n\r\n  return path;\r\n}\r\n","import { createLogger, incrementStep } from \"../index\";\r\nimport { graphControll } from \"../graph\";\r\nimport { canVisitedVertex, restorePath } from \"./utils\";\r\nexport function breadthFirstSearch(startIndex, endIndex, graph) {\r\n  const logger = createLogger();\r\n\r\n  let isWork = true;\r\n  const queue = [startIndex];\r\n  const visited = new Map([[startIndex, true]]);\r\n  const parent = {};\r\n\r\n  while (isWork && queue.length > 0) {\r\n    logger.setVertex(queue.map((item) => item));\r\n\r\n    const currentIndex = queue.shift();\r\n\r\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\r\n      const next = graph[currentIndex].siblings[i];\r\n      const vertex = graphControll.getVertexByIndex(next);\r\n\r\n      if (!visited.has(next) && canVisitedVertex(vertex)) {\r\n        queue.push(next);\r\n        visited.set(next, true);\r\n\r\n        parent[next] = currentIndex;\r\n      }\r\n\r\n      if (next === endIndex) {\r\n        isWork = false;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  logger.setDrowAnimated();\r\n\r\n  return restorePath(endIndex, startIndex, parent);\r\n}\r\n","import { graphControll } from \"../graph\";\r\nimport { createLogger } from \"../index\";\r\nimport { canVisitedVertex, restorePath } from \"./utils\";\r\n\r\nexport function depthFirstSearch(startIndex, endIndex, graph) {\r\n  const logger = createLogger();\r\n  let isWork = true;\r\n  const stack = [startIndex];\r\n  const visited = new Map([[startIndex, true]]);\r\n  const parent = {};\r\n\r\n  while (isWork && stack.length > 0) {\r\n    logger.setVertex(stack.map((item) => item));\r\n\r\n    const currentIndex = stack.shift();\r\n\r\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\r\n      const next = graph[currentIndex].siblings[i];\r\n      const vertex = graphControll.getVertexByIndex(next);\r\n\r\n      if (!visited.has(next) && canVisitedVertex(vertex)) {\r\n        stack.unshift(next);\r\n        visited.set(next, true);\r\n\r\n        parent[next] = currentIndex;\r\n      }\r\n\r\n      if (next === endIndex) {\r\n        isWork = false;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  logger.setDrowAnimated();\r\n\r\n  return restorePath(endIndex, startIndex, parent);\r\n}\r\n","import {\r\n  createStore,\r\n  combine,\r\n  createEvent,\r\n  restore,\r\n  createDomain,\r\n} from \"effector\";\r\nimport { breadthFirstSearch } from \"./bred-first-search\";\r\nimport { depthFirstSearch } from \"./depth-first-search\";\r\nimport { clearCanvas, resetStore } from \"../graph\";\r\nimport { setGameStatus, gameStatus } from \"../ui/model\";\r\n\r\nconst algoritmsDomain = createDomain();\r\n\r\nexport const selectAlgoritm = createEvent();\r\nexport const incrementStep = createEvent();\r\nexport const setVertex = createEvent();\r\nexport const setDrowAnimated = createEvent();\r\n\r\nexport const $canDrowAnimated = algoritmsDomain\r\n  .store(false)\r\n  .on(setDrowAnimated, () => true);\r\n\r\nexport const $currentAlgoritm = restore(selectAlgoritm, \"bredth first search\");\r\nexport const $traversedVertexes = algoritmsDomain\r\n  .store([])\r\n  .on(setVertex, (vertexes, vertex) => {\r\n    return [...vertexes, vertex];\r\n  });\r\n\r\nexport const $stepCounter = algoritmsDomain\r\n  .store(0)\r\n  .on(incrementStep, (state) => state + 1);\r\n\r\nexport const $algoritms = createStore([\r\n  {\r\n    searchFunction: breadthFirstSearch,\r\n    name: \"bredth first search\",\r\n  },\r\n  {\r\n    searchFunction: depthFirstSearch,\r\n    name: \"depth first search\",\r\n  },\r\n]);\r\n\r\nexport const $searchAlgoritm = combine(\r\n  $currentAlgoritm,\r\n  $algoritms,\r\n  (currentAlgoritm, algoritms) =>\r\n    algoritms.find((algoritm) => algoritm.name === currentAlgoritm)\r\n);\r\n\r\nexport const createLogger = () => {\r\n  return {\r\n    setDrowAnimated,\r\n    setVertex: (vertex) => {\r\n      setVertex(vertex);\r\n      incrementStep();\r\n    },\r\n  };\r\n};\r\n\r\nalgoritmsDomain.onCreateStore((store) => store.reset(clearCanvas, resetStore));\r\n\r\nselectAlgoritm.watch(() => {\r\n  // clearCanvas();\r\n  setGameStatus(gameStatus.END_GAME);\r\n});\r\n","import { sample, guard, restore, forward, createDomain } from \"effector\";\r\nimport { $graph, resetStore, clearCanvas } from \"../graph\";\r\nimport { $searchAlgoritm } from \"../algoritms/model\";\r\nimport { canvasControl } from \"../control-canvas\";\r\n\r\nexport const gameStatus = {\r\n  START: \"START\",\r\n  RESTART: \"RESTART\",\r\n  PAUSE: \"PAUSE\",\r\n  RESUME: \"RESUME\",\r\n  CLEAR: \"CLEAR\",\r\n  END_GAME: \"END_GAME\",\r\n};\r\n\r\nconst gameDomain = createDomain(\"game\");\r\n\r\nexport const setGameStatus = gameDomain.event();\r\nexport const setEndGame = gameDomain.event();\r\n\r\nexport const $path = gameDomain.store([]).reset(resetStore, clearCanvas);\r\nexport const $gameIsEnd = gameDomain\r\n  .store(false)\r\n  .on(setEndGame, () => true)\r\n  .reset(resetStore, clearCanvas);\r\n\r\nexport const $gameState = restore(setGameStatus, gameStatus.END_GAME).reset(\r\n  resetStore\r\n);\r\n\r\nexport const startGame = guard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.START),\r\n});\r\n\r\nguard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.CLEAR),\r\n  target: resetStore,\r\n});\r\n\r\nguard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.END_GAME),\r\n  target: setEndGame,\r\n});\r\n\r\n// guardTarget($source, [\r\n//   [(state) => state === 1, event],\r\n//   [(state) => state === 2, another]\r\n// ])\r\n\r\n// function guardTarget(source, guards) {}\r\n\r\nsample({\r\n  source: {\r\n    graph: $graph,\r\n    algoritm: $searchAlgoritm,\r\n  },\r\n  clock: startGame,\r\n  target: $path,\r\n  fn: ({ graph, algoritm }) => {\r\n    const [start, end] = graph.startEndPosition;\r\n\r\n    clearCanvas();\r\n\r\n    return algoritm.searchFunction(start, end, graph.graph);\r\n  },\r\n});\r\n","export function checkGameStatus(target, ...status) {\r\n  return status.some((item) => target === item);\r\n}\r\n","import { getTargetIndex } from \"./config\";\r\nimport { $gameState, gameStatus } from \"./ui/model\";\r\nimport { checkGameStatus } from \"./ui/utils\";\r\n\r\nclass Controll {\r\n  constructor() {\r\n    this.isMouseDown = false;\r\n    this.isMouseMove = false;\r\n    this.listeners = [];\r\n    this.state = {};\r\n    this.lastIndex = null;\r\n    this.disabledListeners = [];\r\n  }\r\n\r\n  init() {\r\n    $gameState.watch((state) => {\r\n      if (\r\n        checkGameStatus(\r\n          state,\r\n          gameStatus.START,\r\n          gameStatus.PAUSE,\r\n          gameStatus.RESUME\r\n        )\r\n      ) {\r\n        this.disabledListener();\r\n      } else {\r\n        this.includeListener();\r\n      }\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  registerClickEventToCanvas(canvas) {\r\n    canvas.addEventListener(\"mousedown\", (event) => {\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"mousedown\")\r\n        .forEach((userEvent) => userEvent.eventListener());\r\n\r\n      this.isMouseDown = true;\r\n      this.isMouseMove = false;\r\n    });\r\n\r\n    canvas.addEventListener(\"mouseup\", (event) => {\r\n      this.isMouseDown = false;\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"mouseup\")\r\n        .forEach((userEvent) => userEvent.eventListener(event, this.state));\r\n    });\r\n\r\n    canvas.addEventListener(\"click\", (event) => {\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"click\")\r\n        .forEach((userEvent) => {\r\n          if (!this.isMouseMove) {\r\n            userEvent.eventListener(event, this.state);\r\n          }\r\n        });\r\n    });\r\n\r\n    canvas.addEventListener(\"mousemove\", (event) => {\r\n      const index = getTargetIndex(event);\r\n\r\n      if (this.isMouseDown && index !== this.lastIndex) {\r\n        this.lastIndex = index;\r\n        this.isMouseMove = true;\r\n        this.listeners\r\n          .filter((userEvent) => userEvent.type === \"mousemove\")\r\n          .forEach((userEvent) =>\r\n            userEvent.eventListener(event, this.state, this.lastIndex)\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  disabledListener() {\r\n    this.clear();\r\n  }\r\n\r\n  includeListener() {\r\n    this.listeners = this.disabledListeners;\r\n  }\r\n\r\n  addMouseDownEvent(eventListener) {\r\n    this.listeners.push({ type: \"mousedown\", eventListener });\r\n  }\r\n\r\n  addMouseUpEvent(eventListener) {\r\n    this.listeners.push({ type: \"mouseup\", eventListener });\r\n  }\r\n\r\n  addMouseMoveEvent(eventListener) {\r\n    this.listeners.push({ type: \"mousemove\", eventListener });\r\n  }\r\n\r\n  addMouseClickEvent(eventListener) {\r\n    this.listeners.push({ type: \"click\", eventListener });\r\n  }\r\n\r\n  setState(state) {\r\n    this.state = state;\r\n    return this;\r\n  }\r\n\r\n  clear() {\r\n    if (this.listeners.length > 0) {\r\n      this.disabledListeners = this.listeners;\r\n      this.isMouseDown = false;\r\n      this.isMouseMove = false;\r\n      this.listeners = [];\r\n      this.lastIndex = null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const canvasControl = new Controll();\r\ncanvasControl.init();\r\n","import { clearCanvas } from \"../graph\";\r\nimport { renderBarrier, renderPath } from \"../canvas\";\r\nimport {\r\n  gameStatus,\r\n  $path,\r\n  setGameStatus,\r\n  $gameState,\r\n  $gameIsEnd,\r\n} from \"./model\";\r\n\r\nexport class GameLoop {\r\n  constructor() {\r\n    this.count = 0;\r\n    this.animateId = null;\r\n  }\r\n\r\n  start(state, context) {\r\n    const { traversedVertexes, stepCounter } = state;\r\n    const gameState = $gameState.getState();\r\n    const gameIsEnd = $gameIsEnd.getState();\r\n\r\n    if (gameState === gameStatus.END_GAME) {\r\n      // clearCanvas();\r\n      return;\r\n    }\r\n\r\n    if (gameState === gameStatus.PAUSE) {\r\n      cancelAnimationFrame(this.animateId);\r\n      return;\r\n    }\r\n\r\n    if (gameState === gameStatus.RESUME && gameIsEnd) {\r\n      cancelAnimationFrame(this.animateId);\r\n      return;\r\n    }\r\n\r\n    if (this.count < stepCounter) {\r\n      renderBarrier(traversedVertexes[this.count], context, \"#ffff0061\");\r\n\r\n      this.animateId = requestAnimationFrame(() =>\r\n        this.start({ traversedVertexes, stepCounter }, context)\r\n      );\r\n\r\n      clearCanvas.watch(() => cancelAnimationFrame(this.animateId));\r\n\r\n      this.count++;\r\n    } else {\r\n      setGameStatus(gameStatus.END_GAME);\r\n      this.clear();\r\n      const path = $path.getState();\r\n      renderPath({\r\n        path,\r\n        context,\r\n      });\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    cancelAnimationFrame(this.animateId);\r\n    this.count = 0;\r\n    this.animateId = null;\r\n  }\r\n\r\n  removeAnimation() {\r\n    cancelAnimationFrame(this.animateId);\r\n  }\r\n}\r\n\r\nexport const gameLoop = new GameLoop();\r\n","import { guard, sample, merge, combine, forward } from \"effector\";\r\nimport {\r\n  colorSchema,\r\n  cellSize,\r\n  pageHeight,\r\n  pageWidth,\r\n  borderSize,\r\n  getLocalSize,\r\n  getGlobalSize,\r\n  drawSquare,\r\n  clearALlCanvas,\r\n  getPositionByIndex,\r\n  getIndexByPosition,\r\n  ceilType,\r\n  convertLocalPositionToGlobal,\r\n} from \"./config\";\r\nimport { configureCanvas } from \"./config-canvas\";\r\nimport { canvasControl } from \"./control-canvas\";\r\nimport {\r\n  setBarrier,\r\n  removeBarrierItem,\r\n  triggerStartPosition,\r\n  triggerEndPosition,\r\n  $graph,\r\n  resetStore,\r\n  clearCanvas,\r\n} from \"./graph\";\r\n\r\nimport {\r\n  $path,\r\n  $isValidGameState,\r\n  gameStatus,\r\n  setGameStatus,\r\n  $gameState,\r\n} from \"./ui/model\";\r\nimport {\r\n  $canDrowAnimated,\r\n  $traversedVertexes,\r\n  $stepCounter,\r\n} from \"./algoritms\";\r\nimport { GameLoop, gameLoop } from \"./ui/loop\";\r\n\r\nconst $algoritState = combine({\r\n  canDrowAnimated: $canDrowAnimated,\r\n  traversedVertexes: $traversedVertexes,\r\n  stepCounter: $stepCounter,\r\n  gameState: $gameState,\r\n});\r\n\r\nexport function renderBarrier(\r\n  barrier,\r\n  context,\r\n  color = colorSchema.blockColor\r\n) {\r\n  for (let i = 0; i < barrier.length; i++) {\r\n    const [x, y] = getPositionByIndex(barrier[i]);\r\n    drawSquare({\r\n      position: [x, y],\r\n      context,\r\n      color,\r\n    });\r\n  }\r\n}\r\n\r\nfunction renderActionsCeil(startEndPosition, context) {\r\n  for (let i = 0; i < startEndPosition.length; i++) {\r\n    const index = getPositionByIndex(startEndPosition[i]);\r\n    drawSquare({\r\n      position: index,\r\n      context,\r\n      color: colorSchema.startEndColor[i],\r\n    });\r\n  }\r\n}\r\n\r\nfunction renderCeil(event, state) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  const [startIndex, endIndex] = state.startEndPosition;\r\n\r\n  return {\r\n    renderForMove: () => {\r\n      if (index !== startIndex && index !== endIndex) {\r\n        setBarrier(index);\r\n      }\r\n    },\r\n    renderForClick: () => {\r\n      if (index !== startIndex && index !== endIndex) {\r\n        removeBarrierItem(index);\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nfunction renderStart(index, state) {\r\n  const findIndex = state.barrier.includes(index);\r\n  const [, endIndex] = state.startEndPosition;\r\n\r\n  if (!findIndex && index !== endIndex) {\r\n    triggerStartPosition(index);\r\n  }\r\n}\r\n\r\nfunction renderEnd(index, state, lastIndex) {\r\n  const findIndex = state.barrier.includes(index);\r\n  const [startIndex] = state.startEndPosition;\r\n\r\n  if (!findIndex && index !== startIndex) {\r\n    triggerEndPosition(index);\r\n  }\r\n}\r\n\r\nlet type = null;\r\nfunction renderLogic(event) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n  const state = $graph.getState();\r\n\r\n  if (!type) {\r\n    type = state.graph[index].type;\r\n  }\r\n\r\n  switch (type) {\r\n    case ceilType.BARIER:\r\n      return renderCeil(event, state).renderForClick();\r\n    case ceilType.START_POSITION:\r\n      return renderStart(index, state);\r\n    case ceilType.END_POSITION:\r\n      return renderEnd(index, state);\r\n    case ceilType.EMPTY:\r\n      return renderCeil(event, state).renderForMove();\r\n  }\r\n}\r\n\r\nexport function renderCanvas(canvas, context) {\r\n  const localSize = getLocalSize(pageWidth, pageHeight);\r\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\r\n  const gridData = buildGrid(context);\r\n\r\n  configureCanvas(canvas, globalSize);\r\n\r\n  canvasControl.registerClickEventToCanvas(canvas);\r\n  canvasControl.addMouseMoveEvent((e, s) => {\r\n    return renderLogic(e, s);\r\n  });\r\n  canvasControl.addMouseUpEvent(() => (type = null));\r\n  canvasControl.addMouseClickEvent((e, s) => renderCeil(e, s).renderForClick());\r\n\r\n  function render(state) {\r\n    clearALlCanvas(context, canvas);\r\n    canvasControl.setState(state);\r\n\r\n    renderActionsCeil(state.startEndPosition, context);\r\n    renderBarrier(state.barrier, context);\r\n\r\n    gridData.applyStyles();\r\n    context.stroke(gridData.grid);\r\n  }\r\n\r\n  $graph.watch(render);\r\n\r\n  sample({\r\n    source: $graph,\r\n    clock: merge([resetStore, clearCanvas]),\r\n  }).watch(render);\r\n\r\n  $algoritState.watch(({ canDrowAnimated, gameState, ...state }) => {\r\n    if (canDrowAnimated) {\r\n      if (gameState === gameStatus.START) {\r\n        gameLoop.clear();\r\n      }\r\n\r\n      gameLoop.removeAnimation();\r\n      gameLoop.start(state, context);\r\n    }\r\n  });\r\n}\r\n\r\nlet prev = null;\r\nexport function renderPath({ context, path = [], color = \"blue\" }) {\r\n  for (let i = 0; i < path.length; i++) {\r\n    const position = getPositionByIndex(path[i]);\r\n    const [x, y] = convertLocalPositionToGlobal(position);\r\n\r\n    if (prev) {\r\n      context.beginPath();\r\n      context.strokeStyle = color;\r\n      context.lineWidth = 2;\r\n      context.moveTo(prev[0], prev[1]);\r\n      context.lineTo(x + cellSize / 2, y + cellSize / 2);\r\n      context.stroke();\r\n    }\r\n\r\n    prev = [x + cellSize / 2, y + cellSize / 2];\r\n  }\r\n\r\n  prev = null;\r\n}\r\n\r\nfunction buildGrid(context) {\r\n  const grid = new Path2D();\r\n\r\n  const localSize = getLocalSize(pageWidth, pageHeight);\r\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\r\n\r\n  for (let i = 0; i <= localSize.w; i++) {\r\n    grid.moveTo(i * cellSize + borderSize, 0);\r\n    grid.lineTo(i * cellSize + borderSize, globalSize.h);\r\n  }\r\n\r\n  for (let i = 0; i <= localSize.h; i++) {\r\n    grid.moveTo(0, i * cellSize + borderSize);\r\n    grid.lineTo(globalSize.w, i * cellSize + borderSize);\r\n  }\r\n\r\n  return {\r\n    grid,\r\n    applyStyles: () => {\r\n      context.lineWidth = borderSize;\r\n      context.strokeStyle = colorSchema.borderColor;\r\n    },\r\n  };\r\n}\r\n\r\nconst canvas = document.getElementById(\"viewport\");\r\n\r\nif (canvas) {\r\n  const context = canvas.getContext(\"2d\");\r\n\r\n  renderCanvas(canvas, context);\r\n}\r\n","export function configureCanvas(canvas, { w, h }) {\r\n  canvas.height = h;\r\n  canvas.width = w;\r\n}\r\n","import React from \"react\";\r\nimport { useStore } from \"effector-react\";\r\nimport { renderCanvas } from \"./canvas\";\r\nimport {\r\n  setGameStatus,\r\n  gameStatus,\r\n  $gameState,\r\n  resumeAnimated,\r\n  pauseAnimated,\r\n} from \"./ui/model\";\r\nimport {\r\n  $algoritms,\r\n  selectAlgoritm,\r\n  $currentAlgoritm,\r\n} from \"./algoritms/model\";\r\n\r\nimport \"./styles.css\";\r\nimport { checkGameStatus } from \"./ui/utils\";\r\n\r\nexport default function App() {\r\n  const algoritms = useStore($algoritms);\r\n  const currentAlgoritm = useStore($currentAlgoritm);\r\n  const gameState = useStore($gameState);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"select-bar\">\r\n        <h2 className=\"select-bar_title\">Select algoritm</h2>\r\n        <ul>\r\n          {algoritms.map((algoritm, index) => (\r\n            <li\r\n              onClick={() => selectAlgoritm(algoritm.name)}\r\n              className={currentAlgoritm === algoritm.name ? \"isActive\" : \"\"}\r\n              key={algoritm.name}\r\n            >\r\n              {algoritm.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"btn-wrapper\">\r\n          <button\r\n            className=\"btn\"\r\n            onClick={() => setGameStatus(gameStatus.START)}\r\n          >\r\n            start\r\n          </button>\r\n          {checkGameStatus(\r\n            gameState,\r\n            gameStatus.START,\r\n            gameStatus.PAUSE,\r\n            gameStatus.RESUME\r\n          ) && (\r\n            <>\r\n              <button\r\n                className=\"btn\"\r\n                onClick={() => setGameStatus(gameStatus.PAUSE)}\r\n              >\r\n                pause\r\n              </button>\r\n\r\n              <button\r\n                className=\"btn\"\r\n                onClick={() => setGameStatus(gameStatus.RESUME)}\r\n              >\r\n                resume\r\n              </button>\r\n            </>\r\n          )}\r\n\r\n          <button\r\n            className=\"btn\"\r\n            onClick={() => setGameStatus(gameStatus.CLEAR)}\r\n          >\r\n            clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n\r\nexport * from \"./algoritms\";\r\nexport * from \"./graph\";\r\nexport * from \"./ui/model\";\r\n"],"sourceRoot":""}