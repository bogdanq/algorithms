{"version":3,"sources":["config.js","game/animations.js","game/barrier.js","graph/controller.js","graph/utils.js","graph/model.js","game/utils.js","algoritms/utils.js","algoritms/controller.js","algoritms/bred-first-search.js","algoritms/depth-first-search.js","algoritms/dijkstra.js","algoritms/model.js","game/model.js","render/render-path.js","game/animated-vertex.js","game/loop.js","control-canvas.js","render/render-ceil.js","render/render-barrier-with-type.js","render/drow-start-end-position.js","render/render.js","canvas.js","render/build-grid.js","config-canvas.js","gui/ui/molecules/modal-wrapper.js","gui/ui/atoms/icon.js","gui/ui/atoms/text.js","gui/ui/atoms/default-button.js","gui/lib/styled-components-layout.js","gui/ui/templates/flex-wrapper.js","gui/ui/atoms/default-switch.js","gui/ui/molecules/settings.js","gui/ui/molecules/info.js","gui/ui/molecules/about-algoritms.js","gui/ui/molecules/information-about-algoritm.js","gui/ui/molecules/select.js","gui/ui/organisms/history.js","gui/ui/organisms/info-block.js","gui/ui/organisms/game-controll-buttons.js","gui/ui/organisms/algoritm-result.js","gui/ui/organisms/code-area/model.js","gui/ui/organisms/code-area/code-string.js","gui/ui/organisms/code-area/index.js","gui/ui/organisms/algoritms.js","gui/ui/organisms/right-side-bar.js","App.js","global-css.js","index.js"],"names":["cellSize","pageWidth","window","innerWidth","pageHeight","innerHeight","borderSize","colorSchema","borderColor","blockColor","startEndColor","ceilType","START_POSITION","END_POSITION","BARIER","EMPTY","WATER","SAND","getLocalSize","w","h","Math","floor","getGlobalSize","convertLocalPositionToGlobal","_ref","_ref2","Object","slicedToArray","x","y","drawSquare","_ref3","_ref3$color","color","position","context","width","_convertLocalPosition","_convertLocalPosition2","size","fillStyle","fillRect","getIndexByPosition","_ref4","_ref5","getPositionByIndex","index","drawSquareWithAnimation","params","animateId","_params$position","_params$scale","scale","requestAnimationFrame","objectSpread2","cancelAnimationFrame","drawMarkerWithAnimation","_params$width","_ref6","_ref6$color","_convertLocalPosition3","_convertLocalPosition4","strokeStyle","beginPath","moveTo","lineTo","stroke","drawMark","Barier","barrierType","classCallCheck","this","canDrawe","canRemove","createClass","key","value","arguments","length","undefined","graphControll","Graph","graph","cellCount","lastIndex","canMoveDiagonal","clear","type","siblings","getSiblings","map","item","vertex","filter","Boolean","newParams","objectWithoutProperties","left","getLeftSibling","top","getTopSibling","right","getRightSibling","down","getDownSibling","getTopLeftDiagonal","getTopRightDiagonal","getBotRightDiagonal","getBotLeftDiagonal","bot","_getLocalSize","setBarrierToGraph","barriers","forEach","barrier","updateGraph","getIndex","weight","setStartPositionToGraph","startIndex","setEndPositionToGraph","endIndex","graphDomain","createDomain","resetStore","event","clearCanvas","changeDirection","setBarrierType","setBarrier","removeBarrierItem","triggerStartPosition","triggerEndPosition","$startEndPosition","store","$canMoveDiagonal","$barrierType","restore","$barriers","on","state","onCreateStore","reset","removedBarrier","guard","source","sample","clock","fn","find","watch","remove","concat","toConsumableArray","removed","$graph","combine","startEndPosition","_state$startEndPositi","start","end","createGraph","checkGameStatus","target","status","some","filtredFps","_","fps","fpsVariant","equal","nextGame","hasNewBarriers","nextBarriers","_state","checkBarriers","nextPosition","_position","equalPosition","lastPosition","push","apply","includes","checkPosition","canVisitedVertex","restorePath","historyPath","path","lastStep","unshift","removeDoubleVertex","reduce","acc","row","el","accRow","getVertexWeight","AlgoritmController","count","processing","dejkstra","visited","updateProcessing","values","breadthFirstSearch","aInfo","prevIndex","isWork","queue","parent","currentIndex","shift","addVertex","i","next","getVertexByIndex","increment","result","getAlgotitmResult","depthFirstSearch","stack","dijkstra","priorityQueue","PriorityQueue","a","b","Map","add","isEmpty","_priorityQueue$poll","poll","currentVertex","sibling","nextWeight","get","set","restoredPath","algoritmsDomain","selectAlgoritm","createEvent","addVisitedVertex","addProcessedVertex","addCustomAlgoritm","$currentAlgoritm","$visitedVertex","$processedVertex","processed","$algoritms","createStore","searchFunction","name","modal","foo","algoritm","$searchAlgoritm","currentAlgoritm","algoritms","setGameStatus","gameStatus","END_GAME","START","RESTART","PAUSE","RESUME","CLEAR","RESET","gameDomain","setTimer","setHistoryGame","recoveryHistoryGame","setCurrentGame","$path","$historyGame","$currentTimer","date","Date","$currentGame","$gameState","startGame","resumeGame","endGame","restoredHistoryGame","sampleForHistoryGame","historyGame","game","_graph$startEndPositi","time","performance","now","timeEnd","prev","animatedVisitedVertex","AnimatedVisitedVertex","animationCount","_state$processing","_ref$path","_ref$color","lineWidth","renderPath","_getPositionByIndex","_getPositionByIndex2","_getPositionByIndex3","_getPositionByIndex4","processedVertex","visitedVertex","animatedVertexWithArray","animatedVertex","tickFx","createEffect","use","Promise","rs","setTimeout","createTick","$state","$animationCount","tickWithParams","attach","effect","mapParams","$combineState","done","setVertex","merge","canvasControl","Controll","isMouseDown","isMouseMove","listeners","disabledListeners","_this","disabledListener","includeListener","canvas","_this2","addEventListener","userEvent","eventListener","_getLocalSize3","clientX","clientY","getTargetIndex","renderCeil","renderForMove","renderForClick","init","drowBarriers","RenderBarriers","renderWithMove","bind","_renderCeil","findIndex","renderStart","renderEnd","render","executeLogic","gridData","clearRect","height","clearALlCanvas","setState","drawVertexWithLoop","drowStartEndPOsitions","applyStyles","grid","document","getElementById","getContext","localSize","globalSize","Path2D","buildGrid","registerClickEventToCanvas","addMouseMoveEvent","addMouseClickEvent","e","s","addMouseUpEvent","configureCanvas","renderCanvas","ModalWrapper","isOpen","onRequestClose","children","react_default","createElement","lib_default","closeTimeoutMS","StyledRootWrapper","onClick","StyledWrapper","StyledInner","stopPropagation","CloseModal","ReactModal","setAppElement","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","Icon","icon_templateObject","Text","p","text_templateObject","Button","icon","_ref$size","_ref$variant","variant","style","fontSize","startIcon","WithTag","as","to","props","React","defaultProps","is","prop","FlexContainer","flex_wrapper_templateObject","css","styled_components_layout_templateObject","alignContent","align","basis","grow","shrink","justify","order","padding","maxW","direction","Left","flex_wrapper_templateObject2","Switch","label","_ref$name","rest","cursor","FormControlLabel","control","assign","Settings","_React$useState","useState","_React$useState2","setOpen","Fragment","icon_Icon","index_esm","Info","InfoModal","ColorBlock","info_templateObject","AboutAlgoritms","InfoAboutAlgoritmApi","codeString","_React$useReducer","useReducer","_React$useReducer2","toggle","default_button_Button","Wrapper","href","default_highlight","language","docco","information_about_algoritm_templateObject","information_about_algoritm_templateObject2","information_about_algoritm_templateObject3","SelectBarrierType","useStore","handleChange","useCallback","Select","onChange","MenuItem","History","HistoryIcon","historyCount","fa_index_esm","HistoryList","currentGame","handleChangeItem","HistoryListWrapper","HistoryItem","active","toString","history_templateObject","history_templateObject2","history_templateObject3","history_templateObject4","_templateObject5","info_block_templateObject","InfoDraggable","react_draggable_default","info_block_Wrapper","GameControllButtons","gameState","GrResume","GrPause","GrPlay","GrClear","$graphState","AlgotitmResult","_graphState$timeEnd","_graphState$path","graphState","className","toFixed","handleChangeCode","$code","newAlg","newRe","newCan","newGraph","CodeArea","code","handleChangeAlgoritm","Function","AlgoritmsList","_useStore","algoritms_CustomAlgoritmModal","CustomAlgoritmModal","currentTimer","RightSideBar","borderTop","TextField","parseInt","default_switch_Switch","checked","App","globalCss","global_css_templateObject","GlobalModalStyles","createGlobalStyle","global_css_templateObject2","__webpack_require__","d","__webpack_exports__","utils_canVisitedVertex","barrier_Barier","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.822b4c08.chunk.js","sourcesContent":["export const cellSize = 35;\r\nexport const pageWidth = window.innerWidth;\r\nexport const pageHeight = window.innerHeight;\r\nexport const borderSize = 0.5;\r\nexport const boardLength = pageWidth * pageHeight;\r\nexport const startPosition = 0;\r\nexport const endPosition = 17;\r\n\r\nexport const colorSchema = {\r\n  borderColor: \"#000\",\r\n  blockColor: \"#bbbbbb\",\r\n  startEndColor: [\"green\", \"red\"],\r\n};\r\n\r\nexport const ceilType = {\r\n  START_POSITION: \"START_POSITION\",\r\n  END_POSITION: \"END_POSITION\",\r\n  BARIER: \"BARIER\",\r\n  EMPTY: \"EMPTY\",\r\n  WATER: \"WATER\",\r\n  SAND: \"SAND\",\r\n};\r\n\r\nexport function getLocalSize(w, h) {\r\n  return {\r\n    w: Math.floor(w / cellSize),\r\n    h: Math.floor(h / cellSize),\r\n  };\r\n}\r\n\r\nexport function getGlobalSize(w, h) {\r\n  return {\r\n    w: Math.floor(w * cellSize),\r\n    h: Math.floor(h * cellSize),\r\n  };\r\n}\r\n\r\nexport function convertLocalPositionToGlobal([x, y]) {\r\n  return [x * cellSize, y * cellSize];\r\n}\r\n\r\nexport function drawSquare({\r\n  color = \"rgb(152, 251, 152)\",\r\n  position,\r\n  context,\r\n  width,\r\n}) {\r\n  const [x, y] = convertLocalPositionToGlobal(position);\r\n  const size = width || cellSize - borderSize * 2;\r\n\r\n  context.fillStyle = color;\r\n  context.fillRect(x + borderSize * 2, y + borderSize * 2, size, size);\r\n}\r\n\r\nexport function clearALlCanvas(context, canvas) {\r\n  return context.clearRect(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\nexport function getIndexByPosition([x, y]) {\r\n  const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n  return y * w + x;\r\n}\r\n\r\nexport function getPositionByIndex(index) {\r\n  const { w } = getLocalSize(pageWidth, pageHeight);\r\n  const y = Math.floor(index / w);\r\n  const x = index - y * w;\r\n\r\n  return [x, y];\r\n}\r\n\r\nexport function getTargetIndex(event) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  return index;\r\n}\r\n\r\nexport function drawMark({ color = \"#e84a4a\", position, context }) {\r\n  const [x, y] = convertLocalPositionToGlobal(position);\r\n\r\n  context.strokeStyle = color;\r\n\r\n  context.beginPath();\r\n  context.moveTo(x + 10, y + 10);\r\n  context.lineTo(x + cellSize - 10, y + cellSize - 10);\r\n  context.stroke();\r\n\r\n  context.beginPath();\r\n  context.moveTo(x + cellSize - 10, y + 10);\r\n  context.lineTo(x + 10, y + cellSize - 10);\r\n  context.stroke();\r\n}\r\n","import { drawSquare, drawMark, cellSize } from \"../config\";\r\n\r\nexport function drawSquareWithAnimation(params) {\r\n  let animateId;\r\n  let {\r\n    position: [x, y],\r\n    width,\r\n    scale = 0.3,\r\n  } = params;\r\n\r\n  if (width < cellSize) {\r\n    animateId = requestAnimationFrame(() =>\r\n      drawSquareWithAnimation({\r\n        ...params,\r\n        width,\r\n        scale,\r\n      })\r\n    );\r\n\r\n    drawSquare({\r\n      ...params,\r\n      position: [x + scale, y + scale],\r\n    });\r\n\r\n    if (scale > 0 && width % 5 === 0) {\r\n      scale = scale - 0.1;\r\n    }\r\n\r\n    width++;\r\n  } else {\r\n    cancelAnimationFrame(animateId);\r\n  }\r\n}\r\n\r\nexport function drawMarkerWithAnimation(params) {\r\n  let { width = cellSize - 10 } = params;\r\n  let animateId;\r\n\r\n  if (width < cellSize) {\r\n    animateId = requestAnimationFrame(() =>\r\n      drawMarkerWithAnimation({\r\n        ...params,\r\n        width,\r\n      })\r\n    );\r\n\r\n    drawMark({\r\n      ...params,\r\n      width,\r\n    });\r\n\r\n    width++;\r\n  } else {\r\n    drawSquare({\r\n      ...params,\r\n      color: \"#fff\",\r\n      width: 0,\r\n    });\r\n\r\n    cancelAnimationFrame(animateId);\r\n  }\r\n}\r\n","import { getPositionByIndex, drawSquare, colorSchema } from \"../config\";\r\nimport { drawSquareWithAnimation, drawMarkerWithAnimation } from \"./animations\";\r\n\r\nexport class Barier {\r\n  constructor(index, barrierType) {\r\n    this.barrierType = barrierType;\r\n    this.index = index;\r\n    this.canDrawe = false;\r\n    this.context = null;\r\n    this.canRemove = false;\r\n    this.position = false;\r\n  }\r\n\r\n  getBarier() {\r\n    return this;\r\n  }\r\n\r\n  getIndex() {\r\n    return this.index;\r\n  }\r\n\r\n  render(context, color = colorSchema.blockColor) {\r\n    this.context = context;\r\n    this.position = getPositionByIndex(this.index);\r\n\r\n    if (!this.canRemove) {\r\n      if (!this.canDrawe) {\r\n        drawSquareWithAnimation({\r\n          position: this.position,\r\n          context,\r\n          color,\r\n          width: 20,\r\n        });\r\n      } else {\r\n        drawSquare({\r\n          position: this.position,\r\n          context,\r\n          color,\r\n        });\r\n      }\r\n\r\n      this.canDrawe = true;\r\n    }\r\n  }\r\n\r\n  remove() {\r\n    this.canRemove = true;\r\n\r\n    drawMarkerWithAnimation({\r\n      position: this.position,\r\n      context: this.context,\r\n    });\r\n\r\n    this.canRemove = false;\r\n  }\r\n}\r\n","import { ceilType, pageWidth, getLocalSize, pageHeight } from \"../config\";\r\n\r\nclass Graph {\r\n  constructor({ w, h }) {\r\n    this.graph = {};\r\n    this.cellCount = w * h;\r\n    this.lastIndex = null;\r\n  }\r\n\r\n  createGraph(canMoveDiagonal) {\r\n    this.clear();\r\n    for (let index = 0; index < this.cellCount; index++) {\r\n      this.graph[index] = {\r\n        type: ceilType.EMPTY,\r\n        siblings: this.getSiblings(index, canMoveDiagonal)\r\n          .map((item) =>\r\n            typeof item !== \"undefined\" ? { vertex: item } : undefined\r\n          )\r\n          .filter(Boolean),\r\n      };\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  getVertexByIndex(index) {\r\n    return this.graph[index];\r\n  }\r\n\r\n  updateGraph({ index, ...newParams }) {\r\n    if (this.graph[index]) {\r\n      this.graph[index] = { ...this.graph[index], ...newParams };\r\n    }\r\n  }\r\n\r\n  getSiblings(index, canMoveDiagonal) {\r\n    const left = this.getLeftSibling(index);\r\n    const top = this.getTopSibling(index);\r\n    const right = this.getRightSibling(index);\r\n    const down = this.getDownSibling(index);\r\n\r\n    if (canMoveDiagonal) {\r\n      const topLeft = this.getTopLeftDiagonal(top, left);\r\n      const topRight = this.getTopRightDiagonal(top, right);\r\n      const botRight = this.getBotRightDiagonal(down, right);\r\n      const botLeft = this.getBotLeftDiagonal(down, left);\r\n\r\n      return [topLeft, top, topRight, right, botRight, down, botLeft, left];\r\n    }\r\n\r\n    return [top, left, down, right];\r\n  }\r\n\r\n  getTopLeftDiagonal(top, left) {\r\n    if (top >= 0 && left >= 0) {\r\n      return top - 1;\r\n    }\r\n  }\r\n\r\n  getTopRightDiagonal(top, right) {\r\n    if (top >= 0 && right >= 0) {\r\n      return top + 1;\r\n    }\r\n  }\r\n\r\n  getBotLeftDiagonal(bot, left) {\r\n    if (bot >= 0 && left >= 0) {\r\n      return bot - 1;\r\n    }\r\n  }\r\n\r\n  getBotRightDiagonal(bot, right) {\r\n    if (bot >= 0 && right) {\r\n      return bot + 1;\r\n    }\r\n  }\r\n\r\n  getBottomDiagonal(down) {\r\n    const left = down - 1;\r\n    const right = down + 1;\r\n\r\n    return [left, right];\r\n  }\r\n\r\n  getDownSibling(index) {\r\n    const { w, h } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasDownNeighbour = Math.floor(index / w) < h - 1;\r\n\r\n    if (hasDownNeighbour) {\r\n      return index + w;\r\n    }\r\n  }\r\n\r\n  getTopSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasTopNeighbour = Math.floor(index / w) > 0;\r\n\r\n    if (hasTopNeighbour) {\r\n      return index - w;\r\n    }\r\n  }\r\n\r\n  getRightSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasRightNeighbour = index % w < w - 1;\r\n\r\n    if (hasRightNeighbour) {\r\n      return index + 1;\r\n    }\r\n  }\r\n\r\n  getLeftSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasLeftNeighbour = index % w > 0;\r\n\r\n    if (hasLeftNeighbour) {\r\n      return index - 1;\r\n    }\r\n  }\r\n\r\n  getGraph() {\r\n    return this.graph;\r\n  }\r\n\r\n  clear() {\r\n    this.graph = {};\r\n    return this;\r\n  }\r\n}\r\n\r\nexport const graphControll = new Graph(getLocalSize(pageWidth, pageHeight));\r\n","import { ceilType } from \"../config\";\r\n\r\nexport function setBarrierToGraph(graph, barriers) {\r\n  barriers.forEach((barrier) => {\r\n    if (barrier.barrierType === ceilType.BARIER) {\r\n      graph.updateGraph({\r\n        index: barrier.getIndex(),\r\n        type: barrier.barrierType,\r\n        siblings: [],\r\n      });\r\n    }\r\n\r\n    if (barrier.barrierType === ceilType.WATER) {\r\n      graph.updateGraph({\r\n        index: barrier.getIndex(),\r\n        type: barrier.barrierType,\r\n        weight: 10,\r\n      });\r\n    }\r\n\r\n    if (barrier.barrierType === ceilType.SAND) {\r\n      graph.updateGraph({\r\n        index: barrier.getIndex(),\r\n        type: barrier.barrierType,\r\n        weight: 3,\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nexport function setStartPositionToGraph(graph, startIndex) {\r\n  graph.updateGraph({ index: startIndex, type: ceilType.START_POSITION });\r\n}\r\n\r\nexport function setEndPositionToGraph(graph, endIndex) {\r\n  graph.updateGraph({ index: endIndex, type: ceilType.END_POSITION });\r\n}\r\n","import { combine, createDomain, sample, guard, restore } from \"effector\";\r\nimport { startPosition, endPosition, ceilType } from \"../config\";\r\nimport { graphControll } from \"./controller\";\r\nimport {\r\n  setBarrierToGraph,\r\n  setStartPositionToGraph,\r\n  setEndPositionToGraph,\r\n  setWaterToGraph,\r\n} from \"./utils\";\r\nimport { Barier } from \"../game\";\r\n\r\nconst graphDomain = createDomain(\"graph\");\r\n\r\nexport const resetStore = graphDomain.event();\r\nexport const clearCanvas = graphDomain.event();\r\n\r\nexport const changeDirection = graphDomain.event();\r\nexport const setBarrierType = graphDomain.event();\r\nexport const setBarrier = graphDomain.event();\r\nexport const removeBarrierItem = graphDomain.event();\r\n\r\nexport const triggerStartPosition = graphDomain.event();\r\nexport const triggerEndPosition = graphDomain.event();\r\n\r\nexport const $startEndPosition = graphDomain.store([\r\n  startPosition,\r\n  endPosition,\r\n]);\r\n\r\nexport const $canMoveDiagonal = graphDomain.store(false);\r\n\r\nexport const $barrierType = restore(setBarrierType, ceilType.BARIER);\r\n\r\nexport const $barriers = graphDomain.store([]);\r\n\r\n$canMoveDiagonal.on(changeDirection, (state) => !state);\r\n\r\ngraphDomain.onCreateStore((store) => store.reset(resetStore));\r\n\r\nexport const removedBarrier = guard({\r\n  source: sample({\r\n    source: $barriers,\r\n    clock: removeBarrierItem,\r\n    fn: (state, index) => state.find((item) => item.getIndex() === index),\r\n  }),\r\n  filter: Boolean,\r\n});\r\n\r\nremovedBarrier.watch((item) => item.remove());\r\n\r\n$barriers\r\n  .on(setBarrier, (state, { index, barrierType }) => {\r\n    const barrier = new Barier(index, barrierType);\r\n\r\n    const isFindIndex = state.find((item) => item.getIndex() === index);\r\n\r\n    return isFindIndex ? state : [...state, barrier];\r\n  })\r\n  .on(removedBarrier, (state, removed) =>\r\n    state.filter((item) => item !== removed)\r\n  );\r\n\r\n$startEndPosition\r\n  .on(triggerStartPosition, (state, index) => [index, state[1]])\r\n  .on(triggerEndPosition, (state, index) => [state[0], index]);\r\n\r\nexport const $graph = combine({\r\n  barrier: $barriers,\r\n  barrierType: $barrierType,\r\n  startEndPosition: $startEndPosition,\r\n  canMoveDiagonal: $canMoveDiagonal,\r\n}).map((state) => {\r\n  const [start, end] = state.startEndPosition;\r\n\r\n  const graph = graphControll.createGraph(state.canMoveDiagonal);\r\n\r\n  setBarrierToGraph(graph, state.barrier);\r\n\r\n  setStartPositionToGraph(graph, start);\r\n  setEndPositionToGraph(graph, end);\r\n\r\n  return { ...state, graph: graph.graph };\r\n});\r\n","import { getPositionByIndex, drawSquare } from \"../config\";\r\n\r\nexport function checkGameStatus(target, status) {\r\n  return status.some((item) => target === item);\r\n}\r\n\r\nexport function filtredFps(_, fps) {\r\n  const fpsVariant = {\r\n    min: 1,\r\n    max: 30,\r\n  };\r\n\r\n  if (fps < fpsVariant.min) {\r\n    return fpsVariant.min;\r\n  }\r\n  if (fps >= fpsVariant.max) {\r\n    return fpsVariant.max;\r\n  }\r\n  return fps;\r\n}\r\n\r\nexport function equal(state, nextGame) {\r\n  const hasNewBarriers = checkBarriers(state, nextGame.barrier);\r\n  const hasNewPosition = checkPosition(state, nextGame.startEndPosition);\r\n\r\n  if (hasNewPosition || hasNewBarriers) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction checkBarriers(state, nextBarriers) {\r\n  if (nextBarriers.length === 0) {\r\n    return false;\r\n  }\r\n\r\n  if (state[state.length - 1]?.barrier.length !== nextBarriers?.length) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction checkPosition(position, nextPosition) {\r\n  const equalPosition = [];\r\n  const lastPosition = position[position.length - 1]?.startEndPosition;\r\n\r\n  if (!lastPosition) {\r\n    return true;\r\n  }\r\n\r\n  equalPosition.push(\r\n    ...lastPosition.map((position, index) => {\r\n      return position !== nextPosition[index];\r\n    })\r\n  );\r\n\r\n  if (equalPosition.length === 0 || equalPosition.includes(true)) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n","import { ceilType } from \"../config\";\r\n\r\nexport const canVisitedVertex = (vertex) => {\r\n  if (vertex.type !== ceilType.BARIER) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport function restorePath(endIndex, startIndex, historyPath) {\r\n  const path = [endIndex];\r\n  let lastStep = endIndex;\r\n\r\n  while (lastStep && lastStep !== startIndex) {\r\n    path.unshift(historyPath[lastStep]);\r\n    lastStep = historyPath[lastStep];\r\n  }\r\n\r\n  return path;\r\n}\r\n\r\nexport function removeDoubleVertex(target) {\r\n  return target.reduce((acc, row) => {\r\n    acc.push(row.filter((el) => !acc.some((accRow) => accRow.includes(el))));\r\n    return acc;\r\n  }, []);\r\n}\r\n\r\nexport function getVertexWeight(vertex) {\r\n  if (vertex.weight) {\r\n    return vertex.weight;\r\n  }\r\n\r\n  return 1;\r\n}\r\n","export class AlgoritmController {\r\n  constructor(startIndex, endIndex) {\r\n    this.count = 0;\r\n    this.processing = [];\r\n    this.dejkstra = [];\r\n    this.visited = [];\r\n    this.startIndex = startIndex;\r\n    this.endIndex = endIndex;\r\n  }\r\n\r\n  increment() {\r\n    this.count++;\r\n  }\r\n\r\n  addVertex({ vertex, siblings, processing }, visited) {\r\n    const updateProcessing = {\r\n      vertex,\r\n      siblings: ((processing && Object.values(processing)) || siblings).map(\r\n        (item) => item.vertex\r\n      ),\r\n    };\r\n    this.processing.push(updateProcessing);\r\n    this.visited.push(visited);\r\n  }\r\n\r\n  getAlgotitmResult() {\r\n    return this;\r\n  }\r\n}\r\n","import { graphControll } from \"../graph\";\r\nimport { canVisitedVertex, restorePath } from \"./utils\";\r\nimport { AlgoritmController } from \"./controller\";\r\n\r\nexport function breadthFirstSearch(startIndex, endIndex, graph) {\r\n  const aInfo = new AlgoritmController(startIndex, endIndex);\r\n  let prevIndex = null;\r\n  let isWork = true;\r\n  const queue = [startIndex];\r\n  const visited = [startIndex];\r\n  const parent = {};\r\n\r\n  while (isWork && queue.length > 0) {\r\n    const currentIndex = queue.shift();\r\n\r\n    aInfo.addVertex(\r\n      {\r\n        vertex: currentIndex,\r\n        siblings: graph[currentIndex].siblings,\r\n      },\r\n      prevIndex\r\n    );\r\n\r\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\r\n      const next = graph[currentIndex].siblings[i];\r\n\r\n      const vertex = graphControll.getVertexByIndex(next.vertex);\r\n\r\n      if (!visited.includes(next.vertex) && canVisitedVertex(vertex)) {\r\n        queue.push(next.vertex);\r\n        visited.push(next.vertex);\r\n\r\n        parent[next.vertex] = currentIndex;\r\n        aInfo.increment();\r\n      }\r\n\r\n      if (next.vertex === endIndex) {\r\n        isWork = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    prevIndex = currentIndex;\r\n  }\r\n\r\n  const result = aInfo.getAlgotitmResult();\r\n  const path = restorePath(endIndex, startIndex, parent);\r\n\r\n  return {\r\n    path,\r\n    ...result,\r\n  };\r\n}\r\n","import { graphControll } from \"../graph\";\r\nimport { canVisitedVertex, restorePath } from \"./utils\";\r\nimport { AlgoritmController } from \"./controller\";\r\n\r\nexport function depthFirstSearch(startIndex, endIndex, graph) {\r\n  const aInfo = new AlgoritmController(startIndex, endIndex);\r\n\r\n  let isWork = true;\r\n  const stack = [startIndex];\r\n  const visited = [];\r\n  const parent = {};\r\n  let prevIndex = null;\r\n\r\n  while (isWork && stack.length > 0) {\r\n    const currentIndex = stack.shift();\r\n\r\n    aInfo.addVertex(\r\n      {\r\n        vertex: currentIndex,\r\n        siblings: graph[currentIndex].siblings,\r\n      },\r\n      prevIndex\r\n    );\r\n\r\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\r\n      const next = graph[currentIndex].siblings[i];\r\n      const vertex = graphControll.getVertexByIndex(next.vertex);\r\n\r\n      if (!visited.includes(next.vertex) && canVisitedVertex(vertex)) {\r\n        stack.unshift(next.vertex);\r\n        visited.push(next.vertex);\r\n\r\n        parent[next.vertex] = currentIndex;\r\n        aInfo.increment();\r\n      }\r\n\r\n      if (next.vertex === endIndex) {\r\n        isWork = false;\r\n        break;\r\n      }\r\n    }\r\n    prevIndex = currentIndex;\r\n  }\r\n\r\n  const result = aInfo.getAlgotitmResult();\r\n  const path = restorePath(endIndex, startIndex, parent);\r\n\r\n  return {\r\n    path,\r\n    ...result,\r\n  };\r\n}\r\n","import PriorityQueue from \"fastpriorityqueue\";\r\nimport { graphControll } from \"../graph\";\r\nimport { canVisitedVertex, restorePath, getVertexWeight } from \"./utils\";\r\nimport { AlgoritmController } from \"./controller\";\r\n\r\nexport function dijkstra(startIndex, endIndex, graph) {\r\n  const aInfo = new AlgoritmController(startIndex, endIndex);\r\n  let prevIndex = null;\r\n  const priorityQueue = new PriorityQueue((a, b) => a[1] < b[1]);\r\n  const visited = new Map([[startIndex, 0]]); // помещать сюда вершину из очереди\r\n  const path = {};\r\n  let isWork = true;\r\n\r\n  priorityQueue.add([startIndex, 0]);\r\n\r\n  while (isWork && !priorityQueue.isEmpty()) {\r\n    const [currentIndex] = priorityQueue.poll();\r\n    const currentVertex = graph[currentIndex];\r\n\r\n    if (currentIndex === endIndex) {\r\n      isWork = false;\r\n      break;\r\n    }\r\n\r\n    aInfo.addVertex(\r\n      {\r\n        vertex: currentIndex,\r\n        siblings: graph[currentIndex].siblings,\r\n      },\r\n      prevIndex\r\n    );\r\n\r\n    // Получить текущую вершину из очереди и получить ее соседей\r\n\r\n    // пройтипо всем соседям текущей вершины, вычислить вес, указать предка\r\n    for (let i = 0; i < currentVertex.siblings.length; i++) {\r\n      // сосед, находящийся в обработке у текущей вершины\r\n      const sibling = currentVertex.siblings[i];\r\n      const vertex = graphControll.getVertexByIndex(sibling.vertex);\r\n\r\n      if (vertex && canVisitedVertex(vertex)) {\r\n        const nextWeight = visited.get(currentIndex) + getVertexWeight(vertex);\r\n\r\n        const weightIsLower =\r\n          visited.get(sibling.vertex) === undefined ||\r\n          nextWeight < visited.get(sibling.vertex);\r\n\r\n        // вычислить вес соседа, сравнив с прошлым весом, если веса прошлого нет, значит он бесконечность\r\n\r\n        // Положить ребро в просмотренные, с выполненными вычислениями\r\n        if (weightIsLower) {\r\n          priorityQueue.add([sibling.vertex, nextWeight]);\r\n          path[sibling.vertex] = currentIndex;\r\n          visited.set(sibling.vertex, nextWeight);\r\n          aInfo.increment();\r\n        }\r\n      }\r\n    }\r\n\r\n    prevIndex = currentIndex;\r\n  }\r\n\r\n  const restoredPath = restorePath(endIndex, startIndex, path);\r\n  const result = aInfo.getAlgotitmResult();\r\n\r\n  return {\r\n    ...result,\r\n    path: restoredPath,\r\n  };\r\n}\r\n","import {\r\n  createStore,\r\n  combine,\r\n  createEvent,\r\n  restore,\r\n  createDomain,\r\n} from \"effector\";\r\nimport { breadthFirstSearch } from \"./bred-first-search\";\r\nimport { depthFirstSearch } from \"./depth-first-search\";\r\nimport { dijkstra } from \"./dijkstra\";\r\nimport { clearCanvas, resetStore } from \"../graph\";\r\nimport { setGameStatus, gameStatus } from \"../game\";\r\n\r\nconst algoritmsDomain = createDomain();\r\n\r\nexport const selectAlgoritm = createEvent();\r\nexport const addVisitedVertex = createEvent();\r\nexport const addProcessedVertex = createEvent();\r\nexport const addCustomAlgoritm = createEvent();\r\n\r\nexport const $currentAlgoritm = restore(selectAlgoritm, \"bredth first search\");\r\nexport const $visitedVertex = algoritmsDomain.store([]);\r\nexport const $processedVertex = algoritmsDomain.store({\r\n  vertex: null,\r\n  siblings: [],\r\n});\r\n\r\n$visitedVertex.on(addVisitedVertex, (state, vertex) => [...state, vertex]);\r\n$processedVertex.on(addProcessedVertex, (_, processed) => processed);\r\n\r\nexport const $algoritms = createStore([\r\n  {\r\n    searchFunction: breadthFirstSearch,\r\n    name: \"bredth first search\",\r\n  },\r\n  {\r\n    searchFunction: depthFirstSearch,\r\n    name: \"depth first search\",\r\n  },\r\n  {\r\n    searchFunction: dijkstra,\r\n    name: \"dijkstra\",\r\n  },\r\n  {\r\n    searchFunction: null,\r\n    name: \"custom function\",\r\n    modal: true,\r\n  },\r\n]).on(addCustomAlgoritm, (state, foo) =>\r\n  state.map((algoritm) =>\r\n    algoritm.name === \"custom function\"\r\n      ? { ...algoritm, searchFunction: foo }\r\n      : algoritm\r\n  )\r\n);\r\n\r\nexport const $searchAlgoritm = combine(\r\n  $currentAlgoritm,\r\n  $algoritms,\r\n  (currentAlgoritm, algoritms) =>\r\n    algoritms.find((algoritm) => algoritm.name === currentAlgoritm)\r\n);\r\n\r\nalgoritmsDomain.onCreateStore((store) => store.reset(clearCanvas, resetStore));\r\n\r\nselectAlgoritm.watch(() => setGameStatus(gameStatus.END_GAME));\r\n","import { sample, guard, restore, createDomain } from \"effector\";\r\nimport {\r\n  $graph,\r\n  resetStore,\r\n  clearCanvas,\r\n  $barriers,\r\n  $startEndPosition,\r\n} from \"../graph\";\r\nimport { $searchAlgoritm } from \"../algoritms/model\";\r\nimport { equal, filtredFps } from \"./utils\";\r\n\r\nexport const gameStatus = {\r\n  START: \"START\",\r\n  RESTART: \"RESTART\",\r\n  PAUSE: \"PAUSE\",\r\n  RESUME: \"RESUME\",\r\n  CLEAR: \"CLEAR\",\r\n  END_GAME: \"END_GAME\",\r\n  RESET: \"RESET\",\r\n};\r\n\r\nconst gameDomain = createDomain(\"game\");\r\n\r\nexport const setGameStatus = gameDomain.event();\r\nexport const setTimer = gameDomain.event();\r\nexport const setHistoryGame = gameDomain.event();\r\nexport const recoveryHistoryGame = gameDomain.event();\r\nexport const setCurrentGame = gameDomain.event();\r\n\r\nexport const $path = gameDomain.store({}).reset(resetStore, clearCanvas);\r\nexport const $historyGame = gameDomain.store([]);\r\nexport const $currentTimer = gameDomain.store(15).on(setTimer, filtredFps);\r\n\r\n$historyGame.on(setHistoryGame, (state, { barrier, startEndPosition }) => {\r\n  const nextGame = { barrier, startEndPosition, date: new Date() };\r\n  const findedGame = equal(state, nextGame);\r\n\r\n  return findedGame ? [...state, nextGame] : state;\r\n});\r\n\r\nexport const $currentGame = restore(setCurrentGame, null).reset(\r\n  resetStore,\r\n  clearCanvas\r\n);\r\n\r\nexport const $gameState = restore(setGameStatus, gameStatus.RESET).reset(\r\n  resetStore\r\n);\r\n\r\nexport const startGame = guard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.START),\r\n});\r\n\r\nexport const resumeGame = guard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.RESUME),\r\n});\r\n\r\nexport const endGame = guard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.END_GAME),\r\n});\r\n\r\nconst restoredHistoryGame = guard({\r\n  source: recoveryHistoryGame,\r\n  filter: $gameState.map((state) => state === gameStatus.END_GAME),\r\n});\r\n\r\nguard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.CLEAR),\r\n  target: resetStore,\r\n});\r\n\r\nguard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.START),\r\n  target: clearCanvas,\r\n});\r\n\r\nsample({\r\n  source: $graph,\r\n  clock: endGame,\r\n  target: setHistoryGame,\r\n});\r\n\r\nsample({\r\n  source: {\r\n    graph: $graph,\r\n    algoritm: $searchAlgoritm,\r\n  },\r\n  clock: startGame,\r\n  target: $path,\r\n  fn: ({ graph, algoritm }) => {\r\n    const [start, end] = graph.startEndPosition;\r\n\r\n    const time = window.performance.now();\r\n    const result = algoritm.searchFunction(start, end, graph.graph);\r\n    const timeEnd = window.performance.now() - time;\r\n\r\n    return {\r\n      ...result,\r\n      timeEnd,\r\n    };\r\n  },\r\n});\r\n\r\nsampleForHistoryGame($barriers, \"barrier\");\r\nsampleForHistoryGame($startEndPosition, \"startEndPosition\");\r\nsampleForHistoryGame($currentGame, \"date\");\r\n\r\nfunction sampleForHistoryGame(target, key) {\r\n  return sample({\r\n    source: $historyGame,\r\n    clock: restoredHistoryGame,\r\n    target,\r\n    fn: (historyGame, params) => {\r\n      const findedGame = historyGame.find((game) => game.date === params);\r\n\r\n      return findedGame[key];\r\n    },\r\n  });\r\n}\r\n","import {\r\n  getPositionByIndex,\r\n  convertLocalPositionToGlobal,\r\n  cellSize,\r\n} from \"../config\";\r\n\r\nlet prev = null;\r\nexport function renderPath({ context, path = [], color = \"green\" }) {\r\n  for (let i = 0; i < path.length; i++) {\r\n    const position = getPositionByIndex(path[i]);\r\n    const [x, y] = convertLocalPositionToGlobal(position);\r\n\r\n    if (prev) {\r\n      context.beginPath();\r\n      context.strokeStyle = color;\r\n      context.lineWidth = 2;\r\n      context.moveTo(prev[0], prev[1]);\r\n      context.lineTo(x + cellSize / 2, y + cellSize / 2);\r\n      context.stroke();\r\n    }\r\n\r\n    prev = [x + cellSize / 2, y + cellSize / 2];\r\n  }\r\n\r\n  prev = null;\r\n}\r\n","import { addProcessedVertex, addVisitedVertex } from \"../algoritms\";\r\nimport { setGameStatus, gameStatus } from \"./model\";\r\nimport { renderPath } from \"../render/render-path\";\r\nimport { getPositionByIndex, drawSquare } from \"../config\";\r\n\r\nclass AnimatedVisitedVertex {\r\n  constructor() {\r\n    this.context = null;\r\n  }\r\n\r\n  setVertex({ animationCount, state }, context) {\r\n    if (!this.context) {\r\n      this.context = context;\r\n    }\r\n\r\n    const { processing = [] } = state;\r\n\r\n    if (animationCount < processing.length) {\r\n      addProcessedVertex(processing[animationCount]);\r\n\r\n      if (processing[animationCount - 1]) {\r\n        addVisitedVertex(processing[animationCount - 1].vertex);\r\n      }\r\n    } else {\r\n      setGameStatus(gameStatus.END_GAME);\r\n\r\n      renderPath({\r\n        path: state.path,\r\n        context,\r\n      });\r\n    }\r\n  }\r\n\r\n  animatedVertexWithArray(barriers, context, color = \"#000\") {\r\n    for (let i = 0; i < barriers.length; i++) {\r\n      const [x, y] = getPositionByIndex(barriers[i]);\r\n\r\n      drawSquare({\r\n        position: [x, y],\r\n        context,\r\n        color,\r\n      });\r\n    }\r\n  }\r\n\r\n  animatedVertex(barrier, context, color = \"#000\") {\r\n    if (barrier) {\r\n      const [x, y] = getPositionByIndex(barrier);\r\n\r\n      drawSquare({\r\n        position: [x, y],\r\n        context,\r\n        color,\r\n      });\r\n    }\r\n  }\r\n\r\n  drawVertexWithLoop(processedVertex, visitedVertex) {\r\n    this.animatedVertexWithArray(\r\n      processedVertex.siblings,\r\n      this.context,\r\n      \"#d2ef99\"\r\n    );\r\n    this.animatedVertex(processedVertex.vertex, this.context, \"#f3fc23\");\r\n    this.animatedVertexWithArray(visitedVertex, this.context, \"#00bcd4\");\r\n  }\r\n}\r\n\r\nexport const animatedVisitedVertex = new AnimatedVisitedVertex();\r\n","import {\r\n  createEffect,\r\n  attach,\r\n  createStore,\r\n  sample,\r\n  guard,\r\n  combine,\r\n  merge,\r\n} from \"effector\";\r\nimport { clearCanvas, resetStore } from \"../graph\";\r\nimport { checkGameStatus } from \"./utils\";\r\nimport {\r\n  gameStatus,\r\n  $gameState,\r\n  $currentTimer,\r\n  startGame,\r\n  resumeGame,\r\n} from \"./model\";\r\nimport { animatedVisitedVertex } from \"./animated-vertex\";\r\n\r\nconst tickFx = createEffect().use(\r\n  (fps) => new Promise((rs) => setTimeout(rs, 1000 / (fps * 2)))\r\n);\r\n\r\nexport function createTick($state, context) {\r\n  const $animationCount = createStore(0).reset(clearCanvas, resetStore);\r\n\r\n  const tickWithParams = attach({\r\n    effect: tickFx,\r\n    source: $currentTimer,\r\n    mapParams: (_, fps) => fps,\r\n  });\r\n\r\n  const $combineState = combine(\r\n    $state,\r\n    $animationCount,\r\n    (state, animationCount) => ({ state, animationCount })\r\n  );\r\n\r\n  $animationCount.on(tickWithParams.done, (state) => state + 1);\r\n\r\n  sample($combineState, tickWithParams).watch((state) => {\r\n    animatedVisitedVertex.setVertex(state, context);\r\n  });\r\n\r\n  guard({\r\n    source: merge([startGame, resumeGame, tickWithParams.done]),\r\n    filter: $gameState.map((state) =>\r\n      checkGameStatus(state, [gameStatus.RESUME, gameStatus.START])\r\n    ),\r\n    target: tickWithParams,\r\n  });\r\n}\r\n","import { getTargetIndex } from \"./config\";\r\nimport { $gameState, gameStatus, checkGameStatus } from \"./game\";\r\n\r\nclass Controll {\r\n  constructor() {\r\n    this.isMouseDown = false;\r\n    this.isMouseMove = false;\r\n    this.listeners = [];\r\n    this.state = {};\r\n    this.lastIndex = null;\r\n    this.disabledListeners = [];\r\n  }\r\n\r\n  init() {\r\n    $gameState.watch((state) => {\r\n      if (\r\n        checkGameStatus(state, [\r\n          gameStatus.START,\r\n          gameStatus.PAUSE,\r\n          gameStatus.RESUME,\r\n        ])\r\n      ) {\r\n        this.disabledListener();\r\n      } else {\r\n        this.includeListener();\r\n      }\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  registerClickEventToCanvas(canvas) {\r\n    canvas.addEventListener(\"mousedown\", (event) => {\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"mousedown\")\r\n        .forEach((userEvent) => userEvent.eventListener());\r\n\r\n      this.isMouseDown = true;\r\n      this.isMouseMove = false;\r\n    });\r\n\r\n    canvas.addEventListener(\"mouseup\", (event) => {\r\n      this.isMouseDown = false;\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"mouseup\")\r\n        .forEach((userEvent) => userEvent.eventListener(event, this.state));\r\n    });\r\n\r\n    canvas.addEventListener(\"click\", (event) => {\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"click\")\r\n        .forEach((userEvent) => {\r\n          if (!this.isMouseMove) {\r\n            userEvent.eventListener(event, this.state);\r\n          }\r\n        });\r\n    });\r\n\r\n    canvas.addEventListener(\"mousemove\", (event) => {\r\n      const index = getTargetIndex(event);\r\n\r\n      if (this.isMouseDown && index !== this.lastIndex) {\r\n        this.lastIndex = index;\r\n        this.isMouseMove = true;\r\n        this.listeners\r\n          .filter((userEvent) => userEvent.type === \"mousemove\")\r\n          .forEach((userEvent) =>\r\n            userEvent.eventListener(event, this.state, this.lastIndex)\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  disabledListener() {\r\n    this.clear();\r\n  }\r\n\r\n  includeListener() {\r\n    this.listeners = this.disabledListeners;\r\n  }\r\n\r\n  addMouseDownEvent(eventListener) {\r\n    this.listeners.push({ type: \"mousedown\", eventListener });\r\n  }\r\n\r\n  addMouseUpEvent(eventListener) {\r\n    this.listeners.push({ type: \"mouseup\", eventListener });\r\n  }\r\n\r\n  addMouseMoveEvent(eventListener) {\r\n    this.listeners.push({ type: \"mousemove\", eventListener });\r\n  }\r\n\r\n  addMouseClickEvent(eventListener) {\r\n    this.listeners.push({ type: \"click\", eventListener });\r\n  }\r\n\r\n  setState(state) {\r\n    this.state = state;\r\n\r\n    return this;\r\n  }\r\n\r\n  clear() {\r\n    if (this.listeners.length > 0) {\r\n      this.disabledListeners = this.listeners;\r\n      this.isMouseDown = false;\r\n      this.isMouseMove = false;\r\n      this.listeners = [];\r\n      this.lastIndex = null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const canvasControl = new Controll();\r\ncanvasControl.init();\r\n","import { getLocalSize, getIndexByPosition } from \"../config\";\r\nimport { setBarrier, removeBarrierItem } from \"../graph\";\r\n\r\nexport function renderCeil(event, state) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  const { graph, barrierType } = state;\r\n\r\n  const [startIndex, endIndex] = graph.startEndPosition;\r\n\r\n  return {\r\n    renderForMove: () => {\r\n      if (index !== startIndex && index !== endIndex) {\r\n        setBarrier({ index, barrierType });\r\n      }\r\n    },\r\n    renderForClick: () => {\r\n      if (index !== startIndex && index !== endIndex) {\r\n        removeBarrierItem(index);\r\n      }\r\n    },\r\n  };\r\n}\r\n","import { getLocalSize, getIndexByPosition, ceilType } from \"../config\";\r\nimport { renderCeil } from \"./render-ceil\";\r\nimport { renderStart, renderEnd } from \"./drow-start-end-position\";\r\n\r\nclass RenderBarriers {\r\n  constructor() {\r\n    this.ceilType = null;\r\n    this.context = null;\r\n    this.renderWithMove = this.renderWithMove.bind(this);\r\n    this.clear = this.clear.bind(this);\r\n  }\r\n\r\n  renderWithMove(event, state) {\r\n    const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n    const index = getIndexByPosition([w, h]);\r\n    const { graph } = state;\r\n    const { renderForMove, renderForClick } = renderCeil(event, state);\r\n\r\n    if (!this.ceilType) {\r\n      this.ceilType = graph.graph[index].type;\r\n    }\r\n\r\n    switch (this.ceilType) {\r\n      case ceilType.BARIER:\r\n        return renderForClick();\r\n      case ceilType.WATER:\r\n        return renderForClick();\r\n      case ceilType.SAND:\r\n        return renderForClick();\r\n      case ceilType.START_POSITION:\r\n        return renderStart(index, state);\r\n      case ceilType.END_POSITION:\r\n        return renderEnd(index, state);\r\n      case ceilType.EMPTY:\r\n        return renderForMove();\r\n    }\r\n  }\r\n\r\n  drowBarriers(barriers, context) {\r\n    for (let i = 0; i < barriers.length; i++) {\r\n      if (barriers[i].barrierType === ceilType.WATER) {\r\n        barriers[i].render(context, \"#73c8ef\");\r\n      }\r\n      if (barriers[i].barrierType === ceilType.SAND) {\r\n        barriers[i].render(context, \"#fae8c2\");\r\n      }\r\n      if (barriers[i].barrierType === ceilType.BARIER) {\r\n        barriers[i].render(context);\r\n      }\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.ceilType = null;\r\n  }\r\n}\r\n\r\nexport const drowBarriers = new RenderBarriers();\r\n","import { triggerStartPosition, triggerEndPosition } from \"../graph\";\r\nimport { colorSchema, getPositionByIndex, drawSquare } from \"../config\";\r\n\r\nexport function drowStartEndPOsitions(startEndPosition, context) {\r\n  for (let i = 0; i < startEndPosition.length; i++) {\r\n    const index = getPositionByIndex(startEndPosition[i]);\r\n\r\n    drawSquare({\r\n      position: index,\r\n      context,\r\n      color: colorSchema.startEndColor[i],\r\n    });\r\n  }\r\n}\r\n\r\nexport function renderStart(index, { graph }) {\r\n  const findIndex = graph.barrier.find((barrier) => barrier.index === index);\r\n  const [, endIndex] = graph.startEndPosition;\r\n\r\n  if (!findIndex && index !== endIndex) {\r\n    triggerStartPosition(index);\r\n  }\r\n}\r\n\r\nexport function renderEnd(index, { graph }) {\r\n  const findIndex = graph.barrier.find((barrier) => barrier.index === index);\r\n  const [startIndex] = graph.startEndPosition;\r\n\r\n  if (!findIndex && index !== startIndex) {\r\n    triggerEndPosition(index);\r\n  }\r\n}\r\n","import { clearALlCanvas } from \"../config\";\r\nimport { canvasControl } from \"../control-canvas\";\r\nimport { animatedVisitedVertex } from \"../game/animated-vertex\";\r\nimport { drowBarriers } from \"./render-barrier-with-type\";\r\nimport { drowStartEndPOsitions } from \"./drow-start-end-position\";\r\n\r\nexport function executeLogic(canvas, context, gridData) {\r\n  return function render({\r\n    graph,\r\n    visitedVertex,\r\n    processedVertex,\r\n    barrierType,\r\n  }) {\r\n    clearALlCanvas(context, canvas);\r\n\r\n    canvasControl.setState({ graph, barrierType });\r\n\r\n    animatedVisitedVertex.drawVertexWithLoop(processedVertex, visitedVertex);\r\n\r\n    drowBarriers.drowBarriers(graph.barrier, context);\r\n\r\n    drowStartEndPOsitions(graph.startEndPosition, context);\r\n\r\n    gridData.applyStyles();\r\n    context.stroke(gridData.grid);\r\n  };\r\n}\r\n","import { sample, merge, combine } from \"effector\";\r\nimport { pageHeight, pageWidth, getLocalSize, getGlobalSize } from \"./config\";\r\nimport { configureCanvas } from \"./config-canvas\";\r\nimport { canvasControl } from \"./control-canvas\";\r\nimport { $graph, resetStore, clearCanvas, $barrierType } from \"./graph\";\r\nimport { executeLogic } from \"./render/render\";\r\nimport { $path, createTick } from \"./game\";\r\nimport { $visitedVertex, $processedVertex } from \"./algoritms\";\r\nimport { buildGrid } from \"./render/build-grid\";\r\nimport { drowBarriers } from \"./render/render-barrier-with-type\";\r\nimport { renderCeil } from \"./render/render-ceil\";\r\n\r\nconst $state = combine({\r\n  visitedVertex: $visitedVertex,\r\n  graph: $graph,\r\n  processedVertex: $processedVertex,\r\n  barrierType: $barrierType,\r\n});\r\n\r\nexport function renderCanvas(canvas, context) {\r\n  const localSize = getLocalSize(pageWidth, pageHeight);\r\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\r\n  const gridData = buildGrid(context);\r\n\r\n  addEventsToCanvas(canvas);\r\n  configureCanvas(canvas, globalSize);\r\n\r\n  const render = executeLogic(canvas, context, gridData);\r\n\r\n  $state.watch(render);\r\n\r\n  sample({\r\n    source: $state,\r\n    clock: merge([resetStore, clearCanvas]),\r\n  }).watch(render);\r\n\r\n  createTick($path, context);\r\n}\r\n\r\nfunction addEventsToCanvas() {\r\n  canvasControl.registerClickEventToCanvas(canvas);\r\n  canvasControl.addMouseMoveEvent(drowBarriers.renderWithMove);\r\n  canvasControl.addMouseClickEvent((e, s) => renderCeil(e, s).renderForClick());\r\n  canvasControl.addMouseUpEvent(drowBarriers.clear);\r\n}\r\n\r\nconst canvas = document.getElementById(\"viewport\");\r\n\r\nif (canvas) {\r\n  const context = canvas.getContext(\"2d\");\r\n\r\n  renderCanvas(canvas, context);\r\n}\r\n","import {\r\n  cellSize,\r\n  colorSchema,\r\n  borderSize,\r\n  getLocalSize,\r\n  getGlobalSize,\r\n  pageHeight,\r\n  pageWidth,\r\n} from \"../config\";\r\n\r\nexport function buildGrid(context) {\r\n  const grid = new Path2D();\r\n\r\n  const localSize = getLocalSize(pageWidth, pageHeight);\r\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\r\n\r\n  for (let i = 0; i <= localSize.w; i++) {\r\n    grid.moveTo(i * cellSize + borderSize, 0);\r\n    grid.lineTo(i * cellSize + borderSize, globalSize.h);\r\n  }\r\n\r\n  for (let i = 0; i <= localSize.h; i++) {\r\n    grid.moveTo(0, i * cellSize + borderSize);\r\n    grid.lineTo(globalSize.w, i * cellSize + borderSize);\r\n  }\r\n\r\n  return {\r\n    grid,\r\n    applyStyles: () => {\r\n      context.lineWidth = borderSize;\r\n      context.strokeStyle = colorSchema.borderColor;\r\n    },\r\n  };\r\n}\r\n","export function configureCanvas(canvas, { w, h }) {\r\n  canvas.height = h;\r\n  canvas.width = w;\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactModal from \"react-modal\";\r\n\r\nReactModal.setAppElement(\"#root\");\r\n\r\nexport function ModalWrapper({ isOpen, onRequestClose, children, width }) {\r\n  return (\r\n    <ReactModal\r\n      isOpen={isOpen}\r\n      closeTimeoutMS={200}\r\n      onRequestClose={onRequestClose}\r\n    >\r\n      <StyledRootWrapper onClick={onRequestClose}>\r\n        <StyledWrapper>\r\n          <StyledInner width={width} onClick={(e) => e.stopPropagation()}>\r\n            {children}\r\n            <CloseModal onClick={onRequestClose} />\r\n          </StyledInner>\r\n        </StyledWrapper>\r\n      </StyledRootWrapper>\r\n    </ReactModal>\r\n  );\r\n}\r\n\r\nexport const StyledInner = styled.div`\r\n  background: #fff;\r\n  padding: 25px;\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  text-align: left;\r\n  max-width: 800px;\r\n  margin: 10px;\r\n  width: ${({ width }) => width}px;\r\n  position: relative;\r\n  border-radius: 10px;\r\n  opacity: 0;\r\n  transition: all 0.3s;\r\n  transform: translateX(-100px);\r\n`;\r\n\r\nexport const StyledRootWrapper = styled.div`\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1043;\r\n  position: fixed;\r\n  opacity: 0;\r\n  transition: all 0.3s;\r\n`;\r\n\r\nexport const StyledWrapper = styled.div`\r\n  position: absolute;\r\n  margin: 0;\r\n  padding: 0;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1045;\r\n  outline: 0;\r\n  overflow: auto;\r\n  white-space: normal;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #27262687;\r\n`;\r\n\r\nconst CloseModal = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  cursor: pointer;\r\n  width: 30px;\r\n  height: 30px;\r\n  &:after {\r\n    position: absolute;\r\n    content: \"\\\\2718\";\r\n    top: 50%;\r\n    right: 50%;\r\n    transform: translate(50%, -50%);\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Icon = styled.div`\r\n  cursor: pointer;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Text = styled.p`\r\n  font-size: 14px;\r\n`;\r\n","import React from \"react\";\r\nimport { Button as DefaultButton } from \"@material-ui/core\";\r\n\r\nexport function Button({\r\n  icon: Icon,\r\n  type,\r\n  size = 14,\r\n  children,\r\n  onClick,\r\n  variant = \"contained\",\r\n  color = \"default\",\r\n}) {\r\n  return type === \"outline\" ? (\r\n    <DefaultButton onClick={onClick}>{children}</DefaultButton>\r\n  ) : (\r\n    <DefaultButton\r\n      style={{ fontSize: \"11px\" }}\r\n      onClick={onClick}\r\n      variant={variant}\r\n      color={color}\r\n      startIcon={Icon && <Icon size={size} />}\r\n    >\r\n      {children}\r\n    </DefaultButton>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { css } from \"styled-components\";\r\n\r\nexport const WithTag = ({ as, children, to, onClick, ...props }) =>\r\n  React.createElement(as, { to, onClick, ...props }, children);\r\n\r\nWithTag.defaultProps = {\r\n  as: \"div\",\r\n};\r\n\r\nconst is = (value) => Boolean(value);\r\nconst prop = (value) => (is(value) ? value : \"initial\");\r\nexport const ifProps = (name, styles) => (props) => is(props[name]) && styles;\r\nexport const getStyle = (propsName, styles) => (props) =>\r\n  props[propsName] && styles[props[propsName]];\r\n\r\nexport const mixins = (props) => css`\r\n  align-content: ${prop(props.alignContent)};\r\n  align-items: ${prop(props.align)};\r\n  flex-basis: ${prop(props.basis)};\r\n  flex-grow: ${prop(props.grow)};\r\n  flex-shrink: ${prop(props.shrink)};\r\n  justify-content: ${prop(props.justify)};\r\n  order: ${prop(props.order)};\r\n  padding: ${prop(props.padding)};\r\n  width: ${prop(props.width)};\r\n  max-width: ${prop(props.maxW)};\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { WithTag, mixins } from \"../../lib/styled-components-layout\";\r\n\r\nexport const FlexContainer = styled(WithTag)`\r\n  ${mixins}\r\n  display: flex;\r\n  flex-direction: ${({ direction }) => direction || \"row\"};\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  padding: 15px 0px;\r\n`;\r\n\r\nexport const Left = styled.div`\r\n  width: 25%;\r\n  text-align: left;\r\n  padding-right: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport { FormControlLabel, Switch as DefaultSwitch } from \"@material-ui/core\";\r\nimport { FlexContainer, Left } from \"../templates\";\r\n\r\nexport function Switch({ label, name = \"gilad\", ...rest }) {\r\n  return (\r\n    <label style={{ cursor: \"pointer\" }}>\r\n      <FlexContainer>\r\n        <Left>\r\n          <FormControlLabel control={<DefaultSwitch {...rest} name={name} />} />\r\n        </Left>\r\n        <h3>{label}</h3>\r\n      </FlexContainer>\r\n    </label>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FiSettings } from \"react-icons/fi\";\r\nimport { ModalWrapper } from \"./modal-wrapper\";\r\nimport { Icon } from \"../atoms\";\r\n\r\nexport function Settings() {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  return (\r\n    <>\r\n      <Icon onClick={() => setOpen(true)}>\r\n        <FiSettings color=\"#fff\" size=\"35\" />\r\n      </Icon>\r\n      <ModalWrapper isOpen={isOpen} onRequestClose={() => setOpen(false)}>\r\n        Setting info\r\n      </ModalWrapper>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FiInfo } from \"react-icons/fi\";\r\nimport { ModalWrapper } from \"./modal-wrapper\";\r\nimport { Icon, Text } from \"../atoms\";\r\nimport { FlexContainer } from \"../templates\";\r\n\r\nexport function Info() {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  return (\r\n    <>\r\n      <Icon onClick={() => setOpen(true)}>\r\n        <FiInfo color=\"#fff\" size=\"35\" />\r\n      </Icon>\r\n\r\n      <InfoModal isOpen={isOpen} setOpen={setOpen} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction InfoModal({ isOpen, setOpen }) {\r\n  return (\r\n    <ModalWrapper\r\n      width={500}\r\n      isOpen={isOpen}\r\n      onRequestClose={() => setOpen(false)}\r\n    >\r\n      <FlexContainer>\r\n        <ColorBlock color=\"green\" />\r\n        <Text>- Точка старта алгоритма</Text>\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <ColorBlock color=\"red\" />\r\n        <Text>- Точка завершения алгоритма</Text>\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <ColorBlock color=\"#00bcd4\" />\r\n        <Text>- Пройденная вершина</Text>\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <ColorBlock color=\"#f3fc23\" />\r\n        <Text>- Вершина, находящаяся в обработке</Text>\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <ColorBlock color=\"#d2ef99\" />\r\n        <Text>- Соседи текущей вершины</Text>\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <ColorBlock color=\"#bbbbbb\" />\r\n        <Text>- Цвет не проходимого барьера</Text>\r\n      </FlexContainer>\r\n    </ModalWrapper>\r\n  );\r\n}\r\n\r\nconst ColorBlock = styled.div`\r\n  width: 35px;\r\n  height: 35px;\r\n  background: ${({ color }) => color};\r\n  margin-right: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport { FiBook } from \"react-icons/fi\";\r\nimport { ModalWrapper } from \"./modal-wrapper\";\r\nimport { Icon } from \"../atoms\";\r\n\r\nexport function AboutAlgoritms() {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  return (\r\n    <>\r\n      <Icon onClick={() => setOpen(true)}>\r\n        <FiBook color=\"#fff\" size=\"35\" />\r\n      </Icon>\r\n      <ModalWrapper isOpen={isOpen} onRequestClose={() => setOpen(false)}>\r\n        algoritm info\r\n      </ModalWrapper>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { Button } from \"../atoms\";\r\n\r\nexport function InfoAboutAlgoritmApi({ codeString }) {\r\n  const [isOpen, toggle] = React.useReducer((prev) => !prev, false);\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={toggle} type=\"outline\">\r\n        Посмотреть информацию об api\r\n      </Button>\r\n      <Wrapper isOpen={isOpen}>\r\n        <a\r\n          href=\"https://github.com/bogdanq/algorithms/blob/master/src/algoritms/bred-first-search.js\"\r\n          target=\"_blank\"\r\n        >\r\n          Пример алгоритма\r\n        </a>\r\n        <SyntaxHighlighter language=\"typescript\" style={docco}>\r\n          {codeString}\r\n        </SyntaxHighlighter>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  ${({ isOpen }) =>\r\n    isOpen\r\n      ? css`\r\n          height: 500px;\r\n          border-top: 1px solid #00bcd4;\r\n          margin-bottom: 15px;\r\n          overflow-y: auto;\r\n        `\r\n      : css`\r\n          height: 0;\r\n          overflow: hidden;\r\n        `};\r\n  transition: all 0.2s;\r\n  padding-top: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport { Select as DefaultSelect, MenuItem } from \"@material-ui/core\";\r\nimport { ceilType } from \"../../../config\";\r\nimport { setBarrierType, $barrierType } from \"../../../graph\";\r\nimport { useStore } from \"effector-react\";\r\n\r\nexport function SelectBarrierType() {\r\n  const barrierType = useStore($barrierType);\r\n\r\n  const handleChange = React.useCallback((event) => {\r\n    setBarrierType(event.target.value);\r\n  }, []);\r\n\r\n  return (\r\n    <DefaultSelect\r\n      style={{ width: \"100%\" }}\r\n      value={barrierType}\r\n      onChange={handleChange}\r\n    >\r\n      <MenuItem value={ceilType.BARIER}>Не проходимый барьер</MenuItem>\r\n      <MenuItem value={ceilType.WATER}>Вода (вес 10)</MenuItem>\r\n      <MenuItem value={ceilType.SAND}>Пеоск (вес 3)</MenuItem>\r\n    </DefaultSelect>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FaHistory } from \"react-icons/fa\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useStore } from \"effector-react\";\r\nimport { $historyGame, recoveryHistoryGame, $currentGame } from \"../../../game\";\r\nimport { ModalWrapper } from \"../molecules\";\r\nimport { FlexContainer } from \"../templates\";\r\nimport { Icon } from \"../atoms\";\r\n\r\nexport function History() {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  const historyGame = useStore($historyGame);\r\n\r\n  return (\r\n    <HistoryIcon historyCount={historyGame.length}>\r\n      <Icon onClick={() => setOpen(true)}>\r\n        <FaHistory color=\"#fff\" size=\"35\" />\r\n      </Icon>\r\n      <ModalWrapper\r\n        width={600}\r\n        isOpen={isOpen}\r\n        onRequestClose={() => setOpen(false)}\r\n      >\r\n        {historyGame.length > 0 ? (\r\n          <HistoryList historyGame={historyGame} setOpen={setOpen} />\r\n        ) : (\r\n          <h1>У вас нет законченных игр </h1>\r\n        )}\r\n      </ModalWrapper>\r\n    </HistoryIcon>\r\n  );\r\n}\r\n\r\nfunction HistoryList({ historyGame, setOpen }) {\r\n  const currentGame = useStore($currentGame);\r\n  const handleChangeItem = React.useCallback(\r\n    (item) => {\r\n      recoveryHistoryGame(item.date);\r\n      setOpen(false);\r\n    },\r\n    [setOpen]\r\n  );\r\n\r\n  return (\r\n    <HistoryListWrapper>\r\n      <FlexContainer>\r\n        {historyGame.map((item, index) => (\r\n          <HistoryItem\r\n            active={currentGame === item.date}\r\n            onClick={() => handleChangeItem(item)}\r\n            key={index.toString()}\r\n          >\r\n            <p>Баррьеры: {item.barrier.length}</p>\r\n            <p>Старт: {item.startEndPosition[0]}</p>\r\n            <p>Конец: {item.startEndPosition[1]}</p>\r\n            <h3>Будет дата</h3>\r\n          </HistoryItem>\r\n        ))}\r\n      </FlexContainer>\r\n    </HistoryListWrapper>\r\n  );\r\n}\r\n\r\nconst HistoryItem = styled.div`\r\n  border: 2px solid #666666;\r\n  border-radius: 10px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  margin: 5px;\r\n  transition: all 0.3s;\r\n\r\n  ${({ active }) =>\r\n    active &&\r\n    css`\r\n      border: 2px solid #00bcd4;\r\n    `}\r\n\r\n  &:hover {\r\n    border: 2px solid #00bcd4;\r\n  }\r\n`;\r\n\r\nconst HistoryListWrapper = styled.div`\r\n  overflow-y: auto;\r\n  max-height: 500px;\r\n`;\r\n\r\nconst HistoryIcon = styled.div`\r\n  position: relative;\r\n  &:after {\r\n    ${({ historyCount }) =>\r\n      historyCount > 0 &&\r\n      css`\r\n    position: absolute;\r\n    content: \"${historyCount}\";\r\n    background: red;\r\n    border-radius: 50%;\r\n    padding: 3px;\r\n    font-size: 12px;\r\n    text-align: center;\r\n    top: -10px;\r\n    right: -15px;\r\n    height: 13px;\r\n    width: 13px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center\r\n    `}\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Draggable from \"react-draggable\";\r\nimport { Settings, Info, AboutAlgoritms } from \"../molecules\";\r\nimport { History } from \"./history\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  padding: 15px 10px;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.5);\r\n  cursor: default;\r\n  left: 20px;\r\n  bottom: 20px;\r\n\r\n  &:hover {\r\n    cursor: move;\r\n  }\r\n\r\n  & > div {\r\n    margin: 0 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport function InfoDraggable() {\r\n  return (\r\n    <Draggable>\r\n      <Wrapper>\r\n        <Info />\r\n        <Settings />\r\n        <AboutAlgoritms />\r\n        <History />\r\n      </Wrapper>\r\n    </Draggable>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useStore } from \"effector-react\";\r\nimport { GrResume, GrClear, GrPlay, GrPause } from \"react-icons/gr\";\r\nimport {\r\n  gameStatus,\r\n  setGameStatus,\r\n  $gameState,\r\n  checkGameStatus,\r\n} from \"../../../game\";\r\nimport { Button } from \"../atoms\";\r\nimport { FlexContainer } from \"../templates\";\r\n\r\nexport function GameControllButtons() {\r\n  const gameState = useStore($gameState);\r\n\r\n  return (\r\n    <FlexContainer justify=\"space-around\">\r\n      {checkGameStatus(gameState, [\r\n        gameStatus.START,\r\n        gameStatus.PAUSE,\r\n        gameStatus.RESUME,\r\n      ]) ? (\r\n        !checkGameStatus(gameState, [gameStatus.PAUSE]) ? (\r\n          <Button\r\n            onClick={() => setGameStatus(gameStatus.PAUSE)}\r\n            icon={GrPause}\r\n          >\r\n            Пауза\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={() => setGameStatus(gameStatus.RESUME)}\r\n            icon={GrResume}\r\n          >\r\n            Продолжить\r\n          </Button>\r\n        )\r\n      ) : (\r\n        <Button onClick={() => setGameStatus(gameStatus.START)} icon={GrPlay}>\r\n          Старт\r\n        </Button>\r\n      )}\r\n      <Button onClick={() => setGameStatus(gameStatus.CLEAR)} icon={GrClear}>\r\n        Очистить\r\n      </Button>\r\n    </FlexContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { sample, createStore } from \"effector\";\r\nimport { useStore } from \"effector-react\";\r\nimport { $path, endGame } from \"../../../game\";\r\n\r\nconst $graphState = createStore({});\r\n\r\nsample({\r\n  source: $path,\r\n  clock: endGame,\r\n  target: $graphState,\r\n});\r\n\r\nexport function AlgotitmResult() {\r\n  const graphState = useStore($graphState);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"select-bar_info\">\r\n        Количество итераций: <span>{graphState?.count || 0}</span>\r\n      </h3>\r\n      <h3 className=\"select-bar_info\">\r\n        Время прохождения:\r\n        <span> {graphState?.timeEnd?.toFixed(4) || 0} ms</span>\r\n      </h3>\r\n      <h3 className=\"select-bar_info\">\r\n        Длина пути: <span>{graphState?.path?.length || 0}</span>\r\n      </h3>\r\n    </>\r\n  );\r\n}\r\n","import { createEvent, restore } from \"effector\";\r\n\r\nexport const handleChangeCode = createEvent();\r\nexport const $code = restore(handleChangeCode, \"\");\r\n","export const codeString = `\r\n// что бы работала визуализация, функция должна следовать общему api\r\n  type youAlgoritmFunction = (\r\n    startIndex: number, \r\n    endIndex: number, \r\n    graph: Graph\r\n  ) => { \r\n    path: Array<number>, \r\n    AlgoritmController \r\n  }\r\n\r\n// метод нужен, что бы каждую итерацию алгоритма сохранять его данные\r\n\r\n  type AlgoritmController = {\r\n    increment: () => void;\r\n    getAlgotitmResult: () => AlgoritmController;\r\n    addVertex: (\r\n      processing: Array<{vertex: number, siblings: number[]}>,\r\n      visited: number\r\n    ) => void;\r\n    count: number;\r\n    processing: Array<{vertex: number, siblings: number[]}>;\r\n    visited: number | null[];\r\n    startIndex: number;\r\n    endIndex: number;\r\n  }\r\n\r\n  const algoritmController = new AlgoritmController(startIndex: number, endIndex: number)\r\n\r\n\r\n  /*\r\n    GraphControll - создает граф, может вернуть вершину по индексу\r\n  */\r\n\r\n  enum CeilType {\r\n    START_POSITION = \"START_POSITION\",\r\n    END_POSITION = \"END_POSITION\",\r\n    BARIER = \"BARIER\",\r\n    EMPTY = \"EMPTY\",\r\n    VISITED = \"VISITED\",\r\n  };\r\n  \r\n  type Graph = { [key: string]: { type: CeilType , siblings: Array<number> } }\r\n\r\n  type GraphControll = {\r\n    getVertexByIndex: (index: number) => Graph\r\n  }\r\n\r\n  /* \r\n    функция restorePath восстановить путь, по переданному обьекту. \r\n    Содержит путь от предыдущего к следующей вершине\r\n  */\r\n\r\n  type RestorePath = (\r\n    endIndex: number, \r\n    startIndex: number, \r\n    parent: { [key: string]: number }\r\n  ) => Array<number>\r\n\r\n  // сanVisitedVertex проверяет, можно ли прайти на указанную вершину\r\n    type CanVisitedVertex = (\r\n      vertex: { type: CeilType , siblings: Array<number> }\r\n    ) => boolean\r\n`;\r\n","import React from \"react\";\r\nimport { useStore } from \"effector-react\";\r\nimport { graphControll as newGraph } from \"../../../../graph\";\r\nimport {\r\n  canVisitedVertex as newCan,\r\n  restorePath as newRe,\r\n  addCustomAlgoritm,\r\n} from \"../../../../algoritms\";\r\nimport { AlgoritmController as newAlg } from \"../../../../algoritms/controller\";\r\nimport { Button } from \"../../atoms\";\r\nimport { InfoAboutAlgoritmApi } from \"../../molecules\";\r\nimport { $code, handleChangeCode } from \"./model\";\r\nimport { codeString } from \"./code-string\";\r\n\r\nconst AlgoritmController = newAlg;\r\nconst restorePath = newRe;\r\nconst canVisitedVertex = newCan;\r\nconst graphControll = newGraph;\r\n\r\nlet foo = null;\r\n\r\nexport function CodeArea({ onRequestClose }) {\r\n  const code = useStore($code);\r\n\r\n  const handleChangeAlgoritm = React.useCallback(() => {\r\n    foo = new Function(\r\n      \"AlgoritmController\",\r\n      \"restorePath\",\r\n      \"canVisitedVertex\",\r\n      \"graphControll\",\r\n      `return ${code}`\r\n    );\r\n\r\n    addCustomAlgoritm(\r\n      foo(AlgoritmController, restorePath, canVisitedVertex, graphControll)\r\n    );\r\n\r\n    onRequestClose();\r\n  }, [onRequestClose, code]);\r\n\r\n  return (\r\n    <>\r\n      <InfoAboutAlgoritmApi codeString={codeString} />\r\n      <textarea\r\n        style={{ height: \"200px\", width: \"100%\" }}\r\n        onChange={(e) => handleChangeCode(e.target.value)}\r\n        value={code}\r\n      />\r\n      <Button onClick={handleChangeAlgoritm}>Сохранить</Button>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { combine } from \"effector\";\r\nimport { useStore } from \"effector-react\";\r\nimport { ModalWrapper } from \"../molecules\";\r\nimport {\r\n  $algoritms,\r\n  selectAlgoritm,\r\n  $currentAlgoritm,\r\n} from \"../../../algoritms\";\r\nimport { CodeArea } from \"./code-area\";\r\n\r\nconst $state = combine({\r\n  algoritms: $algoritms,\r\n  currentAlgoritm: $currentAlgoritm,\r\n});\r\n\r\nexport function AlgoritmsList() {\r\n  const { algoritms, currentAlgoritm } = useStore($state);\r\n  const [isOpen, setOpen] = React.useState(false);\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"select-bar_title\">Выбирите алгоритм:</h2>\r\n      <ul>\r\n        {algoritms.map((algoritm) => (\r\n          <li\r\n            onClick={() => {\r\n              selectAlgoritm(algoritm.name);\r\n              if (algoritm.modal) {\r\n                setOpen(true);\r\n              }\r\n            }}\r\n            className={currentAlgoritm === algoritm.name ? \"isActive\" : \"\"}\r\n            key={algoritm.name}\r\n          >\r\n            {algoritm.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <CustomAlgoritmModal isOpen={isOpen} setOpen={setOpen} />\r\n    </>\r\n  );\r\n}\r\n\r\nconst CustomAlgoritmModal = ({ isOpen, setOpen }) => {\r\n  return (\r\n    <ModalWrapper\r\n      width={700}\r\n      isOpen={isOpen}\r\n      onRequestClose={() => setOpen(false)}\r\n    >\r\n      <CodeArea onRequestClose={() => setOpen(false)} />\r\n    </ModalWrapper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport DraggableDefault from \"react-draggable\";\r\nimport { combine } from \"effector\";\r\nimport { useStore } from \"effector-react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { setTimer, $currentTimer } from \"../../../game\";\r\nimport { $canMoveDiagonal, changeDirection } from \"../../../graph\";\r\nimport { SelectBarrierType } from \"../molecules\";\r\nimport { Left, FlexContainer } from \"../templates\";\r\nimport { Switch } from \"../atoms\";\r\nimport { GameControllButtons } from \"./game-controll-buttons\";\r\nimport { AlgotitmResult } from \"./algoritm-result\";\r\nimport { AlgoritmsList } from \"./algoritms\";\r\n\r\nconst $state = combine({\r\n  currentTimer: $currentTimer,\r\n  canMoveDiagonal: $canMoveDiagonal,\r\n});\r\n\r\nexport function RightSideBar() {\r\n  const { currentTimer, canMoveDiagonal } = useStore($state);\r\n\r\n  return (\r\n    <DraggableDefault>\r\n      <div className=\"select-bar\">\r\n        <h2 className=\"select-bar_title\">Информация:</h2>\r\n        <AlgotitmResult />\r\n        <AlgoritmsList />\r\n        <GameControllButtons />\r\n        <div className=\"info-wrapper\" style={{ borderTop: \"2px solid #fff\" }}>\r\n          <FlexContainer>\r\n            <Left>\r\n              <TextField\r\n                type=\"number\"\r\n                value={currentTimer}\r\n                onChange={({ target }) => {\r\n                  setTimer(parseInt(target.value));\r\n                }}\r\n              />\r\n            </Left>\r\n            <h3 className=\"select-bar_info\">Скорость</h3>\r\n          </FlexContainer>\r\n\r\n          <Switch\r\n            checked={canMoveDiagonal}\r\n            onChange={changeDirection}\r\n            label=\"Проход по диагонали\"\r\n          />\r\n          <SelectBarrierType />\r\n        </div>\r\n      </div>\r\n    </DraggableDefault>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { renderCanvas } from \"./canvas\";\r\nimport { InfoDraggable } from \"./gui/ui/organisms/info-block\";\r\nimport { RightSideBar } from \"./gui/ui/organisms/right-side-bar\";\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <RightSideBar />\r\n      <InfoDraggable />\r\n    </>\r\n  );\r\n}\r\n","import { createGlobalStyle, css } from \"styled-components\";\r\nimport {\r\n  StyledRootWrapper,\r\n  StyledInner,\r\n} from \"./gui/ui/molecules/modal-wrapper\";\r\n\r\nconst globalCss = css`\r\n  .ReactModal__Body--open {\r\n    overflow: hidden;\r\n  }\r\n\r\n  .ReactModal__Content--after-open {\r\n    border: none !important;\r\n    background: transparent !important;\r\n    ${StyledInner} {\r\n      overflow: hidden;\r\n      opacity: 1;\r\n      transform: translateX(0);\r\n    }\r\n  }\r\n  .ReactModal__Content--before-close {\r\n    ${StyledInner} {\r\n      transform: translateX(100px);\r\n      opacity: 0;\r\n    }\r\n  }\r\n  .ReactModal__Overlay--after-open {\r\n    background-color: transparent !important;\r\n    ${StyledRootWrapper} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n  .ReactModal__Overlay--before-close {\r\n    ${StyledRootWrapper} {\r\n      opacity: 0;\r\n    }\r\n  }\r\n\r\n  .MuiInputBase-input {\r\n    color: #fff;\r\n  }\r\n\r\n  .MuiInput-underline:before,\r\n  .MuiInput-underline:after {\r\n    border-bottom: 1px solid #fff;\r\n  }\r\n`;\r\nexport const GlobalModalStyles = createGlobalStyle`${globalCss}`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { GlobalModalStyles } from \"./global-css\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n    <GlobalModalStyles />\r\n  </>,\r\n  rootElement\r\n);\r\n\r\nexport * from \"./algoritms\";\r\nexport * from \"./graph\";\r\nexport * from \"./game\";\r\n"],"sourceRoot":""}