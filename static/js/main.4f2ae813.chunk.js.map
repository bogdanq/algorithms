{"version":3,"sources":["config.js","graph/controller.js","graph/utils.js","graph/model.js","algoritms/utils.js","algoritms/bred-first-search.js","algoritms/depth-first-search.js","algoritms/model.js","ui/model.js","ui/utils.js","control-canvas.js","ui/loop.js","canvas.js","config-canvas.js","App.js","index.js"],"names":["cellSize","pageWidth","window","innerWidth","pageHeight","innerHeight","borderSize","colorSchema","borderColor","blockColor","startEndColor","ceilType","START_POSITION","END_POSITION","BARIER","EMPTY","VISITED","getLocalSize","w","h","Math","floor","getGlobalSize","convertLocalPositionToGlobal","_ref","_ref2","Object","slicedToArray","x","y","drawSquare","_ref3","_ref3$color","color","position","context","_convertLocalPosition","_convertLocalPosition2","size","fillStyle","fillRect","getIndexByPosition","_ref4","_ref5","getPositionByIndex","index","graphControll","Graph","classCallCheck","this","graph","cellCount","lastIndex","clear","type","siblings","getSiblings","filter","item","objectSpread2","left","getLeftSibling","top","getTopSibling","right","getRightSibling","down","getDownSibling","getTopLeftDiagonal","getTopRightDiagonal","getBotRightDiagonal","getBotLeftDiagonal","bot","_getLocalSize","setBarrierToGraph","barriers","forEach","barrierIndex","updateGraph","setStartPositionToGraph","startIndex","setEndPositionToGraph","endIndex","graphDomain","createDomain","resetStore","event","clearCanvas","setBarrier","removeBarrierItem","triggerStartPosition","triggerEndPosition","$startEndPosition","store","$barrier","onCreateStore","reset","on","state","includes","concat","toConsumableArray","$graph","combine","barrier","startEndPosition","map","_state$startEndPositi","start","end","createGraph","canVisitedVertex","vertex","restorePath","parent","path","target","unshift","length","push","removeDoubleVertex","result","newErr","apply","breadthFirstSearch","logger","createLogger","removeVertexQ","removeVertexV","count","isWork","queue","visited","currentIndex","shift","setVertex","data","name","i","next","getVertexByIndex","setDrowAnimated","depthFirstSearch","stack","algoritmsDomain","selectAlgoritm","createEvent","incrementVertex","increment","$numberOfIterations","_","$canDrowAnimated","$currentAlgoritm","restore","$traversedVertexes","defineProperty","$vertexesCount","$algoritms","createStore","searchFunction","$searchAlgoritm","currentAlgoritm","algoritms","find","algoritm","watch","setGameStatus","gameStatus","END_GAME","START","RESTART","PAUSE","RESUME","CLEAR","gameDomain","setTimer","$path","$currentTimer","$gameState","startGame","guard","source","endGame","checkGameStatus","_len","arguments","status","Array","_key","some","sample","clock","fn","_graph$startEndPositi","time","performance","now","timeEnd","canvasControl","Controll","isMouseDown","isMouseMove","listeners","disabledListeners","_this","disabledListener","includeListener","canvas","_this2","addEventListener","userEvent","eventListener","_getLocalSize3","clientX","clientY","getTargetIndex","init","gameLoop","GameLoop","animateId","createClass","key","value","traversedVertexes","vertexesCount","gameState","getState","fps","clearTimeout","renderBarrier","setInterval","getFps","_ref2$path","_ref2$color","prev","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","renderPath","parseInt","$algoritState","canDrowAnimated","undefined","_getPositionByIndex","_getPositionByIndex2","renderCeil","renderForMove","renderForClick","renderLogic","_getLocalSize2","findIndex","renderStart","renderEnd","document","getElementById","getContext","localSize","globalSize","gridData","grid","Path2D","applyStyles","buildGrid","render","clearRect","width","height","clearALlCanvas","setState","renderActionsCeil","configureCanvas","registerClickEventToCanvas","addMouseMoveEvent","e","s","addMouseUpEvent","addMouseClickEvent","merge","objectWithoutProperties","removeAnimation","renderCanvas","$store","App","_store$path","_store$path$timeEnd","_store$path2","_store$path2$path","useStore","currentTimer","react_default","a","createElement","className","numberOfIterations","toFixed","onClick","Fragment","min","max","onChange","__webpack_require__","d","__webpack_exports__","_setVertex","_setDrowAnimated","utils_canVisitedVertex","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.4f2ae813.chunk.js","sourcesContent":["export const cellSize = 35;\r\nexport const pageWidth = window.innerWidth;\r\nexport const pageHeight = window.innerHeight;\r\nexport const borderSize = 0.5;\r\nexport const boardLength = pageWidth * pageHeight;\r\nexport const startPosition = 0;\r\nexport const endPosition = 110;\r\n\r\nexport const colorSchema = {\r\n  borderColor: \"#000\",\r\n  blockColor: \"#8080805c\",\r\n  startEndColor: [\"green\", \"red\"],\r\n};\r\n\r\nexport const ceilType = {\r\n  START_POSITION: \"START_POSITION\",\r\n  END_POSITION: \"END_POSITION\",\r\n  BARIER: \"BARIER\",\r\n  EMPTY: \"EMPTY\",\r\n  VISITED: \"VISITED\",\r\n};\r\n\r\nexport function getLocalSize(w, h) {\r\n  return {\r\n    w: Math.floor(w / cellSize),\r\n    h: Math.floor(h / cellSize),\r\n  };\r\n}\r\n\r\nexport function getGlobalSize(w, h) {\r\n  return {\r\n    w: Math.floor(w * cellSize),\r\n    h: Math.floor(h * cellSize),\r\n  };\r\n}\r\n\r\nexport function convertLocalPositionToGlobal([x, y]) {\r\n  return [x * cellSize, y * cellSize];\r\n}\r\n\r\nexport function drawSquare({\r\n  color = \"rgb(152, 251, 152)\",\r\n  position,\r\n  context,\r\n}) {\r\n  const [x, y] = convertLocalPositionToGlobal(position);\r\n  const size = cellSize - borderSize * 2;\r\n\r\n  context.fillStyle = color;\r\n  context.fillRect(x + borderSize * 2, y + borderSize * 2, size, size);\r\n}\r\n\r\nexport function clearALlCanvas(context, canvas) {\r\n  return context.clearRect(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\nexport function getIndexByPosition([x, y]) {\r\n  const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n  return y * w + x;\r\n}\r\n\r\nexport function getPositionByIndex(index) {\r\n  const { w } = getLocalSize(pageWidth, pageHeight);\r\n  const y = Math.floor(index / w);\r\n  const x = index - y * w;\r\n\r\n  return [x, y];\r\n}\r\n\r\nexport function getTargetIndex(event) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  return index;\r\n}\r\n","import { ceilType, pageWidth, getLocalSize, pageHeight } from \"../config\";\r\n\r\nclass Graph {\r\n  constructor({ w, h }) {\r\n    this.graph = {};\r\n    this.cellCount = w * h;\r\n    this.lastIndex = null;\r\n  }\r\n\r\n  createGraph() {\r\n    this.clear();\r\n    for (let index = 0; index < this.cellCount; index++) {\r\n      this.graph[index] = {\r\n        type: ceilType.EMPTY,\r\n        siblings: this.getSiblings(index).filter(\r\n          (item) => typeof item !== \"undefined\"\r\n        ),\r\n      };\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  getVertexByIndex(index) {\r\n    return this.graph[index];\r\n  }\r\n\r\n  updateGraph({ index, type }) {\r\n    if (this.graph[index]) {\r\n      this.graph[index] = { ...this.graph[index], type };\r\n      if (type === ceilType.BARIER) {\r\n        this.graph[index] = { ...this.graph[index], type, siblings: [] };\r\n      }\r\n    }\r\n  }\r\n\r\n  getSiblings(index) {\r\n    const left = this.getLeftSibling(index);\r\n    const top = this.getTopSibling(index);\r\n    const right = this.getRightSibling(index);\r\n    const down = this.getDownSibling(index);\r\n\r\n    const topLeft = this.getTopLeftDiagonal(top, left);\r\n    const topRight = this.getTopRightDiagonal(top, right);\r\n    const botRight = this.getBotRightDiagonal(down, right);\r\n    const botLeft = this.getBotLeftDiagonal(down, left);\r\n\r\n    // return [left, top, right, down];\r\n    return [left, topLeft, top, topRight, right, botRight, down, botLeft];\r\n  }\r\n\r\n  getTopLeftDiagonal(top, left) {\r\n    if (top >= 0 && left >= 0) {\r\n      return top - 1;\r\n    }\r\n  }\r\n\r\n  getTopRightDiagonal(top, right) {\r\n    if (top >= 0 && right >= 0) {\r\n      return top + 1;\r\n    }\r\n  }\r\n\r\n  getBotLeftDiagonal(bot, left) {\r\n    if (bot >= 0 && left >= 0) {\r\n      return bot - 1;\r\n    }\r\n  }\r\n\r\n  getBotRightDiagonal(bot, right) {\r\n    if (bot >= 0 && right) {\r\n      return bot + 1;\r\n    }\r\n  }\r\n\r\n  getBottomDiagonal(down) {\r\n    const left = down - 1;\r\n    const right = down + 1;\r\n\r\n    return [left, right];\r\n  }\r\n\r\n  getDownSibling(index) {\r\n    const { w, h } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasDownNeighbour = Math.floor(index / w) < h - 1;\r\n\r\n    if (hasDownNeighbour) {\r\n      return index + w;\r\n    }\r\n  }\r\n\r\n  getTopSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasTopNeighbour = Math.floor(index / w) > 0;\r\n\r\n    if (hasTopNeighbour) {\r\n      return index - w;\r\n    }\r\n  }\r\n\r\n  getRightSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasRightNeighbour = index % w < w - 1;\r\n\r\n    if (hasRightNeighbour) {\r\n      return index + 1;\r\n    }\r\n  }\r\n\r\n  getLeftSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasLeftNeighbour = index % w > 0;\r\n\r\n    if (hasLeftNeighbour) {\r\n      return index - 1;\r\n    }\r\n  }\r\n\r\n  getGraph() {\r\n    return this.graph;\r\n  }\r\n\r\n  clear() {\r\n    this.graph = {};\r\n    return this;\r\n  }\r\n}\r\n\r\nexport const graphControll = new Graph(getLocalSize(pageWidth, pageHeight));\r\n","import { ceilType } from \"../config\";\r\n\r\nexport function setBarrierToGraph(graph, barriers) {\r\n  barriers.forEach((barrierIndex) => {\r\n    graph.updateGraph({ index: barrierIndex, type: ceilType.BARIER });\r\n  });\r\n}\r\n\r\nexport function setStartPositionToGraph(graph, startIndex) {\r\n  graph.updateGraph({ index: startIndex, type: ceilType.START_POSITION });\r\n}\r\n\r\nexport function setEndPositionToGraph(graph, endIndex) {\r\n  graph.updateGraph({ index: endIndex, type: ceilType.END_POSITION });\r\n}\r\n","import { combine, createDomain } from \"effector\";\r\nimport { startPosition, endPosition } from \"../config\";\r\nimport { graphControll } from \"./controller\";\r\nimport {\r\n  setBarrierToGraph,\r\n  setStartPositionToGraph,\r\n  setEndPositionToGraph,\r\n} from \"./utils\";\r\n\r\nconst graphDomain = createDomain(\"graph\");\r\n\r\nexport const resetStore = graphDomain.event();\r\nexport const clearCanvas = graphDomain.event();\r\n\r\nexport const setBarrier = graphDomain.event();\r\nexport const removeBarrierItem = graphDomain.event();\r\n\r\nexport const triggerStartPosition = graphDomain.event();\r\nexport const triggerEndPosition = graphDomain.event();\r\n\r\nexport const $startEndPosition = graphDomain.store([\r\n  startPosition,\r\n  endPosition,\r\n]);\r\n\r\nexport const $barrier = graphDomain.store([]);\r\n\r\ngraphDomain.onCreateStore((store) => store.reset(resetStore));\r\n\r\n$barrier\r\n  .on(setBarrier, (state, index) => {\r\n    const isFindIndex = state.includes(index);\r\n\r\n    return isFindIndex ? state : [...state, index];\r\n  })\r\n  .on(removeBarrierItem, (state, index) =>\r\n    state.filter((item) => item !== index)\r\n  );\r\n\r\n$startEndPosition\r\n  .on(triggerStartPosition, (state, index) => [index, state[1]])\r\n  .on(triggerEndPosition, (state, index) => [state[0], index]);\r\n\r\nexport const $graph = combine({\r\n  barrier: $barrier,\r\n  startEndPosition: $startEndPosition,\r\n}).map((state) => {\r\n  const [start, end] = state.startEndPosition;\r\n\r\n  const graph = graphControll.createGraph();\r\n\r\n  setBarrierToGraph(graph, state.barrier);\r\n  setStartPositionToGraph(graph, start);\r\n  setEndPositionToGraph(graph, end);\r\n\r\n  return { ...state, graph: graph.graph };\r\n});\r\n","import { ceilType } from \"../config\";\r\n\r\nexport const canVisitedVertex = (vertex) => {\r\n  if (vertex.type !== ceilType.BARIER) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport function restorePath(endIndex, startIndex, parent) {\r\n  const path = [];\r\n  let target = parent[endIndex];\r\n\r\n  while (target && target !== startIndex) {\r\n    path.unshift(target);\r\n    target = parent[target];\r\n  }\r\n\r\n  if (path.length > 0) {\r\n    path.push(endIndex);\r\n  }\r\n\r\n  path.unshift(startIndex);\r\n\r\n  return path;\r\n}\r\n\r\nexport function removeDoubleVertex() {\r\n  let result = [];\r\n\r\n  return function removeVertex(item) {\r\n    const newErr = item.filter((vertex) => !result.includes(vertex));\r\n\r\n    result.push(...newErr);\r\n\r\n    return newErr;\r\n  };\r\n}\r\n","import { createLogger } from \"../index\";\r\nimport { graphControll } from \"../graph\";\r\nimport { canVisitedVertex, restorePath, removeDoubleVertex } from \"./utils\";\r\n\r\nexport function breadthFirstSearch(startIndex, endIndex, graph) {\r\n  // console.log(graph);\r\n  const logger = createLogger();\r\n  const removeVertexQ = removeDoubleVertex();\r\n  const removeVertexV = removeDoubleVertex();\r\n  let count = 0;\r\n\r\n  let isWork = true;\r\n  const queue = [startIndex];\r\n  const visited = [startIndex];\r\n  const parent = {};\r\n\r\n  while (isWork && queue.length > 0) {\r\n    const currentIndex = queue.shift();\r\n\r\n    logger.setVertex({\r\n      data: removeVertexV(visited),\r\n      name: \"visited\",\r\n    });\r\n\r\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\r\n      const next = graph[currentIndex].siblings[i];\r\n      const vertex = graphControll.getVertexByIndex(next);\r\n\r\n      if (!visited.includes(next) && canVisitedVertex(vertex)) {\r\n        queue.push(next);\r\n        visited.push(next);\r\n\r\n        parent[next] = currentIndex;\r\n        count++;\r\n      }\r\n\r\n      if (next === endIndex) {\r\n        isWork = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    logger.setVertex({\r\n      data: removeVertexQ(queue),\r\n      name: \"queue\",\r\n    });\r\n  }\r\n\r\n  logger.setDrowAnimated(count);\r\n\r\n  return restorePath(endIndex, startIndex, parent);\r\n}\r\n","import { graphControll } from \"../graph\";\r\nimport { createLogger } from \"../index\";\r\nimport { canVisitedVertex, restorePath, removeDoubleVertex } from \"./utils\";\r\n\r\nexport function depthFirstSearch(startIndex, endIndex, graph) {\r\n  const logger = createLogger();\r\n  const removeVertexQ = removeDoubleVertex();\r\n  const removeVertexV = removeDoubleVertex();\r\n  let count = 0;\r\n\r\n  let isWork = true;\r\n  const stack = [startIndex];\r\n  const visited = [startIndex];\r\n  const parent = {};\r\n\r\n  while (isWork && stack.length > 0) {\r\n    const currentIndex = stack.shift();\r\n\r\n    logger.setVertex({\r\n      data: removeVertexV(visited),\r\n      name: \"visited\",\r\n    });\r\n\r\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\r\n      const next = graph[currentIndex].siblings[i];\r\n      const vertex = graphControll.getVertexByIndex(next);\r\n\r\n      if (!visited.includes(next) && canVisitedVertex(vertex)) {\r\n        stack.unshift(next);\r\n        visited.push(next);\r\n\r\n        parent[next] = currentIndex;\r\n        count++;\r\n      }\r\n\r\n      if (next === endIndex) {\r\n        isWork = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    logger.setVertex({\r\n      data: removeVertexQ(stack),\r\n      name: \"queue\",\r\n    });\r\n  }\r\n\r\n  logger.setDrowAnimated(count);\r\n\r\n  return restorePath(endIndex, startIndex, parent);\r\n}\r\n","import {\r\n  createStore,\r\n  combine,\r\n  createEvent,\r\n  restore,\r\n  createDomain,\r\n} from \"effector\";\r\nimport { breadthFirstSearch } from \"./bred-first-search\";\r\nimport { depthFirstSearch } from \"./depth-first-search\";\r\nimport { clearCanvas, resetStore } from \"../graph\";\r\nimport { setGameStatus, gameStatus } from \"../ui/model\";\r\n\r\nconst algoritmsDomain = createDomain();\r\n\r\nexport const selectAlgoritm = createEvent();\r\nexport const incrementVertex = createEvent();\r\nexport const setVertex = createEvent();\r\nexport const setDrowAnimated = createEvent();\r\nexport const increment = createEvent();\r\n\r\nexport const $numberOfIterations = algoritmsDomain\r\n  .store(0)\r\n  .on(increment, (_, count) => count);\r\n\r\nexport const $canDrowAnimated = algoritmsDomain\r\n  .store(false)\r\n  .on(setDrowAnimated, () => true);\r\n\r\nexport const $currentAlgoritm = restore(selectAlgoritm, \"bredth first search\");\r\nexport const $traversedVertexes = algoritmsDomain\r\n  .store({\r\n    queue: [],\r\n    visited: [],\r\n  })\r\n  .on(setVertex, (state, { data, name }) => {\r\n    return { ...state, [name]: [...state[name], data] };\r\n  });\r\n\r\nexport const $vertexesCount = algoritmsDomain\r\n  .store(0)\r\n  .on(incrementVertex, (state) => state + 1);\r\n\r\nexport const $algoritms = createStore([\r\n  {\r\n    searchFunction: breadthFirstSearch,\r\n    name: \"bredth first search\",\r\n  },\r\n  {\r\n    searchFunction: depthFirstSearch,\r\n    name: \"depth first search\",\r\n  },\r\n]);\r\n\r\nexport const $searchAlgoritm = combine(\r\n  $currentAlgoritm,\r\n  $algoritms,\r\n  (currentAlgoritm, algoritms) =>\r\n    algoritms.find((algoritm) => algoritm.name === currentAlgoritm)\r\n);\r\n\r\nexport const createLogger = () => {\r\n  return {\r\n    setDrowAnimated: (count) => {\r\n      setDrowAnimated();\r\n      increment(count);\r\n    },\r\n\r\n    setVertex: (vertex) => {\r\n      setVertex(vertex);\r\n      incrementVertex();\r\n    },\r\n  };\r\n};\r\n\r\nalgoritmsDomain.onCreateStore((store) => store.reset(clearCanvas, resetStore));\r\n\r\nselectAlgoritm.watch(() => setGameStatus(gameStatus.END_GAME));\r\n","import { sample, guard, restore, forward, createDomain } from \"effector\";\r\nimport { $graph, resetStore, clearCanvas } from \"../graph\";\r\nimport { $searchAlgoritm } from \"../algoritms/model\";\r\nimport { canvasControl } from \"../control-canvas\";\r\n\r\nexport const gameStatus = {\r\n  START: \"START\",\r\n  RESTART: \"RESTART\",\r\n  PAUSE: \"PAUSE\",\r\n  RESUME: \"RESUME\",\r\n  CLEAR: \"CLEAR\",\r\n  END_GAME: \"END_GAME\",\r\n};\r\n\r\nconst gameDomain = createDomain(\"game\");\r\n\r\nexport const setGameStatus = gameDomain.event();\r\nexport const setTimer = gameDomain.event();\r\n\r\nexport const $path = gameDomain.store({}).reset(resetStore, clearCanvas);\r\nexport const $currentTimer = restore(setTimer, 16).reset(resetStore);\r\n\r\nexport const $gameState = restore(setGameStatus, gameStatus.END_GAME).reset(\r\n  resetStore\r\n);\r\n\r\nexport const startGame = guard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.START),\r\n});\r\n\r\nguard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.CLEAR),\r\n  target: resetStore,\r\n});\r\n\r\nexport const endGame = guard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.END_GAME),\r\n});\r\n\r\nsample({\r\n  source: {\r\n    graph: $graph,\r\n    algoritm: $searchAlgoritm,\r\n  },\r\n  clock: startGame,\r\n  target: $path,\r\n  fn: ({ graph, algoritm }) => {\r\n    const [start, end] = graph.startEndPosition;\r\n\r\n    clearCanvas();\r\n\r\n    const time = window.performance.now();\r\n\r\n    const path = algoritm.searchFunction(start, end, graph.graph);\r\n    const timeEnd = window.performance.now() - time;\r\n\r\n    return { path, timeEnd };\r\n  },\r\n});\r\n","export function checkGameStatus(target, ...status) {\r\n  return status.some((item) => target === item);\r\n}\r\n","import { getTargetIndex } from \"./config\";\r\nimport { $gameState, gameStatus } from \"./ui/model\";\r\nimport { checkGameStatus } from \"./ui/utils\";\r\n\r\nclass Controll {\r\n  constructor() {\r\n    this.isMouseDown = false;\r\n    this.isMouseMove = false;\r\n    this.listeners = [];\r\n    this.state = {};\r\n    this.lastIndex = null;\r\n    this.disabledListeners = [];\r\n  }\r\n\r\n  init() {\r\n    $gameState.watch((state) => {\r\n      if (\r\n        checkGameStatus(\r\n          state,\r\n          gameStatus.START,\r\n          gameStatus.PAUSE,\r\n          gameStatus.RESUME\r\n        )\r\n      ) {\r\n        this.disabledListener();\r\n      } else {\r\n        this.includeListener();\r\n      }\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  registerClickEventToCanvas(canvas) {\r\n    canvas.addEventListener(\"mousedown\", (event) => {\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"mousedown\")\r\n        .forEach((userEvent) => userEvent.eventListener());\r\n\r\n      this.isMouseDown = true;\r\n      this.isMouseMove = false;\r\n    });\r\n\r\n    canvas.addEventListener(\"mouseup\", (event) => {\r\n      this.isMouseDown = false;\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"mouseup\")\r\n        .forEach((userEvent) => userEvent.eventListener(event, this.state));\r\n    });\r\n\r\n    canvas.addEventListener(\"click\", (event) => {\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"click\")\r\n        .forEach((userEvent) => {\r\n          if (!this.isMouseMove) {\r\n            userEvent.eventListener(event, this.state);\r\n          }\r\n        });\r\n    });\r\n\r\n    canvas.addEventListener(\"mousemove\", (event) => {\r\n      const index = getTargetIndex(event);\r\n\r\n      if (this.isMouseDown && index !== this.lastIndex) {\r\n        this.lastIndex = index;\r\n        this.isMouseMove = true;\r\n        this.listeners\r\n          .filter((userEvent) => userEvent.type === \"mousemove\")\r\n          .forEach((userEvent) =>\r\n            userEvent.eventListener(event, this.state, this.lastIndex)\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  disabledListener() {\r\n    this.clear();\r\n  }\r\n\r\n  includeListener() {\r\n    this.listeners = this.disabledListeners;\r\n  }\r\n\r\n  addMouseDownEvent(eventListener) {\r\n    this.listeners.push({ type: \"mousedown\", eventListener });\r\n  }\r\n\r\n  addMouseUpEvent(eventListener) {\r\n    this.listeners.push({ type: \"mouseup\", eventListener });\r\n  }\r\n\r\n  addMouseMoveEvent(eventListener) {\r\n    this.listeners.push({ type: \"mousemove\", eventListener });\r\n  }\r\n\r\n  addMouseClickEvent(eventListener) {\r\n    this.listeners.push({ type: \"click\", eventListener });\r\n  }\r\n\r\n  setState(state) {\r\n    this.state = state;\r\n    return this;\r\n  }\r\n\r\n  clear() {\r\n    if (this.listeners.length > 0) {\r\n      this.disabledListeners = this.listeners;\r\n      this.isMouseDown = false;\r\n      this.isMouseMove = false;\r\n      this.listeners = [];\r\n      this.lastIndex = null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const canvasControl = new Controll();\r\ncanvasControl.init();\r\n","import { clearCanvas } from \"../graph\";\r\nimport { renderBarrier, renderPath } from \"../canvas\";\r\nimport {\r\n  gameStatus,\r\n  $path,\r\n  setGameStatus,\r\n  $gameState,\r\n  $currentTimer,\r\n} from \"./model\";\r\n\r\nexport class GameLoop {\r\n  constructor() {\r\n    this.count = 1;\r\n    this.animateId = null;\r\n  }\r\n\r\n  start(state, context) {\r\n    const { traversedVertexes, vertexesCount } = state;\r\n    const gameState = $gameState.getState();\r\n    const fps = $currentTimer.getState();\r\n    clearTimeout(this.animateId);\r\n\r\n    if (gameState === gameStatus.END_GAME) {\r\n      return;\r\n    }\r\n\r\n    if (gameState === gameStatus.PAUSE) {\r\n      clearTimeout(this.animateId);\r\n      return;\r\n    }\r\n\r\n    if (this.count < traversedVertexes.visited.length) {\r\n      renderBarrier(traversedVertexes.visited[this.count], context, \"#afeeee\");\r\n\r\n      if (this.count < traversedVertexes.visited.length - 1) {\r\n        renderBarrier(\r\n          traversedVertexes.queue[this.count],\r\n          context,\r\n          \"rgb(152, 251, 152)\"\r\n        );\r\n      }\r\n\r\n      this.animateId = setInterval(\r\n        () => this.start({ traversedVertexes, vertexesCount }, context),\r\n        this.getFps(fps)\r\n      );\r\n\r\n      clearCanvas.watch(() => clearTimeout(this.animateId));\r\n\r\n      this.count++;\r\n    } else {\r\n      setGameStatus(gameStatus.END_GAME);\r\n      this.clear();\r\n      const { path } = $path.getState();\r\n      renderPath({\r\n        path,\r\n        context,\r\n      });\r\n    }\r\n  }\r\n\r\n  getFps(fps) {\r\n    const newFps = parseInt(fps) === 1 ? fps : fps * 10;\r\n    return 1000 / newFps;\r\n  }\r\n\r\n  clear() {\r\n    // cancelAnimationFrame(this.animateId);\r\n    this.count = 1;\r\n    this.animateId = null;\r\n  }\r\n\r\n  removeAnimation() {\r\n    clearTimeout(this.animateId);\r\n  }\r\n}\r\n\r\nexport const gameLoop = new GameLoop();\r\n","import { guard, sample, merge, combine, forward } from \"effector\";\r\nimport {\r\n  colorSchema,\r\n  cellSize,\r\n  pageHeight,\r\n  pageWidth,\r\n  borderSize,\r\n  getLocalSize,\r\n  getGlobalSize,\r\n  drawSquare,\r\n  clearALlCanvas,\r\n  getPositionByIndex,\r\n  getIndexByPosition,\r\n  ceilType,\r\n  convertLocalPositionToGlobal,\r\n} from \"./config\";\r\nimport { configureCanvas } from \"./config-canvas\";\r\nimport { canvasControl } from \"./control-canvas\";\r\nimport {\r\n  setBarrier,\r\n  removeBarrierItem,\r\n  triggerStartPosition,\r\n  triggerEndPosition,\r\n  $graph,\r\n  resetStore,\r\n  clearCanvas,\r\n} from \"./graph\";\r\n\r\nimport {\r\n  $path,\r\n  $isValidGameState,\r\n  gameStatus,\r\n  setGameStatus,\r\n  $gameState,\r\n} from \"./ui/model\";\r\nimport {\r\n  $canDrowAnimated,\r\n  $traversedVertexes,\r\n  $vertexesCount,\r\n} from \"./algoritms\";\r\nimport { GameLoop, gameLoop } from \"./ui/loop\";\r\n\r\nconst $algoritState = combine({\r\n  canDrowAnimated: $canDrowAnimated,\r\n  traversedVertexes: $traversedVertexes,\r\n  vertexesCount: $vertexesCount,\r\n  gameState: $gameState,\r\n});\r\n\r\nexport function renderBarrier(\r\n  barrier,\r\n  context,\r\n  color = colorSchema.blockColor\r\n) {\r\n  for (let i = 0; i < barrier.length; i++) {\r\n    const [x, y] = getPositionByIndex(barrier[i]);\r\n    drawSquare({\r\n      position: [x, y],\r\n      context,\r\n      color,\r\n    });\r\n  }\r\n}\r\n\r\nfunction renderActionsCeil(startEndPosition, context) {\r\n  for (let i = 0; i < startEndPosition.length; i++) {\r\n    const index = getPositionByIndex(startEndPosition[i]);\r\n    drawSquare({\r\n      position: index,\r\n      context,\r\n      color: colorSchema.startEndColor[i],\r\n    });\r\n  }\r\n}\r\n\r\nfunction renderCeil(event, state) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  const [startIndex, endIndex] = state.startEndPosition;\r\n\r\n  return {\r\n    renderForMove: () => {\r\n      if (index !== startIndex && index !== endIndex) {\r\n        setBarrier(index);\r\n      }\r\n    },\r\n    renderForClick: () => {\r\n      if (index !== startIndex && index !== endIndex) {\r\n        removeBarrierItem(index);\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nfunction renderStart(index, state) {\r\n  const findIndex = state.barrier.includes(index);\r\n  const [, endIndex] = state.startEndPosition;\r\n\r\n  if (!findIndex && index !== endIndex) {\r\n    triggerStartPosition(index);\r\n  }\r\n}\r\n\r\nfunction renderEnd(index, state, lastIndex) {\r\n  const findIndex = state.barrier.includes(index);\r\n  const [startIndex] = state.startEndPosition;\r\n\r\n  if (!findIndex && index !== startIndex) {\r\n    triggerEndPosition(index);\r\n  }\r\n}\r\n\r\nlet type = null;\r\nfunction renderLogic(event) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n  const state = $graph.getState();\r\n\r\n  if (!type) {\r\n    type = state.graph[index].type;\r\n  }\r\n\r\n  switch (type) {\r\n    case ceilType.BARIER:\r\n      return renderCeil(event, state).renderForClick();\r\n    case ceilType.START_POSITION:\r\n      return renderStart(index, state);\r\n    case ceilType.END_POSITION:\r\n      return renderEnd(index, state);\r\n    case ceilType.EMPTY:\r\n      return renderCeil(event, state).renderForMove();\r\n  }\r\n}\r\n\r\nexport function renderCanvas(canvas, context) {\r\n  const localSize = getLocalSize(pageWidth, pageHeight);\r\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\r\n  const gridData = buildGrid(context);\r\n\r\n  configureCanvas(canvas, globalSize);\r\n\r\n  canvasControl.registerClickEventToCanvas(canvas);\r\n  canvasControl.addMouseMoveEvent((e, s) => {\r\n    return renderLogic(e, s);\r\n  });\r\n  canvasControl.addMouseUpEvent(() => (type = null));\r\n  canvasControl.addMouseClickEvent((e, s) => renderCeil(e, s).renderForClick());\r\n\r\n  function render(state) {\r\n    clearALlCanvas(context, canvas);\r\n    canvasControl.setState(state);\r\n\r\n    renderActionsCeil(state.startEndPosition, context);\r\n    renderBarrier(state.barrier, context);\r\n\r\n    gridData.applyStyles();\r\n    context.stroke(gridData.grid);\r\n  }\r\n\r\n  $graph.watch(render);\r\n\r\n  sample({\r\n    source: $graph,\r\n    clock: merge([resetStore, clearCanvas]),\r\n  }).watch(render);\r\n\r\n  $algoritState.watch(({ canDrowAnimated, gameState, ...state }) => {\r\n    if (canDrowAnimated) {\r\n      if (gameState === gameStatus.START) {\r\n        gameLoop.clear();\r\n      }\r\n\r\n      gameLoop.removeAnimation();\r\n      gameLoop.start(state, context);\r\n    }\r\n  });\r\n}\r\n\r\nlet prev = null;\r\nexport function renderPath({ context, path = [], color = \"green\" }) {\r\n  for (let i = 0; i < path.length; i++) {\r\n    const position = getPositionByIndex(path[i]);\r\n    const [x, y] = convertLocalPositionToGlobal(position);\r\n\r\n    if (prev) {\r\n      context.beginPath();\r\n      context.strokeStyle = color;\r\n      context.lineWidth = 2;\r\n      context.moveTo(prev[0], prev[1]);\r\n      context.lineTo(x + cellSize / 2, y + cellSize / 2);\r\n      context.stroke();\r\n    }\r\n\r\n    prev = [x + cellSize / 2, y + cellSize / 2];\r\n  }\r\n\r\n  prev = null;\r\n}\r\n\r\nfunction buildGrid(context) {\r\n  const grid = new Path2D();\r\n\r\n  const localSize = getLocalSize(pageWidth, pageHeight);\r\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\r\n\r\n  for (let i = 0; i <= localSize.w; i++) {\r\n    grid.moveTo(i * cellSize + borderSize, 0);\r\n    grid.lineTo(i * cellSize + borderSize, globalSize.h);\r\n  }\r\n\r\n  for (let i = 0; i <= localSize.h; i++) {\r\n    grid.moveTo(0, i * cellSize + borderSize);\r\n    grid.lineTo(globalSize.w, i * cellSize + borderSize);\r\n  }\r\n\r\n  return {\r\n    grid,\r\n    applyStyles: () => {\r\n      context.lineWidth = borderSize;\r\n      context.strokeStyle = colorSchema.borderColor;\r\n    },\r\n  };\r\n}\r\n\r\nconst canvas = document.getElementById(\"viewport\");\r\n\r\nif (canvas) {\r\n  const context = canvas.getContext(\"2d\");\r\n\r\n  renderCanvas(canvas, context);\r\n}\r\n","export function configureCanvas(canvas, { w, h }) {\r\n  canvas.height = h;\r\n  canvas.width = w;\r\n}\r\n","import React from \"react\";\r\nimport { useStore } from \"effector-react\";\r\nimport { renderCanvas } from \"./canvas\";\r\nimport {\r\n  setGameStatus,\r\n  gameStatus,\r\n  $gameState,\r\n  $path,\r\n  endGame,\r\n  $currentTimer,\r\n  setTimer,\r\n} from \"./ui/model\";\r\nimport {\r\n  $algoritms,\r\n  selectAlgoritm,\r\n  $currentAlgoritm,\r\n  $numberOfIterations,\r\n} from \"./algoritms/model\";\r\n\r\nimport \"./styles.css\";\r\nimport { checkGameStatus } from \"./ui/utils\";\r\nimport { sample, createStore, guard } from \"effector\";\r\n\r\nconst $store = createStore({});\r\n\r\nsample({\r\n  source: {\r\n    numberOfIterations: $numberOfIterations,\r\n    path: $path,\r\n  },\r\n  clock: endGame,\r\n  target: $store,\r\n});\r\n\r\nexport default function App() {\r\n  const algoritms = useStore($algoritms);\r\n  const currentAlgoritm = useStore($currentAlgoritm);\r\n  const gameState = useStore($gameState);\r\n  const store = useStore($store);\r\n  const currentTimer = useStore($currentTimer);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"select-bar\">\r\n        <h2 className=\"select-bar_title\">Select algoritm</h2>\r\n        <h3 className=\"select-bar_title\">\r\n          Количество итераций: {store?.numberOfIterations || 0}\r\n        </h3>\r\n        <h3 className=\"select-bar_title\">\r\n          Время прохождения: {store?.path?.timeEnd?.toFixed(4) || 0} ms\r\n        </h3>\r\n        <h3 className=\"select-bar_title\">\r\n          Длина пути: {store?.path?.path?.length || 0}\r\n        </h3>\r\n        <ul>\r\n          {algoritms.map((algoritm, index) => (\r\n            <li\r\n              onClick={() => selectAlgoritm(algoritm.name)}\r\n              className={currentAlgoritm === algoritm.name ? \"isActive\" : \"\"}\r\n              key={algoritm.name}\r\n            >\r\n              {algoritm.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"btn-wrapper\">\r\n          <button\r\n            className=\"btn\"\r\n            onClick={() => setGameStatus(gameStatus.START)}\r\n          >\r\n            start\r\n          </button>\r\n          {checkGameStatus(\r\n            gameState,\r\n            gameStatus.START,\r\n            gameStatus.PAUSE,\r\n            gameStatus.RESUME\r\n          ) && (\r\n            <>\r\n              <button\r\n                className=\"btn\"\r\n                onClick={() => setGameStatus(gameStatus.PAUSE)}\r\n              >\r\n                pause\r\n              </button>\r\n\r\n              <button\r\n                className=\"btn\"\r\n                onClick={() => setGameStatus(gameStatus.RESUME)}\r\n              >\r\n                resume\r\n              </button>\r\n            </>\r\n          )}\r\n\r\n          <button\r\n            className=\"btn\"\r\n            onClick={() => setGameStatus(gameStatus.CLEAR)}\r\n          >\r\n            clear\r\n          </button>\r\n        </div>\r\n\r\n        <h3 className=\"select-bar_title\">Скорость: {currentTimer}</h3>\r\n        <input\r\n          type=\"range\"\r\n          value={currentTimer}\r\n          min=\"1\"\r\n          max=\"20\"\r\n          onChange={(e) => setTimer(e.target.value)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n\r\nexport * from \"./algoritms\";\r\nexport * from \"./graph\";\r\nexport * from \"./ui/model\";\r\n"],"sourceRoot":""}