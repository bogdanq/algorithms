{"version":3,"sources":["config.js","game/animations.js","game/barrier.js","graph/controller.js","graph/utils.js","graph/model.js","algoritms/utils.js","algoritms/controller.js","algoritms/bred-first-search.js","algoritms/depth-first-search.js","algoritms/model.js","game/utils.js","game/model.js","game/loop.js","canvas.js","control-canvas.js","config-canvas.js","gui/ui/molecules/modal-wrapper.js","gui/ui/atoms/icon.js","gui/ui/atoms/text.js","gui/ui/molecules/settings.js","gui/ui/containers/flex-wrapper.js","gui/ui/molecules/info.js","gui/ui/molecules/about-algoritms.js","gui/ui/organisms/history.js","gui/ui/organisms/info-block.js","App.js","global-css.js","index.js"],"names":["cellSize","pageWidth","window","innerWidth","pageHeight","innerHeight","borderSize","colorSchema","borderColor","blockColor","startEndColor","ceilType","START_POSITION","END_POSITION","BARIER","EMPTY","VISITED","getLocalSize","w","h","Math","floor","getGlobalSize","convertLocalPositionToGlobal","_ref","_ref2","Object","slicedToArray","x","y","drawSquare","_ref3","_ref3$color","color","position","context","width","_convertLocalPosition","_convertLocalPosition2","size","fillStyle","fillRect","getIndexByPosition","_ref4","_ref5","getPositionByIndex","index","drawSquareWithAnimation","params","animateId","_params$position","_params$scale","scale","requestAnimationFrame","objectSpread2","cancelAnimationFrame","drawMarkerWithAnimation","_params$width","_ref6","_ref6$color","_convertLocalPosition3","_convertLocalPosition4","strokeStyle","beginPath","moveTo","lineTo","stroke","drawMark","Barier","classCallCheck","this","canDrawe","canRemove","createClass","key","value","graphControll","Graph","graph","cellCount","lastIndex","canMoveDiagonal","clear","type","siblings","getSiblings","filter","item","left","getLeftSibling","top","getTopSibling","right","getRightSibling","down","getDownSibling","getTopLeftDiagonal","getTopRightDiagonal","getBotRightDiagonal","getBotLeftDiagonal","bot","_getLocalSize","setBarrierToGraph","barriers","forEach","barrier","updateGraph","getIndex","setStartPositionToGraph","startIndex","setEndPositionToGraph","endIndex","graphDomain","createDomain","resetStore","event","clearCanvas","changeDirection","setBarrier","removeBarrierItem","triggerStartPosition","triggerEndPosition","$startEndPosition","store","$canMoveDiagonal","$barriers","on","state","onCreateStore","reset","removedBarrier","guard","source","sample","clock","fn","find","Boolean","watch","remove","concat","toConsumableArray","removed","$graph","combine","startEndPosition","map","_state$startEndPositi","start","end","createGraph","canVisitedVertex","vertex","restorePath","parent","path","target","unshift","length","push","removeDoubleVertex","reduce","acc","row","el","some","accRow","includes","AlgoritmController","count","processing","visited","breadthFirstSearch","aInfo","prevIndex","isWork","queue","currentIndex","shift","addVertex","i","next","getVertexByIndex","increment","result","getAlgotitmResult","depthFirstSearch","stack","algoritmsDomain","selectAlgoritm","createEvent","addVisitedVertex","addProcessedVertex","$currentAlgoritm","restore","$visitedVertex","$processedVertex","_","processed","$algoritms","createStore","searchFunction","name","$searchAlgoritm","currentAlgoritm","algoritms","algoritm","checkGameStatus","status","renderVisitedVertex","_getPositionByIndex","_getPositionByIndex2","renderVisitedVertexByArr","arguments","undefined","_getPositionByIndex3","_getPositionByIndex4","setGameStatus","gameStatus","END_GAME","START","RESTART","PAUSE","RESUME","CLEAR","RESET","gameDomain","setTimer","setHistoryGame","recoveryHistoryGame","setCurrentGame","$path","$historyGame","$currentTimer","_startEndPosition","date","Date","$currentGame","$gameState","startGame","resumeGame","endGame","historyGame","findedGame","game","_graph$startEndPositi","time","performance","now","timeEnd","tickFx","createEffect","use","fps","Promise","rs","setTimeout","createTick","$state","$animationCount","tickWithParams","attach","effect","mapParams","$combineState","animationCount","done","animatedVisitedVertex","merge","_ref2$path","_ref2$color","prev","lineWidth","renderPath","canvasControl","Controll","isMouseDown","isMouseMove","listeners","disabledListeners","_this","disabledListener","includeListener","canvas","_this2","addEventListener","userEvent","eventListener","_getLocalSize3","clientX","clientY","getTargetIndex","init","gameState","$mainState","visitedVertex","processedVertex","renderCeil","renderForMove","renderForClick","renderLogic","_getLocalSize2","getState","findIndex","renderStart","renderEnd","document","getElementById","getContext","localSize","globalSize","gridData","grid","Path2D","applyStyles","buildGrid","render","clearRect","height","clearALlCanvas","setState","renderActionsCeil","renderBarrier","configureCanvas","registerClickEventToCanvas","addMouseMoveEvent","addMouseUpEvent","addMouseClickEvent","e","s","renderCanvas","ModalWrapper","isOpen","onRequestClose","children","react_default","a","createElement","lib_default","closeTimeoutMS","StyledRootWrapper","onClick","StyledWrapper","StyledInner","stopPropagation","CloseModal","ReactModal","setAppElement","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","Icon","icon_templateObject","Text","p","text_templateObject","Settings","_React$useState","React","useState","_React$useState2","setOpen","Fragment","index_esm","FlexContainer","flex_wrapper_templateObject","direction","Info","InfoModal","ColorBlock","info_templateObject","AboutAlgoritms","History","useStore","HistoryIcon","historyCount","fa_index_esm","HistoryList","currentGame","handleChangeItem","useCallback","HistoryListWrapper","HistoryItem","active","toString","history_templateObject","css","history_templateObject2","history_templateObject3","history_templateObject4","_templateObject5","Wrapper","info_block_templateObject","InfoDraggable","react_draggable_default","$store","App","_store$timeEnd","_store$path","currentTimer","className","toFixed","style","borderTop","max","min","maxLength","onChange","parseInt","checked","globalCss","global_css_templateObject","GlobalModalStyles","createGlobalStyle","global_css_templateObject2","__webpack_require__","d","__webpack_exports__","utils_canVisitedVertex","barrier_Barier","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.44a3f64d.chunk.js","sourcesContent":["export const cellSize = 35;\r\nexport const pageWidth = window.innerWidth;\r\nexport const pageHeight = window.innerHeight;\r\nexport const borderSize = 0.5;\r\nexport const boardLength = pageWidth * pageHeight;\r\nexport const startPosition = 0;\r\nexport const endPosition = 110;\r\n\r\nexport const colorSchema = {\r\n  borderColor: \"#000\",\r\n  blockColor: \"#bbbbbb\",\r\n  startEndColor: [\"green\", \"red\"],\r\n};\r\n\r\nexport const ceilType = {\r\n  START_POSITION: \"START_POSITION\",\r\n  END_POSITION: \"END_POSITION\",\r\n  BARIER: \"BARIER\",\r\n  EMPTY: \"EMPTY\",\r\n  VISITED: \"VISITED\",\r\n};\r\n\r\nexport function getLocalSize(w, h) {\r\n  return {\r\n    w: Math.floor(w / cellSize),\r\n    h: Math.floor(h / cellSize),\r\n  };\r\n}\r\n\r\nexport function getGlobalSize(w, h) {\r\n  return {\r\n    w: Math.floor(w * cellSize),\r\n    h: Math.floor(h * cellSize),\r\n  };\r\n}\r\n\r\nexport function convertLocalPositionToGlobal([x, y]) {\r\n  return [x * cellSize, y * cellSize];\r\n}\r\n\r\nexport function drawSquare({\r\n  color = \"rgb(152, 251, 152)\",\r\n  position,\r\n  context,\r\n  width,\r\n}) {\r\n  const [x, y] = convertLocalPositionToGlobal(position);\r\n  const size = width || cellSize - borderSize * 2;\r\n\r\n  context.fillStyle = color;\r\n  context.fillRect(x + borderSize * 2, y + borderSize * 2, size, size);\r\n}\r\n\r\nexport function clearALlCanvas(context, canvas) {\r\n  return context.clearRect(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\nexport function getIndexByPosition([x, y]) {\r\n  const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n  return y * w + x;\r\n}\r\n\r\nexport function getPositionByIndex(index) {\r\n  const { w } = getLocalSize(pageWidth, pageHeight);\r\n  const y = Math.floor(index / w);\r\n  const x = index - y * w;\r\n\r\n  return [x, y];\r\n}\r\n\r\nexport function getTargetIndex(event) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  return index;\r\n}\r\n\r\nexport function drawMark({ color = \"#e84a4a\", position, context }) {\r\n  const [x, y] = convertLocalPositionToGlobal(position);\r\n\r\n  context.strokeStyle = color;\r\n\r\n  context.beginPath();\r\n  context.moveTo(x + 10, y + 10);\r\n  context.lineTo(x + cellSize - 10, y + cellSize - 10);\r\n  context.stroke();\r\n\r\n  context.beginPath();\r\n  context.moveTo(x + cellSize - 10, y + 10);\r\n  context.lineTo(x + 10, y + cellSize - 10);\r\n  context.stroke();\r\n}\r\n","import { drawSquare, drawMark, cellSize } from \"../config\";\r\n\r\nexport function drawSquareWithAnimation(params) {\r\n  let animateId;\r\n  let {\r\n    position: [x, y],\r\n    width,\r\n    scale = 0.3,\r\n  } = params;\r\n\r\n  if (width < cellSize) {\r\n    animateId = requestAnimationFrame(() =>\r\n      drawSquareWithAnimation({\r\n        ...params,\r\n        width,\r\n        scale,\r\n      })\r\n    );\r\n\r\n    drawSquare({\r\n      ...params,\r\n      position: [x + scale, y + scale],\r\n    });\r\n\r\n    if (scale > 0 && width % 5 === 0) {\r\n      scale = scale - 0.1;\r\n    }\r\n\r\n    width++;\r\n  } else {\r\n    cancelAnimationFrame(animateId);\r\n  }\r\n}\r\n\r\nexport function drawMarkerWithAnimation(params) {\r\n  let { width = cellSize - 10 } = params;\r\n  let animateId;\r\n\r\n  if (width < cellSize) {\r\n    animateId = requestAnimationFrame(() =>\r\n      drawMarkerWithAnimation({\r\n        ...params,\r\n        width,\r\n      })\r\n    );\r\n\r\n    drawMark({\r\n      ...params,\r\n      width,\r\n    });\r\n\r\n    width++;\r\n  } else {\r\n    drawSquare({\r\n      ...params,\r\n      color: \"#fff\",\r\n      width: 0,\r\n    });\r\n\r\n    cancelAnimationFrame(animateId);\r\n  }\r\n}\r\n","import { getPositionByIndex, drawSquare, colorSchema } from \"../config\";\r\nimport { drawSquareWithAnimation, drawMarkerWithAnimation } from \"./animations\";\r\n\r\nexport class Barier {\r\n  constructor(index) {\r\n    this.index = index;\r\n    this.canDrawe = false;\r\n    this.context = null;\r\n    this.canRemove = false;\r\n    this.position = false;\r\n  }\r\n\r\n  getBarier() {\r\n    return this;\r\n  }\r\n\r\n  getIndex() {\r\n    return this.index;\r\n  }\r\n\r\n  render(context) {\r\n    this.context = context;\r\n    this.position = getPositionByIndex(this.index);\r\n\r\n    if (!this.canRemove) {\r\n      if (!this.canDrawe) {\r\n        drawSquareWithAnimation({\r\n          position: this.position,\r\n          context,\r\n          color: colorSchema.blockColor,\r\n          width: 20,\r\n        });\r\n      } else {\r\n        drawSquare({\r\n          position: this.position,\r\n          context,\r\n          color: colorSchema.blockColor,\r\n        });\r\n      }\r\n\r\n      this.canDrawe = true;\r\n    }\r\n  }\r\n\r\n  remove() {\r\n    this.canRemove = true;\r\n\r\n    drawMarkerWithAnimation({\r\n      position: this.position,\r\n      context: this.context,\r\n    });\r\n\r\n    this.canRemove = false;\r\n  }\r\n}\r\n","import { ceilType, pageWidth, getLocalSize, pageHeight } from \"../config\";\r\n\r\nclass Graph {\r\n  constructor({ w, h }) {\r\n    this.graph = {};\r\n    this.cellCount = w * h;\r\n    this.lastIndex = null;\r\n  }\r\n\r\n  createGraph(canMoveDiagonal) {\r\n    this.clear();\r\n    for (let index = 0; index < this.cellCount; index++) {\r\n      this.graph[index] = {\r\n        type: ceilType.EMPTY,\r\n        siblings: this.getSiblings(index, canMoveDiagonal).filter(\r\n          (item) => typeof item !== \"undefined\"\r\n        ),\r\n      };\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  getVertexByIndex(index) {\r\n    return this.graph[index];\r\n  }\r\n\r\n  updateGraph({ index, type }) {\r\n    if (this.graph[index]) {\r\n      this.graph[index] = { ...this.graph[index], type };\r\n      if (type === ceilType.BARIER) {\r\n        this.graph[index] = { ...this.graph[index], type, siblings: [] };\r\n      }\r\n    }\r\n  }\r\n\r\n  getSiblings(index, canMoveDiagonal) {\r\n    const left = this.getLeftSibling(index);\r\n    const top = this.getTopSibling(index);\r\n    const right = this.getRightSibling(index);\r\n    const down = this.getDownSibling(index);\r\n\r\n    if (canMoveDiagonal) {\r\n      const topLeft = this.getTopLeftDiagonal(top, left);\r\n      const topRight = this.getTopRightDiagonal(top, right);\r\n      const botRight = this.getBotRightDiagonal(down, right);\r\n      const botLeft = this.getBotLeftDiagonal(down, left);\r\n\r\n      return [topLeft, top, topRight, right, botRight, down, botLeft, left];\r\n    }\r\n\r\n    return [top, left, down, right];\r\n  }\r\n\r\n  getTopLeftDiagonal(top, left) {\r\n    if (top >= 0 && left >= 0) {\r\n      return top - 1;\r\n    }\r\n  }\r\n\r\n  getTopRightDiagonal(top, right) {\r\n    if (top >= 0 && right >= 0) {\r\n      return top + 1;\r\n    }\r\n  }\r\n\r\n  getBotLeftDiagonal(bot, left) {\r\n    if (bot >= 0 && left >= 0) {\r\n      return bot - 1;\r\n    }\r\n  }\r\n\r\n  getBotRightDiagonal(bot, right) {\r\n    if (bot >= 0 && right) {\r\n      return bot + 1;\r\n    }\r\n  }\r\n\r\n  getBottomDiagonal(down) {\r\n    const left = down - 1;\r\n    const right = down + 1;\r\n\r\n    return [left, right];\r\n  }\r\n\r\n  getDownSibling(index) {\r\n    const { w, h } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasDownNeighbour = Math.floor(index / w) < h - 1;\r\n\r\n    if (hasDownNeighbour) {\r\n      return index + w;\r\n    }\r\n  }\r\n\r\n  getTopSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasTopNeighbour = Math.floor(index / w) > 0;\r\n\r\n    if (hasTopNeighbour) {\r\n      return index - w;\r\n    }\r\n  }\r\n\r\n  getRightSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasRightNeighbour = index % w < w - 1;\r\n\r\n    if (hasRightNeighbour) {\r\n      return index + 1;\r\n    }\r\n  }\r\n\r\n  getLeftSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasLeftNeighbour = index % w > 0;\r\n\r\n    if (hasLeftNeighbour) {\r\n      return index - 1;\r\n    }\r\n  }\r\n\r\n  getGraph() {\r\n    return this.graph;\r\n  }\r\n\r\n  clear() {\r\n    this.graph = {};\r\n    return this;\r\n  }\r\n}\r\n\r\nexport const graphControll = new Graph(getLocalSize(pageWidth, pageHeight));\r\n","import { ceilType } from \"../config\";\r\n\r\nexport function setBarrierToGraph(graph, barriers) {\r\n  barriers.forEach((barrier) => {\r\n    graph.updateGraph({ index: barrier.getIndex(), type: ceilType.BARIER });\r\n  });\r\n}\r\n\r\nexport function setStartPositionToGraph(graph, startIndex) {\r\n  graph.updateGraph({ index: startIndex, type: ceilType.START_POSITION });\r\n}\r\n\r\nexport function setEndPositionToGraph(graph, endIndex) {\r\n  graph.updateGraph({ index: endIndex, type: ceilType.END_POSITION });\r\n}\r\n","import { combine, createDomain, sample, guard } from \"effector\";\r\nimport { startPosition, endPosition } from \"../config\";\r\nimport { graphControll } from \"./controller\";\r\nimport {\r\n  setBarrierToGraph,\r\n  setStartPositionToGraph,\r\n  setEndPositionToGraph,\r\n} from \"./utils\";\r\nimport { Barier } from \"../game\";\r\n\r\nconst graphDomain = createDomain(\"graph\");\r\n\r\nexport const resetStore = graphDomain.event();\r\nexport const clearCanvas = graphDomain.event();\r\n\r\nexport const changeDirection = graphDomain.event();\r\nexport const setBarrier = graphDomain.event();\r\nexport const removeBarrierItem = graphDomain.event();\r\n\r\nexport const triggerStartPosition = graphDomain.event();\r\nexport const triggerEndPosition = graphDomain.event();\r\n\r\nexport const $startEndPosition = graphDomain.store([\r\n  startPosition,\r\n  endPosition,\r\n]);\r\n\r\nexport const $canMoveDiagonal = graphDomain.store(false);\r\n\r\nexport const $barriers = graphDomain.store([]);\r\n\r\n$canMoveDiagonal.on(changeDirection, (state) => !state);\r\n\r\ngraphDomain.onCreateStore((store) => store.reset(resetStore));\r\n\r\nexport const removedBarrier = guard({\r\n  source: sample({\r\n    source: $barriers,\r\n    clock: removeBarrierItem,\r\n    fn: (state, index) => state.find((item) => item.getIndex() === index),\r\n  }),\r\n  filter: Boolean,\r\n});\r\n\r\nremovedBarrier.watch((item) => item.remove());\r\n\r\n$barriers\r\n  .on(setBarrier, (state, index) => {\r\n    const barrier = new Barier(index);\r\n\r\n    const isFindIndex = state.find((item) => item.getIndex() === index);\r\n\r\n    return isFindIndex ? state : [...state, barrier];\r\n  })\r\n  .on(removedBarrier, (state, removed) =>\r\n    state.filter((item) => item !== removed)\r\n  );\r\n\r\n$startEndPosition\r\n  .on(triggerStartPosition, (state, index) => [index, state[1]])\r\n  .on(triggerEndPosition, (state, index) => [state[0], index]);\r\n\r\nexport const $graph = combine({\r\n  barrier: $barriers,\r\n  startEndPosition: $startEndPosition,\r\n  canMoveDiagonal: $canMoveDiagonal,\r\n}).map((state) => {\r\n  const [start, end] = state.startEndPosition;\r\n\r\n  const graph = graphControll.createGraph(state.canMoveDiagonal);\r\n\r\n  setBarrierToGraph(graph, state.barrier);\r\n  setStartPositionToGraph(graph, start);\r\n  setEndPositionToGraph(graph, end);\r\n\r\n  return { ...state, graph: graph.graph };\r\n});\r\n","import { ceilType } from \"../config\";\r\n\r\nexport const canVisitedVertex = (vertex) => {\r\n  if (vertex.type !== ceilType.BARIER) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport function restorePath(endIndex, startIndex, parent) {\r\n  const path = [];\r\n  let target = parent[endIndex];\r\n\r\n  while (target && target !== startIndex) {\r\n    path.unshift(target);\r\n    target = parent[target];\r\n  }\r\n\r\n  if (path.length > 0) {\r\n    path.push(endIndex);\r\n  }\r\n\r\n  path.unshift(startIndex);\r\n\r\n  return path;\r\n}\r\n\r\nexport function removeDoubleVertex(target) {\r\n  return target.reduce((acc, row) => {\r\n    acc.push(row.filter((el) => !acc.some((accRow) => accRow.includes(el))));\r\n    return acc;\r\n  }, []);\r\n}\r\n","export class AlgoritmController {\r\n  constructor(startIndex, endIndex) {\r\n    this.count = 0;\r\n    this.processing = [];\r\n    this.visited = [];\r\n    this.startIndex = startIndex;\r\n    this.endIndex = endIndex;\r\n  }\r\n\r\n  increment() {\r\n    this.count++;\r\n  }\r\n\r\n  addVertex(processing, visited) {\r\n    this.processing.push(processing);\r\n    this.visited.push(visited);\r\n  }\r\n\r\n  getAlgotitmResult() {\r\n    return this;\r\n  }\r\n}\r\n","import { graphControll } from \"../graph\";\r\nimport { canVisitedVertex, restorePath } from \"./utils\";\r\nimport { AlgoritmController } from \"./controller\";\r\n\r\nexport function breadthFirstSearch(startIndex, endIndex, graph) {\r\n  const aInfo = new AlgoritmController(startIndex, endIndex);\r\n  let prevIndex = null;\r\n  let isWork = true;\r\n  const queue = [startIndex];\r\n  const visited = [startIndex];\r\n  const parent = {};\r\n\r\n  while (isWork && queue.length > 0) {\r\n    const currentIndex = queue.shift();\r\n\r\n    aInfo.addVertex(\r\n      {\r\n        vertex: currentIndex,\r\n        siblings: graph[currentIndex].siblings,\r\n      },\r\n      prevIndex\r\n    );\r\n\r\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\r\n      const next = graph[currentIndex].siblings[i];\r\n\r\n      const vertex = graphControll.getVertexByIndex(next);\r\n\r\n      if (!visited.includes(next) && canVisitedVertex(vertex)) {\r\n        queue.push(next);\r\n        visited.push(next);\r\n\r\n        parent[next] = currentIndex;\r\n        aInfo.increment();\r\n      }\r\n      prevIndex = currentIndex;\r\n      if (next === endIndex) {\r\n        isWork = false;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  const result = aInfo.getAlgotitmResult();\r\n  const path = restorePath(endIndex, startIndex, parent);\r\n\r\n  return {\r\n    path,\r\n    ...result,\r\n  };\r\n}\r\n","import { graphControll } from \"../graph\";\r\nimport { canVisitedVertex, restorePath } from \"./utils\";\r\nimport { AlgoritmController } from \"./controller\";\r\n\r\nexport function depthFirstSearch(startIndex, endIndex, graph) {\r\n  const aInfo = new AlgoritmController(startIndex, endIndex);\r\n\r\n  let isWork = true;\r\n  const stack = [startIndex];\r\n  const visited = [];\r\n  const parent = {};\r\n  let prevIndex = null;\r\n\r\n  while (isWork && stack.length > 0) {\r\n    const currentIndex = stack.shift();\r\n\r\n    aInfo.addVertex(\r\n      {\r\n        vertex: currentIndex,\r\n        siblings: graph[currentIndex].siblings,\r\n      },\r\n      prevIndex\r\n    );\r\n\r\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\r\n      const next = graph[currentIndex].siblings[i];\r\n      const vertex = graphControll.getVertexByIndex(next);\r\n\r\n      if (!visited.includes(next) && canVisitedVertex(vertex)) {\r\n        stack.unshift(next);\r\n        visited.push(next);\r\n\r\n        parent[next] = currentIndex;\r\n        aInfo.increment();\r\n      }\r\n\r\n      if (next === endIndex) {\r\n        isWork = false;\r\n        break;\r\n      }\r\n    }\r\n    prevIndex = currentIndex;\r\n  }\r\n\r\n  const result = aInfo.getAlgotitmResult();\r\n  const path = restorePath(endIndex, startIndex, parent);\r\n\r\n  return {\r\n    path,\r\n    ...result,\r\n  };\r\n}\r\n","import {\r\n  createStore,\r\n  combine,\r\n  createEvent,\r\n  restore,\r\n  createDomain,\r\n} from \"effector\";\r\nimport { breadthFirstSearch } from \"./bred-first-search\";\r\nimport { depthFirstSearch } from \"./depth-first-search\";\r\nimport { clearCanvas, resetStore } from \"../graph\";\r\nimport { setGameStatus, gameStatus } from \"../game\";\r\n\r\nconst algoritmsDomain = createDomain();\r\n\r\nexport const selectAlgoritm = createEvent();\r\nexport const addVisitedVertex = createEvent();\r\nexport const addProcessedVertex = createEvent();\r\n\r\nexport const $currentAlgoritm = restore(selectAlgoritm, \"bredth first search\");\r\nexport const $visitedVertex = algoritmsDomain.store([]);\r\nexport const $processedVertex = algoritmsDomain.store({\r\n  vertex: null,\r\n  siblings: [],\r\n});\r\n\r\n$visitedVertex.on(addVisitedVertex, (state, vertex) => [...state, vertex]);\r\n$processedVertex.on(addProcessedVertex, (_, processed) => processed);\r\n\r\nexport const $algoritms = createStore([\r\n  {\r\n    searchFunction: breadthFirstSearch,\r\n    name: \"bredth first search\",\r\n  },\r\n  {\r\n    searchFunction: depthFirstSearch,\r\n    name: \"depth first search\",\r\n  },\r\n]);\r\n\r\nexport const $searchAlgoritm = combine(\r\n  $currentAlgoritm,\r\n  $algoritms,\r\n  (currentAlgoritm, algoritms) =>\r\n    algoritms.find((algoritm) => algoritm.name === currentAlgoritm)\r\n);\r\n\r\nalgoritmsDomain.onCreateStore((store) => store.reset(clearCanvas, resetStore));\r\n\r\nselectAlgoritm.watch(() => setGameStatus(gameStatus.END_GAME));\r\n","import { getPositionByIndex, drawSquare } from \"../config\";\r\n\r\nexport function checkGameStatus(target, status) {\r\n  return status.some((item) => target === item);\r\n}\r\n\r\nexport function renderVisitedVertex(barrier, context, color) {\r\n  if (barrier) {\r\n    const [x, y] = getPositionByIndex(barrier);\r\n    drawSquare({\r\n      position: [x, y],\r\n      context,\r\n      color,\r\n    });\r\n  }\r\n}\r\n\r\nexport function renderVisitedVertexByArr(barrier, context, color = \"#000\") {\r\n  for (let i = 0; i < barrier.length; i++) {\r\n    const [x, y] = getPositionByIndex(barrier[i]);\r\n    drawSquare({\r\n      position: [x, y],\r\n      context,\r\n      color,\r\n    });\r\n  }\r\n}\r\n","import {\r\n  sample,\r\n  guard,\r\n  restore,\r\n  createDomain,\r\n  forward,\r\n  combine,\r\n} from \"effector\";\r\nimport {\r\n  $graph,\r\n  resetStore,\r\n  clearCanvas,\r\n  $barriers,\r\n  $startEndPosition,\r\n} from \"../graph\";\r\nimport { $searchAlgoritm } from \"../algoritms/model\";\r\nimport { Barier } from \"./barrier\";\r\n\r\nexport const gameStatus = {\r\n  START: \"START\",\r\n  RESTART: \"RESTART\",\r\n  PAUSE: \"PAUSE\",\r\n  RESUME: \"RESUME\",\r\n  CLEAR: \"CLEAR\",\r\n  END_GAME: \"END_GAME\",\r\n  RESET: \"RESET\",\r\n};\r\n\r\nconst gameDomain = createDomain(\"game\");\r\n\r\nexport const setGameStatus = gameDomain.event();\r\nexport const setTimer = gameDomain.event();\r\nexport const setHistoryGame = gameDomain.event();\r\nexport const recoveryHistoryGame = gameDomain.event();\r\nexport const setCurrentGame = gameDomain.event();\r\n\r\nexport const $path = gameDomain.store({}).reset(resetStore, clearCanvas);\r\nexport const $historyGame = gameDomain.store([]);\r\nexport const $currentTimer = restore(setTimer, 16).reset(resetStore);\r\n\r\n$historyGame.on(setHistoryGame, (state, { barrier, startEndPosition }) => {\r\n  const [start, end] = startEndPosition;\r\n\r\n  return [...state, { barrier, start, end, date: new Date() }];\r\n});\r\n\r\nexport const $currentGame = restore(setCurrentGame, null).reset(\r\n  resetStore,\r\n  clearCanvas\r\n);\r\n\r\nexport const $gameState = restore(setGameStatus, gameStatus.RESET).reset(\r\n  resetStore\r\n);\r\n\r\nexport const startGame = guard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.START),\r\n});\r\n\r\nexport const resumeGame = guard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.RESUME),\r\n});\r\n\r\nguard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.CLEAR),\r\n  target: resetStore,\r\n});\r\n\r\nguard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.START),\r\n  target: clearCanvas,\r\n});\r\n\r\nexport const endGame = guard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.END_GAME),\r\n});\r\n\r\nsample({\r\n  source: $graph,\r\n  clock: endGame,\r\n  target: setHistoryGame,\r\n});\r\n\r\nsample({\r\n  source: $historyGame,\r\n  clock: recoveryHistoryGame,\r\n  target: $barriers,\r\n  fn: (historyGame, params) => {\r\n    const findedGame = historyGame.find((game) => game.date === params);\r\n    setCurrentGame(findedGame.date);\r\n    return findedGame.barrier;\r\n  },\r\n});\r\n\r\nsample({\r\n  source: $historyGame,\r\n  clock: recoveryHistoryGame,\r\n  target: $startEndPosition,\r\n  fn: (historyGame, params) => {\r\n    const findedGame = historyGame.find((game) => game.date === params);\r\n\r\n    return [findedGame.start, findedGame.end];\r\n  },\r\n});\r\n\r\nsample({\r\n  source: {\r\n    graph: $graph,\r\n    algoritm: $searchAlgoritm,\r\n  },\r\n  clock: startGame,\r\n  target: $path,\r\n  fn: ({ graph, algoritm }) => {\r\n    const [start, end] = graph.startEndPosition;\r\n\r\n    const time = window.performance.now();\r\n\r\n    const result = algoritm.searchFunction(start, end, graph.graph);\r\n\r\n    const timeEnd = window.performance.now() - time;\r\n\r\n    return {\r\n      ...result,\r\n      timeEnd,\r\n    };\r\n  },\r\n});\r\n","import {\r\n  createEffect,\r\n  attach,\r\n  createStore,\r\n  sample,\r\n  guard,\r\n  combine,\r\n  merge,\r\n} from \"effector\";\r\nimport { renderPath } from \"../canvas\";\r\nimport { addVisitedVertex, addProcessedVertex } from \"../algoritms\";\r\nimport { clearCanvas, resetStore } from \"../graph\";\r\nimport { checkGameStatus } from \"./utils\";\r\nimport {\r\n  gameStatus,\r\n  setGameStatus,\r\n  $gameState,\r\n  $currentTimer,\r\n  startGame,\r\n  resumeGame,\r\n} from \"./model\";\r\n\r\nconst tickFx = createEffect().use(\r\n  (fps) => new Promise((rs) => setTimeout(rs, 1000 / fps))\r\n);\r\n\r\nexport function createTick($state, context) {\r\n  const $animationCount = createStore(0).reset(clearCanvas, resetStore);\r\n\r\n  const tickWithParams = attach({\r\n    effect: tickFx,\r\n    source: $currentTimer,\r\n    mapParams: (_, fps) => fps,\r\n  });\r\n\r\n  const $combineState = combine(\r\n    $state,\r\n    $animationCount,\r\n    (state, animationCount) => ({ state, animationCount })\r\n  );\r\n\r\n  $animationCount.on(tickWithParams.done, (state) => state + 1);\r\n\r\n  sample($combineState, tickWithParams).watch((state) => {\r\n    animatedVisitedVertex(state, context);\r\n  });\r\n\r\n  guard({\r\n    source: merge([startGame, resumeGame, tickWithParams.done]),\r\n    filter: $gameState.map((state) =>\r\n      checkGameStatus(state, [gameStatus.RESUME, gameStatus.START])\r\n    ),\r\n    target: tickWithParams,\r\n  });\r\n}\r\n\r\nexport function animatedVisitedVertex({ animationCount, state }, context) {\r\n  const { processing } = state;\r\n\r\n  if (animationCount < processing.length) {\r\n    addProcessedVertex(processing[animationCount]);\r\n\r\n    if (processing[animationCount - 1]) {\r\n      addVisitedVertex(processing[animationCount - 1].vertex);\r\n    }\r\n  } else {\r\n    setGameStatus(gameStatus.END_GAME);\r\n\r\n    renderPath({\r\n      path: state.path,\r\n      context,\r\n    });\r\n  }\r\n}\r\n","import { guard, sample, merge, combine, forward } from \"effector\";\r\nimport {\r\n  colorSchema,\r\n  cellSize,\r\n  pageHeight,\r\n  pageWidth,\r\n  borderSize,\r\n  getLocalSize,\r\n  getGlobalSize,\r\n  drawSquare,\r\n  clearALlCanvas,\r\n  getPositionByIndex,\r\n  getIndexByPosition,\r\n  ceilType,\r\n  convertLocalPositionToGlobal,\r\n} from \"./config\";\r\nimport { configureCanvas } from \"./config-canvas\";\r\nimport { canvasControl } from \"./control-canvas\";\r\nimport {\r\n  setBarrier,\r\n  removeBarrierItem,\r\n  triggerStartPosition,\r\n  triggerEndPosition,\r\n  $graph,\r\n  resetStore,\r\n  clearCanvas,\r\n} from \"./graph\";\r\n\r\nimport {\r\n  gameStatus,\r\n  $gameState,\r\n  $path,\r\n  renderVisitedVertexByArr,\r\n  renderVisitedVertex,\r\n  createTick,\r\n} from \"./game\";\r\nimport { $visitedVertex, $processedVertex } from \"./algoritms\";\r\n\r\nconst $algoritState = combine({\r\n  gameState: $gameState,\r\n  path: $path,\r\n});\r\n\r\nconst $mainState = combine({\r\n  visitedVertex: $visitedVertex,\r\n  graph: $graph,\r\n  processedVertex: $processedVertex,\r\n});\r\n\r\nexport function renderBarrier(barrier, context) {\r\n  for (let i = 0; i < barrier.length; i++) {\r\n    barrier[i].render(context);\r\n  }\r\n}\r\n\r\nfunction renderActionsCeil(startEndPosition, context) {\r\n  for (let i = 0; i < startEndPosition.length; i++) {\r\n    const index = getPositionByIndex(startEndPosition[i]);\r\n    drawSquare({\r\n      position: index,\r\n      context,\r\n      color: colorSchema.startEndColor[i],\r\n    });\r\n  }\r\n}\r\n\r\nfunction renderCeil(event, state) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  const [startIndex, endIndex] = state.startEndPosition;\r\n\r\n  return {\r\n    renderForMove: () => {\r\n      if (index !== startIndex && index !== endIndex) {\r\n        setBarrier(index);\r\n      }\r\n    },\r\n    renderForClick: () => {\r\n      if (index !== startIndex && index !== endIndex) {\r\n        removeBarrierItem(index);\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nfunction renderStart(index, state) {\r\n  const findIndex = state.barrier.find((barrier) => barrier.index === index);\r\n  const [, endIndex] = state.startEndPosition;\r\n\r\n  if (!findIndex && index !== endIndex) {\r\n    triggerStartPosition(index);\r\n  }\r\n}\r\n\r\nfunction renderEnd(index, state) {\r\n  const findIndex = state.barrier.find((barrier) => barrier.index === index);\r\n  const [startIndex] = state.startEndPosition;\r\n\r\n  if (!findIndex && index !== startIndex) {\r\n    triggerEndPosition(index);\r\n  }\r\n}\r\n\r\nlet type = null;\r\nfunction renderLogic(event) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n  const state = $graph.getState();\r\n\r\n  if (!type) {\r\n    type = state.graph[index].type;\r\n  }\r\n\r\n  switch (type) {\r\n    case ceilType.BARIER:\r\n      return renderCeil(event, state).renderForClick();\r\n    case ceilType.START_POSITION:\r\n      return renderStart(index, state);\r\n    case ceilType.END_POSITION:\r\n      return renderEnd(index, state);\r\n    case ceilType.EMPTY:\r\n      return renderCeil(event, state).renderForMove();\r\n  }\r\n}\r\n\r\nexport function renderCanvas(canvas, context) {\r\n  const localSize = getLocalSize(pageWidth, pageHeight);\r\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\r\n  const gridData = buildGrid(context);\r\n\r\n  configureCanvas(canvas, globalSize);\r\n\r\n  canvasControl.registerClickEventToCanvas(canvas);\r\n  canvasControl.addMouseMoveEvent(renderLogic);\r\n  canvasControl.addMouseUpEvent(() => (type = null));\r\n  canvasControl.addMouseClickEvent((e, s) => renderCeil(e, s).renderForClick());\r\n\r\n  function render({ graph, visitedVertex, processedVertex }) {\r\n    clearALlCanvas(context, canvas);\r\n    canvasControl.setState(graph);\r\n    renderVisitedVertexByArr(processedVertex.siblings, context, \"#d2ef99\");\r\n    renderVisitedVertex(processedVertex.vertex, context, \"#f3fc23\");\r\n\r\n    renderVisitedVertexByArr(visitedVertex, context, \"#00bcd4\");\r\n    renderActionsCeil(graph.startEndPosition, context);\r\n    renderBarrier(graph.barrier, context);\r\n\r\n    gridData.applyStyles();\r\n    context.stroke(gridData.grid);\r\n  }\r\n\r\n  $mainState.watch(render);\r\n\r\n  sample({\r\n    source: $mainState,\r\n    clock: merge([resetStore, clearCanvas]),\r\n  }).watch(render);\r\n\r\n  createTick($path, context);\r\n}\r\n\r\nlet prev = null;\r\nexport function renderPath({ context, path = [], color = \"green\" }) {\r\n  for (let i = 0; i < path.length; i++) {\r\n    const position = getPositionByIndex(path[i]);\r\n    const [x, y] = convertLocalPositionToGlobal(position);\r\n\r\n    if (prev) {\r\n      context.beginPath();\r\n      context.strokeStyle = color;\r\n      context.lineWidth = 2;\r\n      context.moveTo(prev[0], prev[1]);\r\n      context.lineTo(x + cellSize / 2, y + cellSize / 2);\r\n      context.stroke();\r\n    }\r\n\r\n    prev = [x + cellSize / 2, y + cellSize / 2];\r\n  }\r\n\r\n  prev = null;\r\n}\r\n\r\nfunction buildGrid(context) {\r\n  const grid = new Path2D();\r\n\r\n  const localSize = getLocalSize(pageWidth, pageHeight);\r\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\r\n\r\n  for (let i = 0; i <= localSize.w; i++) {\r\n    grid.moveTo(i * cellSize + borderSize, 0);\r\n    grid.lineTo(i * cellSize + borderSize, globalSize.h);\r\n  }\r\n\r\n  for (let i = 0; i <= localSize.h; i++) {\r\n    grid.moveTo(0, i * cellSize + borderSize);\r\n    grid.lineTo(globalSize.w, i * cellSize + borderSize);\r\n  }\r\n\r\n  return {\r\n    grid,\r\n    applyStyles: () => {\r\n      context.lineWidth = borderSize;\r\n      context.strokeStyle = colorSchema.borderColor;\r\n    },\r\n  };\r\n}\r\n\r\nconst canvas = document.getElementById(\"viewport\");\r\n\r\nif (canvas) {\r\n  const context = canvas.getContext(\"2d\");\r\n\r\n  renderCanvas(canvas, context);\r\n}\r\n","import { getTargetIndex } from \"./config\";\r\nimport { $gameState, gameStatus, checkGameStatus } from \"./game\";\r\n\r\nclass Controll {\r\n  constructor() {\r\n    this.isMouseDown = false;\r\n    this.isMouseMove = false;\r\n    this.listeners = [];\r\n    this.state = {};\r\n    this.lastIndex = null;\r\n    this.disabledListeners = [];\r\n  }\r\n\r\n  init() {\r\n    $gameState.watch((state) => {\r\n      if (\r\n        checkGameStatus(state, [\r\n          gameStatus.START,\r\n          gameStatus.PAUSE,\r\n          gameStatus.RESUME,\r\n        ])\r\n      ) {\r\n        this.disabledListener();\r\n      } else {\r\n        this.includeListener();\r\n      }\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  registerClickEventToCanvas(canvas) {\r\n    canvas.addEventListener(\"mousedown\", (event) => {\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"mousedown\")\r\n        .forEach((userEvent) => userEvent.eventListener());\r\n\r\n      this.isMouseDown = true;\r\n      this.isMouseMove = false;\r\n    });\r\n\r\n    canvas.addEventListener(\"mouseup\", (event) => {\r\n      this.isMouseDown = false;\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"mouseup\")\r\n        .forEach((userEvent) => userEvent.eventListener(event, this.state));\r\n    });\r\n\r\n    canvas.addEventListener(\"click\", (event) => {\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"click\")\r\n        .forEach((userEvent) => {\r\n          if (!this.isMouseMove) {\r\n            userEvent.eventListener(event, this.state);\r\n          }\r\n        });\r\n    });\r\n\r\n    canvas.addEventListener(\"mousemove\", (event) => {\r\n      const index = getTargetIndex(event);\r\n\r\n      if (this.isMouseDown && index !== this.lastIndex) {\r\n        this.lastIndex = index;\r\n        this.isMouseMove = true;\r\n        this.listeners\r\n          .filter((userEvent) => userEvent.type === \"mousemove\")\r\n          .forEach((userEvent) =>\r\n            userEvent.eventListener(event, this.state, this.lastIndex)\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  disabledListener() {\r\n    this.clear();\r\n  }\r\n\r\n  includeListener() {\r\n    this.listeners = this.disabledListeners;\r\n  }\r\n\r\n  addMouseDownEvent(eventListener) {\r\n    this.listeners.push({ type: \"mousedown\", eventListener });\r\n  }\r\n\r\n  addMouseUpEvent(eventListener) {\r\n    this.listeners.push({ type: \"mouseup\", eventListener });\r\n  }\r\n\r\n  addMouseMoveEvent(eventListener) {\r\n    this.listeners.push({ type: \"mousemove\", eventListener });\r\n  }\r\n\r\n  addMouseClickEvent(eventListener) {\r\n    this.listeners.push({ type: \"click\", eventListener });\r\n  }\r\n\r\n  setState(state) {\r\n    this.state = state;\r\n    return this;\r\n  }\r\n\r\n  clear() {\r\n    if (this.listeners.length > 0) {\r\n      this.disabledListeners = this.listeners;\r\n      this.isMouseDown = false;\r\n      this.isMouseMove = false;\r\n      this.listeners = [];\r\n      this.lastIndex = null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const canvasControl = new Controll();\r\ncanvasControl.init();\r\n","export function configureCanvas(canvas, { w, h }) {\r\n  canvas.height = h;\r\n  canvas.width = w;\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactModal from \"react-modal\";\r\n\r\nReactModal.setAppElement(\"#root\");\r\n\r\nexport function ModalWrapper({ isOpen, onRequestClose, children, width }) {\r\n  return (\r\n    <ReactModal\r\n      isOpen={isOpen}\r\n      closeTimeoutMS={200}\r\n      onRequestClose={onRequestClose}\r\n    >\r\n      <StyledRootWrapper onClick={onRequestClose}>\r\n        <StyledWrapper>\r\n          <StyledInner width={width} onClick={(e) => e.stopPropagation()}>\r\n            {children}\r\n            <CloseModal onClick={onRequestClose} />\r\n          </StyledInner>\r\n        </StyledWrapper>\r\n      </StyledRootWrapper>\r\n    </ReactModal>\r\n  );\r\n}\r\n\r\nexport const StyledInner = styled.div`\r\n  background: #fff;\r\n  padding: 25px;\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  text-align: left;\r\n  max-width: 800px;\r\n  margin: 10px;\r\n  width: ${({ width }) => width}px;\r\n  position: relative;\r\n  border-radius: 10px;\r\n  opacity: 0;\r\n  transition: all 0.3s;\r\n  transform: translateX(-100px);\r\n`;\r\n\r\nexport const StyledRootWrapper = styled.div`\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1043;\r\n  position: fixed;\r\n  opacity: 0;\r\n  transition: all 0.3s;\r\n`;\r\n\r\nexport const StyledWrapper = styled.div`\r\n  position: absolute;\r\n  margin: 0;\r\n  padding: 0;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1045;\r\n  outline: 0;\r\n  overflow: auto;\r\n  white-space: normal;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #27262687;\r\n`;\r\n\r\nconst CloseModal = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  cursor: pointer;\r\n  width: 30px;\r\n  height: 30px;\r\n  &:after {\r\n    position: absolute;\r\n    content: \"\\\\2718\";\r\n    top: 50%;\r\n    right: 50%;\r\n    transform: translate(50%, -50%);\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Icon = styled.div`\r\n  cursor: pointer;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Text = styled.p`\r\n  font-size: 14px;\r\n`;\r\n","import React from \"react\";\r\nimport { FiSettings } from \"react-icons/fi\";\r\nimport { ModalWrapper } from \"./modal-wrapper\";\r\nimport { Icon } from \"../atoms\";\r\n\r\nexport function Settings() {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  return (\r\n    <>\r\n      <Icon onClick={() => setOpen(true)}>\r\n        <FiSettings color=\"#fff\" size=\"35\" />\r\n      </Icon>\r\n      <ModalWrapper isOpen={isOpen} onRequestClose={() => setOpen(false)}>\r\n        Setting info\r\n      </ModalWrapper>\r\n    </>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const FlexContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: ${({ direction }) => direction || \"row\"};\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FiInfo } from \"react-icons/fi\";\r\nimport { ModalWrapper } from \"./modal-wrapper\";\r\nimport { Icon, Text } from \"../atoms\";\r\nimport { FlexContainer } from \"../containers\";\r\n\r\nexport function Info() {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  return (\r\n    <>\r\n      <Icon onClick={() => setOpen(true)}>\r\n        <FiInfo color=\"#fff\" size=\"35\" />\r\n      </Icon>\r\n\r\n      <InfoModal isOpen={isOpen} setOpen={setOpen} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction InfoModal({ isOpen, setOpen }) {\r\n  return (\r\n    <ModalWrapper\r\n      width={500}\r\n      isOpen={isOpen}\r\n      onRequestClose={() => setOpen(false)}\r\n    >\r\n      <FlexContainer>\r\n        <ColorBlock color=\"green\" />\r\n        <Text>- Точка старта алгоритма</Text>\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <ColorBlock color=\"red\" />\r\n        <Text>- Точка завершения алгоритма</Text>\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <ColorBlock color=\"#00bcd4\" />\r\n        <Text>- Пройденная вершина</Text>\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <ColorBlock color=\"#f3fc23\" />\r\n        <Text>- Вершина, находящаяся в обработке</Text>\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <ColorBlock color=\"#d2ef99\" />\r\n        <Text>- Соседи текущей вершины</Text>\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <ColorBlock color=\"#bbbbbb\" />\r\n        <Text>- Цвет не проходимого барьера</Text>\r\n      </FlexContainer>\r\n    </ModalWrapper>\r\n  );\r\n}\r\n\r\nconst ColorBlock = styled.div`\r\n  width: 35px;\r\n  height: 35px;\r\n  background: ${({ color }) => color};\r\n  margin-right: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport { FiBook } from \"react-icons/fi\";\r\nimport { ModalWrapper } from \"./modal-wrapper\";\r\nimport { Icon } from \"../atoms\";\r\n\r\nexport function AboutAlgoritms() {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  return (\r\n    <>\r\n      <Icon onClick={() => setOpen(true)}>\r\n        <FiBook color=\"#fff\" size=\"35\" />\r\n      </Icon>\r\n      <ModalWrapper isOpen={isOpen} onRequestClose={() => setOpen(false)}>\r\n        algoritm info\r\n      </ModalWrapper>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FaHistory } from \"react-icons/fa\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useStore } from \"effector-react\";\r\nimport { ModalWrapper } from \"../molecules\";\r\nimport { FlexContainer } from \"../containers\";\r\nimport { Icon } from \"../atoms\";\r\nimport { $historyGame, recoveryHistoryGame, $currentGame } from \"../../../game\";\r\n\r\nexport function History() {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  const historyGame = useStore($historyGame);\r\n\r\n  return (\r\n    <HistoryIcon historyCount={historyGame.length}>\r\n      <Icon onClick={() => setOpen(true)}>\r\n        <FaHistory color=\"#fff\" size=\"35\" />\r\n      </Icon>\r\n      <ModalWrapper\r\n        width={600}\r\n        isOpen={isOpen}\r\n        onRequestClose={() => setOpen(false)}\r\n      >\r\n        {historyGame.length > 0 ? (\r\n          <HistoryList historyGame={historyGame} setOpen={setOpen} />\r\n        ) : (\r\n          <h1>У вас нет законченных игр </h1>\r\n        )}\r\n      </ModalWrapper>\r\n    </HistoryIcon>\r\n  );\r\n}\r\n\r\nfunction HistoryList({ historyGame, setOpen }) {\r\n  const currentGame = useStore($currentGame);\r\n  const handleChangeItem = React.useCallback(\r\n    (item) => {\r\n      recoveryHistoryGame(item.date);\r\n      setOpen(false);\r\n    },\r\n    [setOpen]\r\n  );\r\n\r\n  return (\r\n    <HistoryListWrapper>\r\n      <FlexContainer>\r\n        {historyGame.map((item, index) => (\r\n          <HistoryItem\r\n            active={currentGame === item.date}\r\n            onClick={() => handleChangeItem(item)}\r\n            key={index.toString()}\r\n          >\r\n            <p>Баррьеры: {item.barrier.length}</p>\r\n            <p>Старт: {item.start}</p>\r\n            <p>Конец: {item.end}</p>\r\n            <h3>Будет дата</h3>\r\n          </HistoryItem>\r\n        ))}\r\n      </FlexContainer>\r\n    </HistoryListWrapper>\r\n  );\r\n}\r\n\r\nconst HistoryItem = styled.div`\r\n  border: 1px solid #666666;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  margin: 5px;\r\n  transition: all 0.3s;\r\n\r\n  ${({ active }) =>\r\n    active &&\r\n    css`\r\n      border: 1px solid green;\r\n    `}\r\n\r\n  &:hover {\r\n    border: 1px solid #fff;\r\n  }\r\n`;\r\n\r\nconst HistoryListWrapper = styled.div`\r\n  overflow-y: scroll;\r\n  max-height: 500px;\r\n`;\r\n\r\nconst HistoryIcon = styled.div`\r\n  position: relative;\r\n  &:after {\r\n    ${({ historyCount }) =>\r\n      historyCount > 0 &&\r\n      css`\r\n    position: absolute;\r\n    content: \"${historyCount}\";\r\n    background: red;\r\n    border-radius: 50%;\r\n    padding: 3px;\r\n    font-size: 12px;\r\n    text-align: center;\r\n    top: -10px;\r\n    right: -15px;\r\n    height: 13px;\r\n    width: 13px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center\r\n    `}\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Draggable from \"react-draggable\";\r\nimport { Settings, Info, AboutAlgoritms } from \"../molecules\";\r\nimport { History } from \"./history\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  padding: 15px 10px;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.5);\r\n  cursor: default;\r\n  left: 20px;\r\n  bottom: 20px;\r\n\r\n  &:hover {\r\n    cursor: move;\r\n  }\r\n\r\n  & > div {\r\n    margin: 0 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport function InfoDraggable() {\r\n  return (\r\n    <Draggable>\r\n      <Wrapper>\r\n        <Info />\r\n        <Settings />\r\n        <AboutAlgoritms />\r\n        <History />\r\n      </Wrapper>\r\n    </Draggable>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useStore } from \"effector-react\";\r\nimport Draggable from \"react-draggable\";\r\nimport { renderCanvas } from \"./canvas\";\r\nimport {\r\n  setGameStatus,\r\n  gameStatus,\r\n  $gameState,\r\n  $path,\r\n  endGame,\r\n  $currentTimer,\r\n  setTimer,\r\n  checkGameStatus,\r\n} from \"./game\";\r\nimport {\r\n  $algoritms,\r\n  selectAlgoritm,\r\n  $currentAlgoritm,\r\n} from \"./algoritms/model\";\r\n\r\nimport \"./styles.css\";\r\nimport { sample, createStore } from \"effector\";\r\n\r\nimport { InfoDraggable } from \"./gui/ui/organisms/info-block\";\r\nimport { FlexContainer } from \"./gui/ui/containers\";\r\nimport { $canMoveDiagonal, changeDirection } from \"./graph\";\r\n\r\nconst $store = createStore({});\r\n\r\nsample({\r\n  source: $path,\r\n  clock: endGame,\r\n  target: $store,\r\n});\r\n\r\nexport default function App() {\r\n  const algoritms = useStore($algoritms);\r\n  const currentAlgoritm = useStore($currentAlgoritm);\r\n  const gameState = useStore($gameState);\r\n  const store = useStore($store);\r\n  const currentTimer = useStore($currentTimer);\r\n  const canMoveDiagonal = useStore($canMoveDiagonal);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Draggable>\r\n        <div className=\"select-bar\">\r\n          <h2 className=\"select-bar_title\">Информация:</h2>\r\n          <div className=\"info-wrapper\">\r\n            <h3 className=\"select-bar_info\">\r\n              Количество итераций: <span>{store?.count || 0}</span>\r\n            </h3>\r\n            <h3 className=\"select-bar_info\">\r\n              Время прохождения:\r\n              <span> {store?.timeEnd?.toFixed(4) || 0} ms</span>\r\n            </h3>\r\n            <h3 className=\"select-bar_info\">\r\n              Длина пути: <span>{store?.path?.length || 0}</span>\r\n            </h3>\r\n          </div>\r\n          <h2 className=\"select-bar_title\">Выбирите алгоритм:</h2>\r\n          <ul>\r\n            {algoritms.map((algoritm, index) => (\r\n              <li\r\n                onClick={() => selectAlgoritm(algoritm.name)}\r\n                className={currentAlgoritm === algoritm.name ? \"isActive\" : \"\"}\r\n                key={algoritm.name}\r\n              >\r\n                {algoritm.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div className=\"btn-wrapper\">\r\n            <button\r\n              className=\"btn\"\r\n              onClick={() => setGameStatus(gameStatus.START)}\r\n            >\r\n              Старт\r\n            </button>\r\n            {checkGameStatus(gameState, [\r\n              gameStatus.START,\r\n              gameStatus.PAUSE,\r\n              gameStatus.RESUME,\r\n            ]) && (\r\n              <>\r\n                <button\r\n                  className=\"btn\"\r\n                  onClick={() => setGameStatus(gameStatus.PAUSE)}\r\n                >\r\n                  Пауза\r\n                </button>\r\n\r\n                <button\r\n                  className=\"btn\"\r\n                  onClick={() => setGameStatus(gameStatus.RESUME)}\r\n                >\r\n                  Продолжить\r\n                </button>\r\n              </>\r\n            )}\r\n\r\n            <button\r\n              className=\"btn\"\r\n              onClick={() => setGameStatus(gameStatus.CLEAR)}\r\n            >\r\n              Очистить\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"info-wrapper\" style={{ borderTop: \"2px solid #fff\" }}>\r\n            <FlexContainer>\r\n              <h3 className=\"select-bar_info\">Скорость:</h3>\r\n              <input\r\n                type=\"number\"\r\n                value={currentTimer}\r\n                max=\"20\"\r\n                min=\"1\"\r\n                maxLength=\"2\"\r\n                onChange={({ target }) => {\r\n                  setTimer(parseInt(target.value));\r\n                }}\r\n              />\r\n            </FlexContainer>\r\n            <label>\r\n              <FlexContainer>\r\n                <h3 className=\"select-bar_info\">Проход по диагонали:</h3>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={canMoveDiagonal}\r\n                  onChange={changeDirection}\r\n                />\r\n              </FlexContainer>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </Draggable>\r\n      <InfoDraggable />\r\n    </div>\r\n  );\r\n}\r\n","import { createGlobalStyle, css } from \"styled-components\";\r\nimport {\r\n  StyledRootWrapper,\r\n  StyledInner,\r\n} from \"./gui/ui/molecules/modal-wrapper\";\r\n\r\nconst globalCss = css`\r\n  .ReactModal__Body--open {\r\n    overflow: hidden;\r\n  }\r\n\r\n  .ReactModal__Content--after-open {\r\n    border: none !important;\r\n    background: transparent !important;\r\n    ${StyledInner} {\r\n      opacity: 1;\r\n      transform: translateX(0);\r\n    }\r\n  }\r\n  .ReactModal__Content--before-close {\r\n    ${StyledInner} {\r\n      transform: translateX(100px);\r\n      opacity: 0;\r\n    }\r\n  }\r\n  .ReactModal__Overlay--after-open {\r\n    background-color: transparent !important;\r\n    ${StyledRootWrapper} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n  .ReactModal__Overlay--before-close {\r\n    ${StyledRootWrapper} {\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\nexport const GlobalModalStyles = createGlobalStyle`${globalCss}`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { GlobalModalStyles } from \"./global-css\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n    <GlobalModalStyles />\r\n  </>,\r\n  rootElement\r\n);\r\n\r\nexport * from \"./algoritms\";\r\nexport * from \"./graph\";\r\nexport * from \"./game\";\r\n"],"sourceRoot":""}