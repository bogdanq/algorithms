{"version":3,"sources":["config.js","control-canvas.js","graph.js","model.js","algoritms/bred-first-search.js","algoritms/model.js","algoritms/depth-first-search.js","ui/model.js","canvas.js","config-canvas.js","App.js","index.js"],"names":["cellSize","pageWidth","window","innerWidth","pageHeight","innerHeight","borderSize","colorSchema","borderColor","blockColor","startEndColor","ceilType","START_POSITION","END_POSITION","BARIER","EMPTY","getLocalSize","w","h","Math","floor","getGlobalSize","convertLocalPositionToGlobal","_ref","_ref2","Object","slicedToArray","x","y","drawSquare","_ref3","_ref3$color","color","position","context","_convertLocalPosition","_convertLocalPosition2","size","fillStyle","fillRect","getIndexByPosition","_ref4","_ref5","getPositionByIndex","index","canvasControl","Controll","classCallCheck","this","isMouseDown","isMouseMove","listeners","state","lastIndex","canvas","_this","addEventListener","event","filter","userEvent","type","forEach","eventListener","_getLocalSize3","clientX","clientY","getTargetIndex","push","graphControll","Graph","graph","cellCount","siblings","getLeftSibling","getTopSibling","getRightSibling","getDownSibling","item","objectSpread2","_getLocalSize","resetStore","createEvent","resetPath","setBarrier","removeBarrierItem","triggerStartPosition","triggerEndPosition","$startEndPosition","createStore","$barrier","on","includes","concat","toConsumableArray","reset","$graph","combine","barrier","startEndPosition","map","clear","_state$startEndPositi","start","end","createGraph","barriers","barrierIndex","updateGraph","setBarrierToGraph","startIndex","setStartPositionToGraph","endIndex","setEndPositionToGraph","restorePath","parent","path","target","unshift","length","selectAlgoritm","$currentAlgoritm","restore","watch","$algoritms","searchFunction","isWork","queue","visited","Map","currentIndex","shift","i","count","next","has","set","name","stack","$searchAlgoritm","currentAlgoritm","algoritms","find","algoritm","gameStatus","START","PAUSE","STOP","CLEAR","RESTART","CLEAR_PATH","setGameStatus","$path","$gameState","ref","$isValidGameState","$clearGameState","startGame","guard","source","clearGame","forward","from","to","sample","clock","fn","_graph$startEndPositi","$state","renderCeil","renderForMove","renderForClick","renderLogic","_getLocalSize2","getState","findIndex","renderStart","renderEnd","prev","document","getElementById","getContext","localSize","globalSize","gridData","grid","Path2D","moveTo","lineTo","applyStyles","lineWidth","strokeStyle","buildGrid","render","clearRect","width","height","clearCanvas","setState","renderActionsCeil","_getPositionByIndex","_getPositionByIndex2","renderBarrier","stroke","configureCanvas","registerClickEventToCanvas","addMouseMoveEvent","e","s","addMouseUpEvent","addMouseClickEvent","_ref3$path","beginPath","renderPath","renderCanvas","App","useStore","react_default","a","createElement","className","onClick","key","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.ab4346fe.chunk.js","sourcesContent":["export const cellSize = 35;\r\nexport const pageWidth = window.innerWidth;\r\nexport const pageHeight = window.innerHeight;\r\nexport const borderSize = 0.5;\r\nexport const boardLength = pageWidth * pageHeight;\r\nexport const startPosition = 0;\r\nexport const endPosition = 110;\r\n\r\nexport const colorSchema = {\r\n  borderColor: \"#000\",\r\n  blockColor: \"#8080805c\",\r\n  startEndColor: [\"green\", \"red\"],\r\n};\r\n\r\nexport const ceilType = {\r\n  START_POSITION: \"START_POSITION\",\r\n  END_POSITION: \"END_POSITION\",\r\n  BARIER: \"BARIER\",\r\n  EMPTY: \"EMPTY\",\r\n};\r\n\r\nexport function getLocalSize(w, h) {\r\n  return {\r\n    w: Math.floor(w / cellSize),\r\n    h: Math.floor(h / cellSize),\r\n  };\r\n}\r\n\r\nexport function getGlobalSize(w, h) {\r\n  return {\r\n    w: Math.floor(w * cellSize),\r\n    h: Math.floor(h * cellSize),\r\n  };\r\n}\r\n\r\nexport function convertLocalPositionToGlobal([x, y]) {\r\n  return [x * cellSize, y * cellSize];\r\n}\r\n\r\nexport function drawSquare({\r\n  color = \"rgb(152, 251, 152)\",\r\n  position,\r\n  context,\r\n}) {\r\n  const [x, y] = convertLocalPositionToGlobal(position);\r\n  const size = cellSize - borderSize * 2;\r\n\r\n  context.fillStyle = color;\r\n  context.fillRect(x + borderSize * 2, y + borderSize * 2, size, size);\r\n}\r\n\r\nexport function clearCanvas(context, canvas) {\r\n  return context.clearRect(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\nexport function getIndexByPosition([x, y]) {\r\n  const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n  return y * w + x;\r\n}\r\n\r\nexport function getPositionByIndex(index) {\r\n  const { w } = getLocalSize(pageWidth, pageHeight);\r\n  const y = Math.floor(index / w);\r\n  const x = index - y * w;\r\n\r\n  return [x, y];\r\n}\r\n\r\nexport function getTargetIndex(event) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  return index;\r\n}\r\n","import { getTargetIndex } from \"./config\";\r\n\r\nclass Controll {\r\n  constructor() {\r\n    this.isMouseDown = false;\r\n    this.isMouseMove = false;\r\n    this.listeners = [];\r\n    this.state = {};\r\n    this.lastIndex = null;\r\n  }\r\n\r\n  registerClickEventToCanvas(canvas) {\r\n    canvas.addEventListener(\"mousedown\", (event) => {\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"mousedown\")\r\n        .forEach((userEvent) => userEvent.eventListener());\r\n\r\n      this.isMouseDown = true;\r\n      this.isMouseMove = false;\r\n    });\r\n\r\n    canvas.addEventListener(\"mouseup\", (event) => {\r\n      this.isMouseDown = false;\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"mouseup\")\r\n        .forEach((userEvent) => userEvent.eventListener(event, this.state));\r\n    });\r\n\r\n    canvas.addEventListener(\"click\", (event) => {\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"click\")\r\n        .forEach((userEvent) => {\r\n          if (!this.isMouseMove) {\r\n            userEvent.eventListener(event, this.state);\r\n          }\r\n        });\r\n    });\r\n\r\n    canvas.addEventListener(\"mousemove\", (event) => {\r\n      const index = getTargetIndex(event);\r\n\r\n      if (this.isMouseDown && index !== this.lastIndex) {\r\n        this.lastIndex = index;\r\n        this.isMouseMove = true;\r\n        this.listeners\r\n          .filter((userEvent) => userEvent.type === \"mousemove\")\r\n          .forEach((userEvent) =>\r\n            userEvent.eventListener(event, this.state, this.lastIndex)\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  addMouseDownEvent(eventListener) {\r\n    this.listeners.push({ type: \"mousedown\", eventListener });\r\n  }\r\n\r\n  addMouseUpEvent(eventListener) {\r\n    this.listeners.push({ type: \"mouseup\", eventListener });\r\n  }\r\n\r\n  addMouseMoveEvent(eventListener) {\r\n    this.listeners.push({ type: \"mousemove\", eventListener });\r\n  }\r\n\r\n  addMouseClickEvent(eventListener) {\r\n    this.listeners.push({ type: \"click\", eventListener });\r\n  }\r\n\r\n  setState(state) {\r\n    this.state = state;\r\n    return this;\r\n  }\r\n}\r\n\r\nexport const canvasControl = new Controll();\r\n","import { ceilType, pageWidth, getLocalSize, pageHeight } from \"./config\";\r\nimport { setGraph } from \"./model\";\r\n\r\nclass Graph {\r\n  constructor({ w, h }) {\r\n    this.graph = {};\r\n    this.cellCount = w * h;\r\n    this.lastIndex = null;\r\n  }\r\n\r\n  createGraph() {\r\n    for (let index = 0; index < this.cellCount; index++) {\r\n      this.graph[index] = {\r\n        type: ceilType.EMPTY,\r\n        siblings: [\r\n          this.getLeftSibling(index),\r\n          this.getTopSibling(index),\r\n          this.getRightSibling(index),\r\n          this.getDownSibling(index),\r\n        ].filter((item) => typeof item !== \"undefined\"),\r\n      };\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  updateGraph({ index, type }) {\r\n    if (this.graph[index]) {\r\n      this.graph[index] = { ...this.graph[index], type };\r\n      if (type === ceilType.BARIER) {\r\n        this.graph[index] = { ...this.graph[index], type, siblings: [] };\r\n      }\r\n    }\r\n  }\r\n\r\n  getDownSibling(index) {\r\n    const { w, h } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasDownNeighbour = Math.floor(index / w) < h - 1;\r\n\r\n    if (hasDownNeighbour) {\r\n      return index + w;\r\n    }\r\n  }\r\n\r\n  getTopSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasTopNeighbour = Math.floor(index / w) > 0;\r\n\r\n    if (hasTopNeighbour) {\r\n      return index - w;\r\n    }\r\n  }\r\n\r\n  getRightSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasRightNeighbour = index % w < w - 1;\r\n\r\n    if (hasRightNeighbour) {\r\n      return index + 1;\r\n    }\r\n  }\r\n\r\n  getLeftSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasLeftNeighbour = index % w > 0;\r\n\r\n    if (hasLeftNeighbour) {\r\n      return index - 1;\r\n    }\r\n  }\r\n\r\n  getGraph() {\r\n    return this.graph;\r\n  }\r\n\r\n  clear() {\r\n    this.graph = {};\r\n    return this;\r\n  }\r\n}\r\n\r\nexport const graphControll = new Graph(getLocalSize(pageWidth, pageHeight));\r\n","import { createEvent, createStore, combine } from \"effector\";\r\nimport { startPosition, endPosition, ceilType } from \"./config\";\r\nimport { graphControll } from \"./graph\";\r\n\r\nexport const resetStore = createEvent();\r\nexport const resetPath = createEvent();\r\n\r\nexport const setGraph = createEvent();\r\n\r\nexport const setBarrier = createEvent();\r\nexport const removeBarrierItem = createEvent();\r\n\r\nexport const triggerStartPosition = createEvent();\r\nexport const triggerEndPosition = createEvent();\r\n\r\nexport const $startEndPosition = createStore([startPosition, endPosition]);\r\nexport const $barrier = createStore([]);\r\n\r\n$barrier\r\n  .on(setBarrier, (state, index) => {\r\n    const isFindIndex = state.includes(index);\r\n    return isFindIndex ? state : [...state, index];\r\n  })\r\n  .on(removeBarrierItem, (state, index) =>\r\n    state.filter((item) => item !== index)\r\n  )\r\n  .reset(resetStore);\r\n\r\n$startEndPosition\r\n  .on(triggerStartPosition, (state, index) => [index, state[1]])\r\n  .on(triggerEndPosition, (state, index) => [state[0], index])\r\n  .reset(resetStore);\r\n\r\nfunction setBarrierToGraph(graph, barriers) {\r\n  barriers.forEach((barrierIndex) => {\r\n    graph.updateGraph({ index: barrierIndex, type: ceilType.BARIER });\r\n  });\r\n}\r\n\r\nfunction setStartPositionToGraph(graph, startIndex) {\r\n  graph.updateGraph({ index: startIndex, type: ceilType.START_POSITION });\r\n}\r\n\r\nfunction setEndPositionToGraph(graph, endIndex) {\r\n  graph.updateGraph({ index: endIndex, type: ceilType.END_POSITION });\r\n}\r\n\r\nexport const $graph = combine({\r\n  barrier: $barrier,\r\n  startEndPosition: $startEndPosition,\r\n}).map((state) => {\r\n  graphControll.clear();\r\n  const [start, end] = state.startEndPosition;\r\n\r\n  const graph = graphControll.createGraph();\r\n\r\n  setBarrierToGraph(graph, state.barrier);\r\n  setStartPositionToGraph(graph, start);\r\n  setEndPositionToGraph(graph, end);\r\n\r\n  return { ...state, graph: graph.graph };\r\n});\r\n","let count = 0;\r\nexport function restorePath(endIndex, startIndex, parent) {\r\n  const path = [];\r\n  let target = parent[endIndex];\r\n\r\n  while (target && target !== startIndex) {\r\n    path.unshift(target);\r\n    target = parent[target];\r\n  }\r\n\r\n  if (path.length > 0) {\r\n    path.push(endIndex);\r\n  }\r\n\r\n  path.unshift(startIndex); // показать первую вершину\r\n\r\n  return path;\r\n}\r\n\r\nexport function breadthFirstSearch(startIndex, endIndex, graph) {\r\n  let isWork = true;\r\n  const queue = [startIndex];\r\n  const visited = new Map([[startIndex, true]]);\r\n  const parent = {};\r\n\r\n  while (isWork && queue.length > 0) {\r\n    const currentIndex = queue.shift();\r\n\r\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\r\n      count++;\r\n      const next = graph[currentIndex].siblings[i];\r\n\r\n      if (!visited.has(next)) {\r\n        queue.push(next);\r\n        visited.set(next, true);\r\n\r\n        parent[next] = currentIndex;\r\n      }\r\n\r\n      if (next === endIndex) {\r\n        isWork = false;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  // console.log(count);\r\n  return restorePath(endIndex, startIndex, parent);\r\n}\r\n","import { createStore, combine, createEvent, restore } from \"effector\";\r\nimport { breadthFirstSearch } from \"./bred-first-search\";\r\nimport { depthFirstSearch } from \"./depth-first-search\";\r\nimport { setGameStatus, gameStatus, $gameState, clearPath } from \"../ui/model\";\r\nimport { resetPath } from \"../model\";\r\n\r\nexport const selectAlgoritm = createEvent();\r\n\r\nexport const $currentAlgoritm = restore(selectAlgoritm, \"bredth first search\");\r\n\r\nselectAlgoritm.watch(resetPath);\r\n\r\nexport const $algoritms = createStore([\r\n  {\r\n    searchFunction: breadthFirstSearch,\r\n    name: \"bredth first search\",\r\n  },\r\n  {\r\n    searchFunction: depthFirstSearch,\r\n    name: \"depth first search\",\r\n  },\r\n]);\r\n\r\nexport const $searchAlgoritm = combine(\r\n  $currentAlgoritm,\r\n  $algoritms,\r\n  (currentAlgoritm, algoritms) =>\r\n    algoritms.find((algoritm) => algoritm.name === currentAlgoritm)\r\n);\r\n","import { restorePath } from \"./bred-first-search\";\r\n\r\nexport function depthFirstSearch(startIndex, endIndex, graph) {\r\n  let isWork = true;\r\n  const stack = [startIndex];\r\n  const visited = new Map([[startIndex, true]]);\r\n  const parent = {};\r\n\r\n  while (isWork && stack.length > 0) {\r\n    const currentIndex = stack.shift();\r\n\r\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\r\n      const next = graph[currentIndex].siblings[i];\r\n\r\n      if (!visited.has(next)) {\r\n        stack.unshift(next);\r\n        visited.set(next, true);\r\n\r\n        parent[next] = currentIndex;\r\n      }\r\n\r\n      if (next === endIndex) {\r\n        isWork = false;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return restorePath(endIndex, startIndex, parent);\r\n}\r\n","import {\r\n  createEvent,\r\n  createStore,\r\n  sample,\r\n  guard,\r\n  restore,\r\n  forward,\r\n  merge,\r\n} from \"effector\";\r\nimport { $graph, resetStore, resetPath } from \"../model\";\r\nimport { breadthFirstSearch } from \"../algoritms/bred-first-search\";\r\nimport { $searchAlgoritm } from \"../algoritms/model\";\r\n\r\nexport const gameStatus = {\r\n  START: \"START\",\r\n  PAUSE: \"PAUSE\",\r\n  STOP: \"STOP\",\r\n  CLEAR: \"CLEAR\",\r\n  RESTART: \"RESTART\",\r\n  CLEAR_PATH: \"CLEAR_PATH\",\r\n};\r\n\r\nexport const setGameStatus = createEvent();\r\n\r\nexport const $path = createStore([]).reset(resetStore, resetPath);\r\n\r\nexport const $gameState = restore(setGameStatus, {\r\n  ref: gameStatus.STOP,\r\n}).reset(resetStore);\r\n\r\nexport const $isValidGameState = $gameState.map(\r\n  (state) => state.ref === gameStatus.START\r\n);\r\n\r\nexport const $clearGameState = $gameState.map(\r\n  (state) => state.ref === gameStatus.CLEAR\r\n);\r\n\r\nexport const startGame = guard({\r\n  source: $gameState,\r\n  filter: $isValidGameState,\r\n});\r\n\r\nconst clearGame = guard({\r\n  source: $gameState,\r\n  filter: $clearGameState,\r\n});\r\n\r\nforward({\r\n  from: clearGame,\r\n  to: resetStore,\r\n});\r\n\r\nsample({\r\n  source: {\r\n    graph: $graph,\r\n    algoritm: $searchAlgoritm,\r\n  },\r\n  clock: startGame,\r\n  target: $path,\r\n  fn: ({ graph, algoritm }) => {\r\n    const [start, end] = graph.startEndPosition;\r\n\r\n    return algoritm.searchFunction(start, end, graph.graph);\r\n  },\r\n});\r\n","import { guard, sample, merge, combine } from \"effector\";\r\nimport {\r\n  colorSchema,\r\n  cellSize,\r\n  pageHeight,\r\n  pageWidth,\r\n  borderSize,\r\n  getLocalSize,\r\n  getGlobalSize,\r\n  drawSquare,\r\n  clearCanvas,\r\n  getPositionByIndex,\r\n  getIndexByPosition,\r\n  startPosition,\r\n  endPosition,\r\n  ceilType,\r\n  convertLocalPositionToGlobal,\r\n} from \"./config\";\r\nimport { configureCanvas } from \"./config-canvas\";\r\nimport { canvasControl } from \"./control-canvas\";\r\nimport {\r\n  setBarrier,\r\n  start,\r\n  removeBarrierItem,\r\n  triggerStartPosition,\r\n  triggerEndPosition,\r\n  setGraph,\r\n  $graph,\r\n  resetStore,\r\n} from \"./model\";\r\nimport { graphControll } from \"./graph\";\r\nimport { BFS } from \"./algoritms/bred-first-search\";\r\nimport { $path, $gameState, $clearGameState } from \"./ui/model\";\r\n\r\nconst $state = combine($graph, $path);\r\n\r\nfunction renderBarrier(barrier, context) {\r\n  for (let i = 0; i < barrier.length; i++) {\r\n    const [x, y] = getPositionByIndex(barrier[i]);\r\n    drawSquare({\r\n      position: [x, y],\r\n      context,\r\n      color: colorSchema.blockColor,\r\n    });\r\n  }\r\n}\r\n\r\nfunction renderActionsCeil(startEndPosition, context) {\r\n  for (let i = 0; i < startEndPosition.length; i++) {\r\n    const index = getPositionByIndex(startEndPosition[i]);\r\n    drawSquare({\r\n      position: index,\r\n      context,\r\n      color: colorSchema.startEndColor[i],\r\n    });\r\n  }\r\n}\r\n\r\nfunction renderCeil(event, state) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  const [startIndex, endIndex] = state.startEndPosition;\r\n\r\n  return {\r\n    renderForMove: () => {\r\n      if (index !== startIndex && index !== endIndex) {\r\n        setBarrier(index);\r\n      }\r\n    },\r\n    renderForClick: () => {\r\n      if (index !== startIndex && index !== endIndex) {\r\n        removeBarrierItem(index);\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nfunction renderStart(index, state) {\r\n  const findIndex = state.barrier.includes(index);\r\n  const [, endIndex] = state.startEndPosition;\r\n\r\n  if (!findIndex && index !== endIndex) {\r\n    triggerStartPosition(index);\r\n  }\r\n}\r\n\r\nfunction renderEnd(index, state, lastIndex) {\r\n  const findIndex = state.barrier.includes(index);\r\n  const [startIndex] = state.startEndPosition;\r\n\r\n  if (!findIndex && index !== startIndex) {\r\n    triggerEndPosition(index);\r\n  }\r\n}\r\n\r\nlet type = null;\r\nfunction renderLogic(event) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n  const state = $graph.getState();\r\n\r\n  if (!type) {\r\n    type = state.graph[index].type;\r\n  }\r\n\r\n  switch (type) {\r\n    case ceilType.BARIER:\r\n      return renderCeil(event, state).renderForClick();\r\n    case ceilType.START_POSITION:\r\n      return renderStart(index, state);\r\n    case ceilType.END_POSITION:\r\n      return renderEnd(index, state);\r\n    case ceilType.EMPTY:\r\n      return renderCeil(event, state).renderForMove();\r\n  }\r\n}\r\n\r\nexport function renderCanvas(canvas, context) {\r\n  const localSize = getLocalSize(pageWidth, pageHeight);\r\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\r\n  const gridData = buildGrid(context);\r\n\r\n  configureCanvas(canvas, globalSize);\r\n\r\n  canvasControl.registerClickEventToCanvas(canvas);\r\n  canvasControl.addMouseMoveEvent((e, s) => {\r\n    return renderLogic(e, s);\r\n  });\r\n  canvasControl.addMouseUpEvent(() => (type = null));\r\n  canvasControl.addMouseClickEvent((e, s) => renderCeil(e, s).renderForClick());\r\n\r\n  function render(state) {\r\n    clearCanvas(context, canvas);\r\n    canvasControl.setState(state);\r\n\r\n    renderActionsCeil(state.startEndPosition, context);\r\n    renderBarrier(state.barrier, context);\r\n\r\n    gridData.applyStyles();\r\n    context.stroke(gridData.grid);\r\n  }\r\n\r\n  $state.watch(([graph, path]) => {\r\n    render(graph);\r\n    renderPath({\r\n      path,\r\n      context,\r\n    });\r\n  });\r\n}\r\n\r\nlet prev = null;\r\nexport function renderPath({ context, path = [], color = \"blue\" }) {\r\n  for (let i = 0; i < path.length; i++) {\r\n    const position = getPositionByIndex(path[i]);\r\n    const [x, y] = convertLocalPositionToGlobal(position);\r\n\r\n    if (prev) {\r\n      context.beginPath();\r\n      context.strokeStyle = color;\r\n      context.lineWidth = 2;\r\n      context.moveTo(prev[0], prev[1]);\r\n      context.lineTo(x + cellSize / 2, y + cellSize / 2);\r\n      context.stroke();\r\n    }\r\n\r\n    prev = [x + cellSize / 2, y + cellSize / 2];\r\n  }\r\n\r\n  prev = null;\r\n}\r\n\r\nfunction buildGrid(context) {\r\n  const grid = new Path2D();\r\n\r\n  const localSize = getLocalSize(pageWidth, pageHeight);\r\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\r\n\r\n  for (let i = 0; i <= localSize.w; i++) {\r\n    grid.moveTo(i * cellSize + borderSize, 0);\r\n    grid.lineTo(i * cellSize + borderSize, globalSize.h);\r\n  }\r\n\r\n  for (let i = 0; i <= localSize.h; i++) {\r\n    grid.moveTo(0, i * cellSize + borderSize);\r\n    grid.lineTo(globalSize.w, i * cellSize + borderSize);\r\n  }\r\n\r\n  return {\r\n    grid,\r\n    applyStyles: () => {\r\n      context.lineWidth = borderSize;\r\n      context.strokeStyle = colorSchema.borderColor;\r\n    },\r\n  };\r\n}\r\n\r\nconst canvas = document.getElementById(\"viewport\");\r\n\r\nif (canvas) {\r\n  const context = canvas.getContext(\"2d\");\r\n\r\n  renderCanvas(canvas, context);\r\n}\r\n","export function configureCanvas(canvas, { w, h }) {\r\n  canvas.height = h;\r\n  canvas.width = w;\r\n}\r\n","import React from \"react\";\r\nimport { useStore } from \"effector-react\";\r\nimport { renderCanvas } from \"./canvas\";\r\nimport { setGameStatus, gameStatus, $gameState } from \"./ui/model\";\r\nimport {\r\n  $algoritms,\r\n  selectAlgoritm,\r\n  $currentAlgoritm,\r\n} from \"./algoritms/model\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  const algoritms = useStore($algoritms);\r\n  const currentAlgoritm = useStore($currentAlgoritm);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"select-bar\">\r\n        <h2 className=\"select-bar_title\">Select algoritm</h2>\r\n        <ul>\r\n          {algoritms.map((algoritm, index) => (\r\n            <li\r\n              onClick={() => selectAlgoritm(algoritm.name)}\r\n              className={currentAlgoritm === algoritm.name ? \"isActive\" : \"\"}\r\n              key={algoritm.name}\r\n            >\r\n              {algoritm.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"btn-wrapper\">\r\n          <button\r\n            className=\"btn\"\r\n            onClick={() => setGameStatus({ ref: gameStatus.START })}\r\n          >\r\n            start\r\n          </button>\r\n\r\n          <button\r\n            className=\"btn\"\r\n            onClick={() => setGameStatus({ ref: gameStatus.CLEAR })}\r\n          >\r\n            clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}