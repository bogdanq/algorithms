{"version":3,"sources":["config.ts","graph/controller.ts","graph/utils.ts","graph/animations.ts","graph/barrier.ts","graph/model.ts","game/utils.ts","algoritms/controller.ts","algoritms/utils.ts","algoritms/a-start/a-start.ts","algoritms/model.ts","algoritms/bred-first-search.ts","algoritms/depth-first-search.ts","algoritms/dijkstra/dijkstra.ts","game/models/game.ts","game/models/game-history.ts","render/render-barrier-with-type.ts","render/render.ts","render/drow-start-end-position.ts","render/render-path.ts","game/animated-vertex.ts","game/loop.ts","control-canvas.ts","canvas.ts","render/build-grid.ts","config-canvas.ts","gui/ui/molecules/modal-wrapper.tsx","gui/ui/atoms/icon.tsx","gui/ui/atoms/text.tsx","gui/ui/atoms/default-button.tsx","gui/lib/styled-components-layout.ts","gui/ui/templates/flex-wrapper.ts","gui/ui/atoms/default-switch.tsx","gui/ui/molecules/history.tsx","gui/ui/molecules/info.tsx","gui/ui/molecules/about-algoritms.tsx","gui/ui/molecules/select.tsx","gui/ui/molecules/algoritm-list.tsx","gui/ui/organisms/info-block.tsx","gui/ui/organisms/game-controll-buttons.tsx","gui/ui/organisms/algoritm-result.tsx","gui/ui/organisms/code-area/code-string.ts","gui/ui/organisms/code-area/model.ts","gui/ui/organisms/code-area/code-area.tsx","gui/ui/organisms/code-area/modal.tsx","gui/ui/organisms/algoritms.tsx","gui/ui/organisms/right-side-bar.tsx","App.jsx","global-css.ts","index.tsx"],"names":["cellSize","pageWidth","window","innerWidth","pageHeight","innerHeight","borderSize","colorSchema","borderColor","blockColor","startEndColor","BarrierType","getLocalSize","w","h","Math","floor","getGlobalSize","convertLocalPositionToGlobal","x","y","drawSquare","color","position","context","width","_convertLocalPosition","_convertLocalPosition2","Object","slicedToArray","size","fillStyle","fillRect","getIndexByPosition","getPositionByIndex","index","graphControll","constructor","this","graph","cellCount","createGraph","canMoveDiagonal","clear","type","EMPTY","siblings","getSiblings","filter","Boolean","map","item","vertex","getVertexByIndex","updateGraph","_ref","newParams","objectWithoutProperties","objectSpread2","left","getLeftSibling","top","getTopSibling","right","getRightSibling","down","getDownSibling","getTopLeftDiagonal","getTopRightDiagonal","getBotRightDiagonal","getBotLeftDiagonal","bot","getBottomDiagonal","_getLocalSize","getGraph","removeBarrierFromState","event","_getLocalSize2","clientX","clientY","removeBarrierItem","drawMarkerWithAnimation","params","animateId","_params$width","requestAnimationFrame","_convertLocalPosition3","_convertLocalPosition4","strokeStyle","beginPath","moveTo","lineTo","stroke","drawMark","cancelAnimationFrame","BarrierItem","barrierType","canDrawe","canRemove","getBarier","getIndex","render","drawSquareWithAnimation","_params$position","_params$scale","scale","remove","graphDomain","createDomain","resetStore","clearCanvas","changeDirection","setBarrierType","setBarrier","triggerStartPosition","triggerEndPosition","$startEndPosition","store","$canMoveDiagonal","$barrierType","restore","BARIER","$barriers","on","state","onCreateStore","reset","removedBarrier","guard","source","sample","clock","fn","find","barrier","watch","removed","$graph","combine","startEndPosition","_state$startEndPositi","start","end","barriers","forEach","WATER","SAND","weight","setBarrierToGraph","startIndex","START_POSITION","setStartPositionToGraph","endIndex","END_POSITION","setEndPositionToGraph","checkGameStatus","target","status","some","formatWithOptions","locale","ru","screenCanvas","canvas","document","querySelector","toDataURL","AlgoritmController","count","processing","visited","increment","addVertex","updateProcessing","push","getAlgotitmResult","canVisitedVertex","restorePath","historyPath","path","lastStep","unshift","getVertexWeight","heuristic","x1","y1","abs","algoritmsDomain","selectAlgoritm","createEvent","addVisitedVertex","addProcessedVertex","addCustomAlgoritm","$currentAlgoritm","$visitedVertex","$processedVertex","$algoritms","createStore","searchFunction","prevIndex","isWork","aInfo","queue","length","currentIndex","shift","undefined","i","sibling","includes","result","restoredPath","name","stack","priorityQueue","PriorityQueue","a","b","Map","add","isEmpty","poll","currentVertex","nextWeight","get","Infinity","set","positionByEndIndex","has","modal","$searchAlgoritm","currentAlgoritm","algoritms","algoritm","GameStatus","foo","_","processed","setGameStatus","RESET","gameDomain","setTimer","$path","$currentTimer","fps","fpsVariant","$gameState","startGame","START","resumeGame","RESUME","endGame","END_GAME","CLEAR","_graph$startEndPositi","time","performance","now","timeEnd","toFixed","setGameHistory","recoveryGameHistory","$gameHistory","recoveryGameHistoryFx","createEffect","use","Promise","rs","setTimeout","$completedGameState","image","slice","done","prepend","findedGameEvent","history","id","findedGame","game","forward","from","to","setBarrierToStateWithType","bind","findIndex","setStartToStore","setEndToStore","_state$graph","_state$graph$startEnd","setBarrierToState","drowBarriersWithType","executeLogic","gridData","visitedVertex","processedVertex","clearRect","height","clearALlCanvas","canvasControl","setState","animatedVisitedVertex","drawVertexWithLoop","drawVisitedVertexWithLoop","drowStartEndPositions","applyStyles","grid","prev","setVertex","animationCount","_state$processing","lineWidth","renderPath","animatedVertexWithArray","_getPositionByIndex","_getPositionByIndex2","animatedVertex","_getPositionByIndex3","_getPositionByIndex4","tickFx","[object Object]","isMouseDown","isMouseMove","listeners","lastIndex","disabledListeners","init","PAUSE","disabledListener","includeListener","registerClickEventToCanvas","addEventListener","userEvent","eventListener","_getLocalSize3","getTargetIndex","addMouseDownEvent","addMouseUpEvent","addMouseMoveEvent","addMouseClickEvent","$state","renderCanvas","localSize","globalSize","Path2D","buildGrid","addEventsToCanvas","configureCanvas","merge","$animationCount","tickWithParams","attach","effect","mapParams","$combineState","createTick","ModalWrapper","isOpen","onRequestClose","children","className","react_default","createElement","onMouseDown","e","stopPropagation","lib_default","closeTimeoutMS","StyledRootWrapper","onClick","StyledWrapper","StyledInner","CloseModal","ReactModal","setAppElement","styled","div","_templateObject","concat","_templateObject2","_templateObject3","_templateObject4","Icon","icon_templateObject","Text","p","text_templateObject","Button","icon","iconSize","variant","style","fontSize","startIcon","prop","value","is","FlexContainer","flex_wrapper_templateObject","props","css","styled_components_layout_templateObject","alignContent","align","basis","grow","shrink","justify","order","padding","maxW","direction","Left","flex_wrapper_templateObject2","Switch","label","_ref$name","rest","cursor","FormControlLabel","control","assign","History","_React$useState","React","useState","_React$useState2","setOpen","handleClickItem","useCallback","HistoryIconWrapper","historyCount","icon_Icon","index_esm","Fragment","_item$path","_item$path2","_item$path3","_item$path4","HistoryItem","active","key","src","history_templateObject","history_templateObject2","history_templateObject3","history_templateObject4","Info","fi_index_esm","InfoModal","ColorBlock","info_templateObject","AboutAlgoritms","href","SelectBarrierType","useStore","handleChange","Select","onChange","MenuItem","AlgoritmsList","handleChangeAlgoritm","isOpenAlgoritmList","UlWithAnimation","Li","isActive","ul","algoritm_list_templateObject","li","algoritm_list_templateObject2","Wrapper","info_block_templateObject","InfoDraggable","gameHistory","react_draggable_default","GameControllButtons","gameState","default_button_Button","GrResume","GrPause","GrPlay","GrClear","$graphState","AlgotitmResult","_graphState$path","graphState","handleChangeCode","$trimmedEditorCode","it","trim","CodeArea","code","customFunction","Function","replace","alert","react_ace_lib_default","nextCode","marginBottom","mode","theme","editorProps","$blockScrolling","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","CodeAreaModal","AlgoritmsBlock","_useState","_useState2","isOpenCodeArea","setOpenCodeArea","_useReducer","useReducer","_useReducer2","toggleAlgoritmList","_useStore","currentTimer","RightSideBar","borderTop","TextField","parseInt","default_switch_Switch","checked","App","useLayoutEffect","getContext","globalCss","global_css_templateObject","GlobalModalStyles","createGlobalStyle","global_css_templateObject2","rootElement","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.86dbe9c0.chunk.js","sourcesContent":["export const cellSize = 35;\nexport const pageWidth = window.innerWidth;\nexport const pageHeight = window.innerHeight;\nexport const borderSize = 0.5;\nexport const boardLength = pageWidth * pageHeight;\nexport const startPosition = 0;\nexport const endPosition = 17;\n\nexport const colorSchema = {\n  borderColor: \"#000\",\n  blockColor: \"#523509\",\n  startEndColor: [\"green\", \"red\"],\n};\n\nexport enum BarrierType {\n  START_POSITION = \"START_POSITION\",\n  END_POSITION = \"END_POSITION\",\n  BARIER = \"BARIER\",\n  EMPTY = \"EMPTY\",\n  WATER = \"WATER\",\n  SAND = \"SAND\",\n}\n\ntype DrawSquare = {\n  color?: string;\n  position: [number, number];\n  context: any;\n  width?: number;\n};\n\nexport function getLocalSize(w: number, h: number) {\n  return {\n    w: Math.floor(w / cellSize),\n    h: Math.floor(h / cellSize),\n  };\n}\n\nexport function getGlobalSize(w: number, h: number) {\n  return {\n    w: Math.floor(w * cellSize),\n    h: Math.floor(h * cellSize),\n  };\n}\n\nexport function convertLocalPositionToGlobal([x, y]: [number, number]) {\n  return [x * cellSize, y * cellSize];\n}\n\nexport function drawSquare({\n  color = \"rgb(152, 251, 152)\",\n  position,\n  context,\n  width,\n}: DrawSquare) {\n  const [x, y] = convertLocalPositionToGlobal(position);\n  const size = width || cellSize - borderSize * 2;\n\n  context.fillStyle = color;\n  context.fillRect(x + borderSize * 2, y + borderSize * 2, size, size);\n}\n\nexport function clearALlCanvas(context: any, canvas: any) {\n  return context.clearRect(0, 0, canvas.width, canvas.height);\n}\n\nexport function getIndexByPosition([x, y]: [number, number]) {\n  const { w } = getLocalSize(pageWidth, pageHeight);\n\n  return y * w + x;\n}\n\nexport function getPositionByIndex(index: number): [number, number] {\n  const { w } = getLocalSize(pageWidth, pageHeight);\n  const y = Math.floor(index / w);\n  const x = index - y * w;\n\n  return [x, y];\n}\n\nexport function getTargetIndex(event: any) {\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\n  const index = getIndexByPosition([w, h]);\n\n  return index;\n}\n\nexport function drawMark({\n  color = \"#e84a4a\",\n  position,\n  context,\n}: Exclude<DrawSquare, \"width\">) {\n  const [x, y] = convertLocalPositionToGlobal(position);\n\n  context.strokeStyle = color;\n\n  context.beginPath();\n  context.moveTo(x + 10, y + 10);\n  context.lineTo(x + cellSize - 10, y + cellSize - 10);\n  context.stroke();\n\n  context.beginPath();\n  context.moveTo(x + cellSize - 10, y + 10);\n  context.lineTo(x + 10, y + cellSize - 10);\n  context.stroke();\n}\n","import { BarrierType, pageWidth, getLocalSize, pageHeight } from \"../config\";\n\nexport type Vertex = {\n  type: BarrierType;\n  siblings: Array<{ vertex: number }>;\n  weight?: number;\n};\n\nexport type GraphType = {\n  [key: string]: Vertex;\n};\n\nexport class Graph {\n  public graph: GraphType;\n  private cellCount: number;\n\n  constructor({ w, h }: { w: number; h: number }) {\n    this.graph = {};\n    this.cellCount = w * h;\n  }\n\n  createGraph(canMoveDiagonal: boolean) {\n    this.clear();\n\n    for (let index = 0; index < this.cellCount; index++) {\n      this.graph[index] = {\n        type: BarrierType.EMPTY,\n        siblings: (this.getSiblings(index, canMoveDiagonal).filter(\n          Boolean\n        ) as number[]).map((item) => ({ vertex: item })),\n      };\n    }\n\n    return this;\n  }\n\n  getVertexByIndex(index?: number) {\n    if (index) {\n      return this.graph[index];\n    }\n\n    return null;\n  }\n\n  updateGraph({\n    index,\n    ...newParams\n  }: {\n    index: number;\n    type: BarrierType;\n    weight?: number;\n    siblings?: [];\n  }) {\n    if (this.graph[index]) {\n      this.graph[index] = { ...this.graph[index], ...newParams };\n    }\n  }\n\n  getSiblings(index: number, canMoveDiagonal: boolean) {\n    const left = this.getLeftSibling(index);\n    const top = this.getTopSibling(index);\n    const right = this.getRightSibling(index);\n    const down = this.getDownSibling(index);\n\n    if (canMoveDiagonal) {\n      const topLeft = this.getTopLeftDiagonal(top, left);\n      const topRight = this.getTopRightDiagonal(top, right);\n      const botRight = this.getBotRightDiagonal(down, right);\n      const botLeft = this.getBotLeftDiagonal(down, left);\n\n      return [topLeft, top, topRight, right, botRight, down, botLeft, left];\n    }\n\n    return [top, left, down, right];\n  }\n\n  getTopLeftDiagonal(top?: number, left?: number) {\n    if (!top || !left) {\n      return undefined;\n    }\n\n    if (top >= 0 && left >= 0) {\n      return top - 1;\n    }\n  }\n\n  getTopRightDiagonal(top?: number, right?: number) {\n    if (!top || !right) {\n      return undefined;\n    }\n\n    if (top >= 0 && right >= 0) {\n      return top + 1;\n    }\n  }\n\n  getBotLeftDiagonal(bot?: number, left?: number) {\n    if (!bot || !left) {\n      return undefined;\n    }\n\n    if (bot >= 0 && left >= 0) {\n      return bot - 1;\n    }\n  }\n\n  getBotRightDiagonal(bot?: number, right?: number) {\n    if (!bot || !right) {\n      return undefined;\n    }\n\n    if (bot >= 0 && right) {\n      return bot + 1;\n    }\n  }\n\n  getBottomDiagonal(down: number) {\n    const left = down - 1;\n    const right = down + 1;\n\n    return [left, right];\n  }\n\n  getDownSibling(index: number) {\n    const { w, h } = getLocalSize(pageWidth, pageHeight);\n\n    const hasDownNeighbour = Math.floor(index / w) < h - 1;\n\n    if (hasDownNeighbour) {\n      return index + w;\n    }\n  }\n\n  getTopSibling(index: number) {\n    const { w } = getLocalSize(pageWidth, pageHeight);\n\n    const hasTopNeighbour = Math.floor(index / w) > 0;\n\n    if (hasTopNeighbour) {\n      return index - w;\n    }\n  }\n\n  getRightSibling(index: number) {\n    const { w } = getLocalSize(pageWidth, pageHeight);\n\n    const hasRightNeighbour = index % w < w - 1;\n\n    if (hasRightNeighbour) {\n      return index + 1;\n    }\n  }\n\n  getLeftSibling(index: number) {\n    const { w } = getLocalSize(pageWidth, pageHeight);\n\n    const hasLeftNeighbour = index % w > 0;\n\n    if (hasLeftNeighbour) {\n      return index - 1;\n    }\n  }\n\n  getGraph() {\n    return this.graph;\n  }\n\n  clear() {\n    this.graph = {};\n    return this;\n  }\n}\n\nexport const graphControll = new Graph(getLocalSize(pageWidth, pageHeight));\n","import { BarrierType, getLocalSize, getIndexByPosition } from \"../config\";\nimport {\n  removeBarrierItem,\n  setBarrier,\n  triggerEndPosition,\n  triggerStartPosition,\n  CombidenGraphType,\n} from \"./model\";\nimport { Graph } from \"./controller\";\nimport { BarrierItem } from \"./barrier\";\n\nexport function setBarrierToGraph(graph: Graph, barriers: Array<BarrierItem>) {\n  barriers.forEach((barrier) => {\n    if (barrier.barrierType === BarrierType.BARIER) {\n      graph.updateGraph({\n        index: barrier.getIndex(),\n        type: barrier.barrierType,\n        siblings: [],\n      });\n\n      return;\n    }\n\n    if (barrier.barrierType === BarrierType.WATER) {\n      graph.updateGraph({\n        index: barrier.getIndex(),\n        type: barrier.barrierType,\n        weight: 10,\n      });\n\n      return;\n    }\n\n    if (barrier.barrierType === BarrierType.SAND) {\n      graph.updateGraph({\n        index: barrier.getIndex(),\n        type: barrier.barrierType,\n        weight: 3,\n      });\n\n      return;\n    }\n  });\n}\n\nexport function setStartPositionToGraph(graph: Graph, startIndex: number) {\n  graph.updateGraph({ index: startIndex, type: BarrierType.START_POSITION });\n}\n\nexport function setEndPositionToGraph(graph: Graph, endIndex: number) {\n  graph.updateGraph({ index: endIndex, type: BarrierType.END_POSITION });\n}\n\nexport function setBarrierToState(\n  event: MouseEvent,\n  state: { graph: CombidenGraphType }\n) {\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\n  const index = getIndexByPosition([w, h]);\n\n  const {\n    graph: {\n      startEndPosition: [startIndex, endIndex],\n      barrierType,\n    },\n  } = state;\n\n  if (index !== startIndex && index !== endIndex) {\n    setBarrier({ index, barrierType });\n  }\n}\n\nexport function removeBarrierFromState(event: MouseEvent) {\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\n  const index = getIndexByPosition([w, h]);\n\n  removeBarrierItem(index);\n}\n\nexport function setStartToStore(\n  index: number,\n  { graph }: { graph: CombidenGraphType }\n) {\n  const findIndex = graph.barrier.find((barrier) => barrier.index === index);\n  const [, endIndex] = graph.startEndPosition;\n\n  if (!findIndex && index !== endIndex) {\n    triggerStartPosition(index);\n  }\n}\n\nexport function setEndToStore(\n  index: number,\n  { graph }: { graph: CombidenGraphType }\n) {\n  const findIndex = graph.barrier.find((barrier) => barrier.index === index);\n  const [startIndex] = graph.startEndPosition;\n\n  if (!findIndex && index !== startIndex) {\n    triggerEndPosition(index);\n  }\n}\n","import { drawSquare, drawMark, cellSize } from \"../config\";\n\nexport function drawSquareWithAnimation(params: {\n  position: [number, number];\n  context: CanvasRenderingContext2D;\n  color?: string;\n  width: number;\n  scale?: number;\n}) {\n  let animateId;\n  let {\n    position: [x, y],\n    width,\n    scale = 0.3,\n  } = params;\n\n  if (width < cellSize) {\n    animateId = requestAnimationFrame(() =>\n      drawSquareWithAnimation({\n        ...params,\n        width,\n        scale,\n      })\n    );\n\n    drawSquare({\n      ...params,\n      position: [x + scale, y + scale],\n    });\n\n    if (scale > 0 && width % 5 === 0) {\n      scale = scale - 0.1;\n    }\n\n    width++;\n  } else {\n    if (animateId) {\n      cancelAnimationFrame(animateId);\n    }\n  }\n}\n\nexport function drawMarkerWithAnimation(params: {\n  position: [number, number];\n  context: CanvasRenderingContext2D;\n  width?: number;\n}) {\n  let { width = cellSize - 10 } = params;\n  let animateId;\n\n  if (width < cellSize) {\n    animateId = requestAnimationFrame(() =>\n      drawMarkerWithAnimation({\n        ...params,\n        width,\n      })\n    );\n\n    drawMark({\n      ...params,\n      width,\n    });\n\n    width++;\n  } else {\n    drawSquare({\n      ...params,\n      color: \"#fff\",\n      width: 0,\n    });\n\n    if (animateId) {\n      cancelAnimationFrame(animateId);\n    }\n  }\n}\n","import {\n  getPositionByIndex,\n  drawSquare,\n  colorSchema,\n  BarrierType,\n} from \"../config\";\nimport { drawSquareWithAnimation, drawMarkerWithAnimation } from \"./animations\";\n\nexport class BarrierItem {\n  public barrierType: BarrierType;\n  public index: number;\n  public canDrawe: boolean;\n  public context: null | CanvasRenderingContext2D;\n  public canRemove: boolean;\n  public position: null | [number, number];\n\n  constructor(index: number, barrierType: BarrierType) {\n    this.barrierType = barrierType;\n    this.index = index;\n    this.canDrawe = false;\n    this.context = null;\n    this.canRemove = false;\n    this.position = null;\n  }\n\n  getBarier() {\n    return this;\n  }\n\n  getIndex() {\n    return this.index;\n  }\n\n  render(context: any, color = colorSchema.blockColor) {\n    this.context = context;\n    this.position = getPositionByIndex(this.index);\n\n    if (!this.canRemove) {\n      if (!this.canDrawe) {\n        drawSquareWithAnimation({\n          position: this.position,\n          context,\n          color,\n          width: 20,\n        });\n      } else {\n        drawSquare({\n          position: this.position,\n          context,\n          color,\n        });\n      }\n\n      this.canDrawe = true;\n    }\n  }\n\n  remove() {\n    this.canRemove = true;\n\n    if (this.position && this.context) {\n      drawMarkerWithAnimation({\n        position: this.position,\n        context: this.context,\n      });\n    }\n\n    this.canRemove = false;\n  }\n}\n","import { combine, createDomain, sample, guard, restore } from \"effector\";\nimport { startPosition, endPosition, BarrierType } from \"../config\";\nimport { graphControll, GraphType } from \"./controller\";\nimport {\n  setBarrierToGraph,\n  setStartPositionToGraph,\n  setEndPositionToGraph,\n} from \"./utils\";\nimport { BarrierItem } from \"./barrier\";\n\nexport type CombidenGraphType = {\n  graph: GraphType;\n  barrier: BarrierItem[];\n  barrierType: BarrierType;\n  startEndPosition: [number, number];\n  canMoveDiagonal: boolean;\n};\n\nconst graphDomain = createDomain(\"graph\");\n\nexport const resetStore = graphDomain.event();\n\nexport const clearCanvas = graphDomain.event();\n\nexport const changeDirection = graphDomain.event();\n\nexport const setBarrierType = graphDomain.event<string>();\n\nexport const setBarrier = graphDomain.event<{\n  index: number;\n  barrierType: BarrierType;\n}>();\n\nexport const removeBarrierItem = graphDomain.event<number>();\n\nexport const triggerStartPosition = graphDomain.event<number>();\n\nexport const triggerEndPosition = graphDomain.event<number>();\n\nexport const $startEndPosition = graphDomain.store<[number, number]>([\n  startPosition,\n  endPosition,\n]);\n\nexport const $canMoveDiagonal = graphDomain.store(false);\n\nexport const $barrierType = restore(setBarrierType, BarrierType.BARIER);\n\nexport const $barriers = graphDomain.store<Array<BarrierItem>>([]);\n\n$canMoveDiagonal.on(changeDirection, (state) => !state);\n\ngraphDomain.onCreateStore((store) => store.reset(resetStore));\n\nexport const removedBarrier = guard({\n  source: sample({\n    source: $barriers,\n    clock: removeBarrierItem,\n    fn: (state, index) => state.find((barrier) => barrier.getIndex() === index),\n  }),\n  filter: Boolean,\n});\n\nremovedBarrier.watch((barrier: BarrierItem) => barrier.remove());\n\n$barriers\n  .on(setBarrier, (state, { index, barrierType }) => {\n    const barrier = new BarrierItem(index, barrierType);\n\n    const isFindIndex = state.find((item) => item.getIndex() === index);\n\n    return isFindIndex ? state : [...state, barrier];\n  })\n  .on(removedBarrier, (state, removed) =>\n    state.filter((item) => item !== removed)\n  );\n\n$startEndPosition\n  .on(triggerStartPosition, (state, index) => [index, state[1]])\n  .on(triggerEndPosition, (state, index) => [state[0], index]);\n\nexport const $graph = combine({\n  barrier: $barriers,\n  barrierType: $barrierType,\n  startEndPosition: $startEndPosition,\n  canMoveDiagonal: $canMoveDiagonal,\n}).map((state) => {\n  const [start, end] = state.startEndPosition;\n\n  const graph = graphControll.createGraph(state.canMoveDiagonal);\n\n  setBarrierToGraph(graph, state.barrier);\n\n  setStartPositionToGraph(graph, start);\n\n  setEndPositionToGraph(graph, end);\n\n  return { ...state, graph: graph.graph };\n});\n","import { ru } from \"date-fns/locale\";\nimport { formatWithOptions } from \"date-fns/fp\";\nimport type { GameStatus } from \"./models\";\n\nexport function checkGameStatus(target: GameStatus, status: Array<GameStatus>) {\n  return status.some((item) => target === item);\n}\n\nexport function filtredFps(_: number, fps: number) {\n  const fpsVariant = {\n    min: 1,\n    max: 30,\n  };\n\n  if (fps < fpsVariant.min) {\n    return fpsVariant.min;\n  }\n  if (fps >= fpsVariant.max) {\n    return fpsVariant.max;\n  }\n  return fps;\n}\n\nexport const formatter = formatWithOptions(\n  { locale: ru },\n  \" dd-MM-yyyy | HH:mm:ss\"\n);\n\nexport const screenCanvas = () => {\n  const canvas = document.querySelector(\"canvas\");\n\n  return canvas?.toDataURL() || \"\";\n};\n","export class AlgoritmController {\n  public count: number;\n  public processing: Array<{\n    vertex: number;\n    siblings: Array<number>;\n  }>;\n  public visited: Array<number | null>;\n  public startIndex: number;\n  public endIndex: number;\n\n  constructor(startIndex: number, endIndex: number) {\n    this.count = 0;\n    this.processing = [];\n    this.visited = [];\n    this.startIndex = startIndex;\n    this.endIndex = endIndex;\n  }\n\n  increment() {\n    this.count++;\n  }\n\n  addVertex(\n    {\n      vertex,\n      siblings,\n    }: {\n      vertex: number;\n      siblings: Array<{\n        vertex: number;\n      }>;\n    },\n    visited: number | null\n  ) {\n    const updateProcessing = {\n      vertex,\n      siblings: siblings.map((item) => item.vertex),\n    };\n\n    this.processing.push(updateProcessing);\n    this.visited.push(visited);\n  }\n\n  getAlgotitmResult() {\n    return this;\n  }\n}\n","import { Vertex } from \"graph\";\nimport { BarrierType } from \"../config\";\n\nexport const canVisitedVertex = (vertex: { type: BarrierType }) => {\n  if (vertex.type !== BarrierType.BARIER) {\n    return true;\n  }\n  return false;\n};\n\nexport function restorePath(\n  endIndex: number,\n  startIndex: number,\n  historyPath: { [key: string]: number }\n) {\n  const path = [endIndex];\n  let lastStep = endIndex;\n\n  while (lastStep && lastStep !== startIndex) {\n    path.unshift(historyPath[lastStep]);\n    lastStep = historyPath[lastStep];\n  }\n\n  return path;\n}\n\nexport function getVertexWeight(vertex: Vertex | null) {\n  if (vertex && vertex.weight) {\n    return vertex.weight;\n  }\n\n  return 1;\n}\n","import PriorityQueue from \"fastpriorityqueue\";\nimport { GraphType, Graph } from \"graph\";\n\nimport { getPositionByIndex } from \"../../config\";\n\nimport { AlgoritmController } from \"../controller\";\nimport { canVisitedVertex, restorePath, getVertexWeight } from \"../utils\";\n\nfunction heuristic([x, y]: number[], [x1, y1]: number[]) {\n  return Math.abs(x - x1) + Math.abs(y - y1);\n}\n\nexport function aStar(\n  startIndex: number,\n  endIndex: number,\n  graph: GraphType,\n  graphControll: Graph\n) {\n  let prevIndex = null;\n  let isWork = true;\n\n  const positionByEndIndex = getPositionByIndex(endIndex);\n\n  const aInfo = new AlgoritmController(startIndex, endIndex);\n\n  const priorityQueue = new PriorityQueue<[number, number]>(\n    (a, b) => a[1] < b[1]\n  );\n\n  const visited = new Map([[startIndex, 0]]);\n\n  const path: { [key: string]: number } = {};\n\n  priorityQueue.add([startIndex, 0]);\n\n  while (isWork && !priorityQueue.isEmpty()) {\n    const [currentIndex] = priorityQueue.poll() || [];\n\n    if (currentIndex === undefined || currentIndex === endIndex) {\n      isWork = false;\n      break;\n    }\n\n    const currentVertex = graph[currentIndex];\n\n    aInfo.addVertex(\n      {\n        vertex: currentIndex,\n        siblings: graph[currentIndex].siblings,\n      },\n      prevIndex\n    );\n\n    for (let i = 0; i < currentVertex.siblings.length; i++) {\n      const sibling = currentVertex.siblings[i];\n\n      if (!sibling) {\n        isWork = false;\n        break;\n      }\n\n      const vertex = graphControll.getVertexByIndex(sibling.vertex);\n\n      if (vertex && canVisitedVertex(vertex)) {\n        const nextWeight =\n          (visited.get(currentIndex) || currentIndex) + getVertexWeight(vertex);\n\n        const weightIsLower =\n          typeof visited.get(sibling.vertex) === \"undefined\" ||\n          nextWeight < (visited.get(sibling.vertex) || Infinity);\n\n        if (weightIsLower && !visited.has(sibling.vertex)) {\n          priorityQueue.add([\n            sibling.vertex,\n            nextWeight +\n              heuristic(positionByEndIndex, getPositionByIndex(sibling.vertex)),\n          ]);\n\n          path[sibling.vertex] = currentIndex;\n          visited.set(sibling.vertex, nextWeight);\n\n          aInfo.increment();\n\n          if (endIndex === sibling.vertex) {\n            isWork = false;\n            break;\n          }\n        }\n      }\n    }\n\n    prevIndex = currentIndex;\n  }\n\n  const restoredPath = restorePath(endIndex, startIndex, path);\n  const result = aInfo.getAlgotitmResult();\n\n  return {\n    ...result,\n    path: restoredPath,\n  };\n}\n","import {\n  createStore,\n  combine,\n  createEvent,\n  restore,\n  createDomain,\n} from \"effector\";\nimport { clearCanvas, resetStore } from \"graph\";\nimport { setGameStatus, GameStatus } from \"game\";\nimport { aStar } from \"./a-start\";\nimport { breadthFirstSearch } from \"./bred-first-search\";\nimport { depthFirstSearch } from \"./depth-first-search\";\nimport { dijkstra } from \"./dijkstra\";\n\nexport type AlgoritmName =\n  | \"bredth first search\"\n  | \"depth first search\"\n  | \"dijkstra\"\n  | \"a-star\"\n  | \"свой алгоритм\";\n\nexport type Algoritm = {\n  searchFunction: any;\n  name: AlgoritmName;\n  modal?: boolean;\n};\n\nexport type ProcessedVertex = {\n  vertex: number;\n  siblings: Array<number>;\n};\n\nconst algoritmsDomain = createDomain(\"algoritmsDomain\");\n\nexport const selectAlgoritm = createEvent<AlgoritmName>();\n\nexport const addVisitedVertex = createEvent<number>();\n\nexport const addProcessedVertex = createEvent<ProcessedVertex>();\n\nexport const addCustomAlgoritm = createEvent<any>();\n\nexport const $currentAlgoritm = restore<AlgoritmName>(\n  selectAlgoritm,\n  \"bredth first search\"\n);\n\nexport const $visitedVertex = algoritmsDomain.store<Array<number>>([]);\n\nexport const $processedVertex = algoritmsDomain.store<ProcessedVertex>({\n  vertex: 0,\n  siblings: [],\n});\n\nexport const $algoritms = createStore<Algoritm[]>([\n  {\n    searchFunction: breadthFirstSearch,\n    name: \"bredth first search\",\n  },\n  {\n    searchFunction: depthFirstSearch,\n    name: \"depth first search\",\n  },\n  {\n    searchFunction: dijkstra,\n    name: \"dijkstra\",\n  },\n  {\n    searchFunction: aStar,\n    name: \"a-star\",\n  },\n  {\n    searchFunction: null,\n    name: \"свой алгоритм\",\n    modal: true,\n  },\n]);\n\nexport const $searchAlgoritm = combine(\n  $currentAlgoritm,\n  $algoritms,\n  (currentAlgoritm, algoritms) =>\n    algoritms.find((algoritm) => algoritm.name === currentAlgoritm)\n);\n\n$algoritms.on(addCustomAlgoritm, (state, foo) =>\n  state.map((algoritm) =>\n    algoritm.name === \"свой алгоритм\"\n      ? { ...algoritm, searchFunction: foo }\n      : algoritm\n  )\n);\n\n$visitedVertex.on(addVisitedVertex, (state, vertex) => [...state, vertex]);\n\n$processedVertex.on(addProcessedVertex, (_, processed) => processed);\n\nalgoritmsDomain.onCreateStore((store) => store.reset(clearCanvas, resetStore));\n\nselectAlgoritm.watch(() => setGameStatus(GameStatus.RESET));\n","import { GraphType, Graph } from \"graph\";\nimport { canVisitedVertex, restorePath } from \"./utils\";\nimport { AlgoritmController } from \"./controller\";\n\nexport function breadthFirstSearch(\n  startIndex: number,\n  endIndex: number,\n  graph: GraphType,\n  graphControll: Graph\n) {\n  let prevIndex = null;\n  let isWork = true;\n\n  const aInfo = new AlgoritmController(startIndex, endIndex);\n\n  const queue = [startIndex];\n  const visited = [startIndex];\n  const path: { [key: string]: number } = {};\n\n  while (isWork && queue.length > 0) {\n    const currentIndex = queue.shift();\n\n    if (currentIndex === undefined) {\n      isWork = false;\n      break;\n    }\n\n    aInfo.addVertex(\n      {\n        vertex: currentIndex,\n        siblings: graph[currentIndex].siblings,\n      },\n      prevIndex\n    );\n\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\n      const sibling = graph[currentIndex].siblings[i];\n\n      if (!sibling) {\n        isWork = false;\n        break;\n      }\n\n      const vertex = graphControll.getVertexByIndex(sibling.vertex);\n\n      if (\n        vertex &&\n        !visited.includes(sibling.vertex) &&\n        canVisitedVertex(vertex)\n      ) {\n        queue.push(sibling.vertex);\n        visited.push(sibling.vertex);\n        path[sibling.vertex] = currentIndex;\n\n        aInfo.increment();\n      }\n\n      if (sibling.vertex === endIndex) {\n        isWork = false;\n        break;\n      }\n    }\n\n    prevIndex = currentIndex;\n  }\n\n  const result = aInfo.getAlgotitmResult();\n  const restoredPath = restorePath(endIndex, startIndex, path);\n\n  return {\n    ...result,\n    path: restoredPath,\n  };\n}\n","import { GraphType, Graph } from \"graph\";\nimport { canVisitedVertex, restorePath } from \"./utils\";\nimport { AlgoritmController } from \"./controller\";\n\nexport function depthFirstSearch(\n  startIndex: number,\n  endIndex: number,\n  graph: GraphType,\n  graphControll: Graph\n) {\n  let prevIndex = null;\n  let isWork = true;\n\n  const aInfo = new AlgoritmController(startIndex, endIndex);\n\n  const stack = [startIndex];\n  const visited = [startIndex];\n  const path: { [key: string]: number } = {};\n\n  while (isWork && stack.length > 0) {\n    const currentIndex = stack.shift();\n\n    if (currentIndex === undefined) {\n      isWork = false;\n      break;\n    }\n\n    aInfo.addVertex(\n      {\n        vertex: currentIndex,\n        siblings: graph[currentIndex].siblings,\n      },\n      prevIndex\n    );\n\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\n      const sibling = graph[currentIndex].siblings[i];\n\n      if (!sibling) {\n        isWork = false;\n        break;\n      }\n\n      const vertex = graphControll.getVertexByIndex(sibling.vertex);\n\n      if (\n        vertex &&\n        !visited.includes(sibling.vertex) &&\n        canVisitedVertex(vertex)\n      ) {\n        stack.unshift(sibling.vertex);\n        visited.push(sibling.vertex);\n        path[sibling.vertex] = currentIndex;\n\n        aInfo.increment();\n      }\n\n      if (sibling.vertex === endIndex) {\n        isWork = false;\n        break;\n      }\n    }\n\n    prevIndex = currentIndex;\n  }\n\n  const result = aInfo.getAlgotitmResult();\n  const restoredPath = restorePath(endIndex, startIndex, path);\n\n  return {\n    ...result,\n    path: restoredPath,\n  };\n}\n","import PriorityQueue from \"fastpriorityqueue\";\nimport { GraphType, Graph } from \"graph\";\nimport { canVisitedVertex, restorePath, getVertexWeight } from \"../utils\";\nimport { AlgoritmController } from \"../controller\";\n\nexport function dijkstra(\n  startIndex: number,\n  endIndex: number,\n  graph: GraphType,\n  graphControll: Graph\n) {\n  let prevIndex = null;\n  let isWork = true;\n\n  const aInfo = new AlgoritmController(startIndex, endIndex);\n\n  const priorityQueue = new PriorityQueue<[number, number]>(\n    (a, b) => a[1] < b[1]\n  );\n\n  const visited = new Map([[startIndex, 0]]); // помещать сюда вершину из очереди\n\n  const path: { [key: string]: number } = {};\n\n  priorityQueue.add([startIndex, 0]);\n\n  while (isWork && !priorityQueue.isEmpty()) {\n    const [currentIndex] = priorityQueue.poll() || [];\n\n    if (currentIndex === undefined || currentIndex === endIndex) {\n      isWork = false;\n      break;\n    }\n\n    const currentVertex = graph[currentIndex];\n\n    aInfo.addVertex(\n      {\n        vertex: currentIndex,\n        siblings: graph[currentIndex].siblings,\n      },\n      prevIndex\n    );\n\n    // Получить текущую вершину из очереди и получить ее соседей\n\n    // пройтипо всем соседям текущей вершины, вычислить вес, указать предка\n    for (let i = 0; i < currentVertex.siblings.length; i++) {\n      // сосед, находящийся в обработке у текущей вершины\n      const sibling = currentVertex.siblings[i];\n\n      if (!sibling) {\n        isWork = false;\n        break;\n      }\n\n      const vertex = graphControll.getVertexByIndex(sibling.vertex);\n\n      if (vertex && canVisitedVertex(vertex)) {\n        const nextWeight =\n          (visited.get(currentIndex) || currentIndex) + getVertexWeight(vertex);\n\n        const weightIsLower =\n          typeof visited.get(sibling.vertex) === \"undefined\" ||\n          nextWeight < (visited.get(sibling.vertex) || Infinity);\n\n        // вычислить вес соседа, сравнив с прошлым весом, если веса прошлого нет, значит он бесконечность\n\n        // Положить ребро в просмотренные, с выполненными вычислениями\n        if (weightIsLower) {\n          priorityQueue.add([sibling.vertex, nextWeight]);\n\n          path[sibling.vertex] = currentIndex;\n          visited.set(sibling.vertex, nextWeight);\n\n          aInfo.increment();\n\n          if (endIndex === sibling.vertex) {\n            isWork = false;\n            break;\n          }\n        }\n      }\n    }\n\n    prevIndex = currentIndex;\n  }\n\n  const restoredPath = restorePath(endIndex, startIndex, path);\n  const result = aInfo.getAlgotitmResult();\n\n  return {\n    ...result,\n    path: restoredPath,\n  };\n}\n","import { sample, guard, restore, createDomain, combine } from \"effector\";\nimport { AlgoritmController, $searchAlgoritm } from \"algoritms\";\n\nimport { $graph, resetStore, clearCanvas, graphControll } from \"../../graph\";\nimport { filtredFps } from \"../utils\";\n\nexport enum GameStatus {\n  START = \"START\",\n  RESTART = \"RESTART\",\n  PAUSE = \"PAUSE\",\n  RESUME = \"RESUME\",\n  CLEAR = \"CLEAR\",\n  END_GAME = \"END_GAME\",\n  RESET = \"RESET\",\n}\n\nexport type Path = {\n  path: number[];\n  timeEnd: number;\n} & AlgoritmController;\n\nconst gameDomain = createDomain(\"game\");\n\nexport const setGameStatus = gameDomain.event<GameStatus>();\n\nexport const setTimer = gameDomain.event<number>();\n\nexport const $path = gameDomain\n  .store<Path | null>(null)\n  .reset(resetStore, clearCanvas);\n\nexport const $currentTimer = gameDomain\n  .store<number>(15)\n  .on(setTimer, filtredFps);\n\nexport const $gameState = restore<GameStatus>(\n  setGameStatus,\n  GameStatus.RESET\n).reset(resetStore);\n\nexport const startGame = guard<GameStatus>({\n  source: $gameState,\n  filter: $gameState.map((state) => state === GameStatus.START),\n});\n\nexport const resumeGame = guard<GameStatus>({\n  source: $gameState,\n  filter: $gameState.map((state) => state === GameStatus.RESUME),\n});\n\nexport const endGame = guard<GameStatus>({\n  source: $gameState,\n  filter: $gameState.map((state) => state === GameStatus.END_GAME),\n});\n\nguard({\n  source: $gameState,\n  filter: $gameState.map((state) => state === GameStatus.CLEAR),\n  target: resetStore,\n});\n\nguard({\n  source: $gameState,\n  filter: $gameState.map((state) => state === GameStatus.START),\n  target: clearCanvas,\n});\n\nsample({\n  source: combine({\n    graph: $graph,\n    algoritm: $searchAlgoritm,\n  }),\n  clock: startGame,\n  target: $path,\n  fn: ({ graph, algoritm }) => {\n    if (!algoritm) {\n      return {};\n    }\n\n    const [start, end] = graph.startEndPosition;\n\n    const time = window.performance.now();\n    const result = algoritm.searchFunction(\n      start,\n      end,\n      graph.graph,\n      graphControll\n    );\n    const timeEnd = window.performance.now() - time;\n\n    return {\n      ...result,\n      timeEnd: timeEnd.toFixed(4) || 0,\n    };\n  },\n});\n","import {\n  createEvent,\n  createStore,\n  combine,\n  sample,\n  createEffect,\n  forward,\n} from \"effector\";\nimport { $currentAlgoritm, AlgoritmName } from \"algoritms\";\nimport {\n  $graph,\n  GraphType,\n  BarrierItem,\n  $barriers,\n  $startEndPosition,\n} from \"graph\";\n\nimport { screenCanvas } from \"../utils\";\nimport { $path, endGame, Path } from \"./game\";\n\nexport const MAX_HISTORI_LENGTH = 10;\n\nexport type CompletedGameState = {\n  path: Path | null;\n  currentAlgoritm: AlgoritmName;\n  graph: {\n    graph: GraphType;\n    barrier: BarrierItem[];\n    barrierType: string;\n    startEndPosition: [number, number];\n    canMoveDiagonal: boolean;\n  };\n  image: string;\n};\n\nexport const setGameHistory = createEvent<CompletedGameState>();\nexport const recoveryGameHistory = createEvent<number>();\n\nexport const $gameHistory = createStore<CompletedGameState[]>([]);\n\nexport const recoveryGameHistoryFx = createEffect().use(\n  () => new Promise((rs) => setTimeout(rs, 0))\n);\n\nexport const $completedGameState = combine({\n  path: $path,\n  currentAlgoritm: $currentAlgoritm,\n  graph: $graph,\n  image: \"\",\n});\n\n$gameHistory.on(setGameHistory, (state, result) => {\n  if (state.length >= MAX_HISTORI_LENGTH) {\n    return [result, ...state.slice(1)];\n  }\n\n  return [result, ...state];\n});\n\nsample({\n  source: $completedGameState,\n  clock: recoveryGameHistoryFx.done,\n  target: setGameHistory.prepend((state: CompletedGameState) => ({\n    ...state,\n    image: screenCanvas(),\n  })),\n});\n\nconst findedGameEvent = sample({\n  source: $gameHistory,\n  clock: recoveryGameHistory,\n  fn: (history, id) => {\n    const findedGame = history.find((_, index) => index === id);\n\n    if (!findedGame) {\n      return null;\n    }\n\n    return findedGame;\n  },\n});\n\n$currentAlgoritm.on(findedGameEvent, (_, game) => game?.currentAlgoritm);\n$barriers.on(findedGameEvent, (_, game) => game?.graph.barrier);\n$startEndPosition.on(\n  findedGameEvent,\n  (_, game) => game?.graph.startEndPosition\n);\n$path.on(findedGameEvent, (_, game) => game?.path);\n\nforward({\n  from: endGame,\n  to: recoveryGameHistoryFx,\n});\n","import { getLocalSize, getIndexByPosition, BarrierType } from \"../config\";\nimport {\n  removeBarrierFromState,\n  setBarrierToState,\n  setEndToStore,\n  setStartToStore,\n  BarrierItem,\n  CombidenGraphType,\n} from \"../graph\";\n\nclass Barrier {\n  private barrierType: null | string;\n  protected context: null | CanvasRenderingContext2D;\n\n  constructor() {\n    this.barrierType = null;\n    this.context = null;\n    this.setBarrierToStateWithType = this.setBarrierToStateWithType.bind(this);\n    this.clear = this.clear.bind(this);\n  }\n\n  setBarrierToStateWithType(\n    event: MouseEvent,\n    state: { graph: CombidenGraphType }\n  ) {\n    const { w, h } = getLocalSize(event.clientX, event.clientY);\n    const index = getIndexByPosition([w, h]);\n    const { graph } = state;\n\n    if (!this.barrierType) {\n      this.barrierType = graph.graph[index].type;\n    }\n\n    switch (this.barrierType) {\n      case BarrierType.BARIER:\n        return removeBarrierFromState(event);\n      case BarrierType.WATER:\n        return removeBarrierFromState(event);\n      case BarrierType.SAND:\n        return removeBarrierFromState(event);\n      case BarrierType.START_POSITION:\n        return setStartToStore(index, state);\n      case BarrierType.END_POSITION:\n        return setEndToStore(index, state);\n      case BarrierType.EMPTY:\n        return setBarrierToState(event, state);\n    }\n  }\n\n  drowBarriersWithType(\n    barriers: Array<BarrierItem>,\n    context: CanvasRenderingContext2D\n  ) {\n    for (let i = 0; i < barriers.length; i++) {\n      if (barriers[i].barrierType === BarrierType.WATER) {\n        barriers[i].render(context, \"#86c7e6\");\n      }\n      if (barriers[i].barrierType === BarrierType.SAND) {\n        barriers[i].render(context, \"#fae8c2\");\n      }\n      if (barriers[i].barrierType === BarrierType.BARIER) {\n        barriers[i].render(context);\n      }\n    }\n  }\n\n  clear() {\n    this.barrierType = null;\n  }\n}\n\nexport const barrier = new Barrier();\n","import { CombidenGraphType } from \"graph\";\nimport { ProcessedVertex } from \"algoritms\";\nimport { clearALlCanvas } from \"../config\";\nimport { canvasControl } from \"../control-canvas\";\nimport { animatedVisitedVertex } from \"../game\";\nimport { barrier } from \"./render-barrier-with-type\";\nimport { drowStartEndPositions } from \"./drow-start-end-position\";\nimport { Grid } from \"./build-grid\";\n\ntype Render = {\n  visitedVertex: number[];\n  graph: CombidenGraphType;\n  processedVertex: ProcessedVertex;\n};\n\nexport function executeLogic(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D,\n  gridData: Grid\n) {\n  return function render({ graph, visitedVertex, processedVertex }: Render) {\n    clearALlCanvas(context, canvas);\n\n    canvasControl.setState({ graph });\n\n    animatedVisitedVertex.drawVertexWithLoop(processedVertex);\n\n    animatedVisitedVertex.drawVisitedVertexWithLoop(visitedVertex);\n\n    barrier.drowBarriersWithType(graph.barrier, context);\n\n    drowStartEndPositions(graph.startEndPosition, context);\n\n    gridData.applyStyles();\n    context.stroke(gridData.grid);\n  };\n}\n","import { colorSchema, getPositionByIndex, drawSquare } from \"../config\";\n\nexport function drowStartEndPositions(\n  startEndPosition: [number, number],\n  context: CanvasRenderingContext2D\n) {\n  for (let i = 0; i < startEndPosition.length; i++) {\n    const index = getPositionByIndex(startEndPosition[i]);\n\n    drawSquare({\n      position: index,\n      context,\n      color: colorSchema.startEndColor[i],\n    });\n  }\n}\n","import {\n  getPositionByIndex,\n  convertLocalPositionToGlobal,\n  cellSize,\n} from \"../config\";\n\ntype RenderPath = {\n  context: CanvasRenderingContext2D;\n  path: number[];\n  color?: string;\n};\n\nlet prev: null | [number, number] = null;\nexport function renderPath({\n  context,\n  path = [],\n  color = \"green\",\n}: RenderPath) {\n  for (let i = 0; i < path.length; i++) {\n    const position = getPositionByIndex(path[i]);\n    const [x, y] = convertLocalPositionToGlobal(position);\n\n    if (prev) {\n      context.beginPath();\n      context.strokeStyle = color;\n      context.lineWidth = 2;\n      context.moveTo(prev[0], prev[1]);\n      context.lineTo(x + cellSize / 2, y + cellSize / 2);\n      context.stroke();\n    }\n\n    prev = [x + cellSize / 2, y + cellSize / 2];\n  }\n\n  prev = null;\n}\n","import {\n  addProcessedVertex,\n  addVisitedVertex,\n  ProcessedVertex,\n} from \"../algoritms\";\nimport { renderPath } from \"../render\";\nimport { getPositionByIndex, drawSquare } from \"../config\";\nimport { setGameStatus, GameStatus, Path } from \"./models\";\n\nclass AnimatedVisitedVertex {\n  public context: null | CanvasRenderingContext2D;\n\n  constructor() {\n    this.context = null;\n  }\n\n  setVertex(\n    { animationCount, state }: { animationCount: number; state: Path | null },\n    context: CanvasRenderingContext2D\n  ) {\n    if (!this.context) {\n      this.context = context;\n    }\n\n    if (!state) {\n      return;\n    }\n\n    const { processing = [] } = state;\n\n    if (animationCount < processing.length) {\n      const processed = processing[animationCount];\n      const visited = processing[animationCount - 1];\n\n      addProcessedVertex(processed);\n\n      if (visited) {\n        addVisitedVertex(visited.vertex);\n      }\n    } else {\n      setGameStatus(GameStatus.END_GAME);\n\n      renderPath({\n        path: state.path,\n        context,\n      });\n    }\n  }\n\n  animatedVertexWithArray(\n    barriers: number[],\n    context: CanvasRenderingContext2D,\n    color = \"#000\"\n  ) {\n    for (let i = 0; i < barriers.length; i++) {\n      const [x, y] = getPositionByIndex(barriers[i]);\n\n      drawSquare({\n        position: [x, y],\n        context,\n        color,\n      });\n    }\n  }\n\n  animatedVertex(\n    barrier: number,\n    context: CanvasRenderingContext2D,\n    color = \"#000\"\n  ) {\n    if (barrier) {\n      const [x, y] = getPositionByIndex(barrier);\n\n      drawSquare({\n        position: [x, y],\n        context,\n        color,\n      });\n    }\n  }\n\n  drawVertexWithLoop(processedVertex: ProcessedVertex) {\n    if (!processedVertex.vertex || !this.context) {\n      return;\n    }\n\n    this.animatedVertexWithArray(\n      processedVertex.siblings,\n      this.context,\n      \"#d2ef99\"\n    );\n\n    this.animatedVertex(processedVertex.vertex, this.context, \"#f3fc23\");\n  }\n\n  drawVisitedVertexWithLoop(visitedVertex: number[]) {\n    if (this.context) {\n      this.animatedVertexWithArray(visitedVertex, this.context, \"#00bcd4\");\n    }\n  }\n}\n\nexport const animatedVisitedVertex = new AnimatedVisitedVertex();\n","import {\n  createEffect,\n  attach,\n  createStore,\n  sample,\n  guard,\n  combine,\n  merge,\n  Store,\n  Effect,\n} from \"effector\";\n\nimport { clearCanvas, resetStore } from \"../graph\";\nimport { checkGameStatus } from \"./utils\";\nimport {\n  GameStatus,\n  $gameState,\n  $currentTimer,\n  startGame,\n  resumeGame,\n  Path,\n} from \"./models\";\nimport { animatedVisitedVertex } from \"./animated-vertex\";\n\nconst tickFx = createEffect<number, number>().use(\n  (fps: number) => new Promise((rs) => setTimeout(rs, 1000 / (fps * 2)))\n);\n\nexport function createTick($state: Store<Path | null>, context: any) {\n  const $animationCount = createStore<number>(0).reset(clearCanvas, resetStore);\n\n  const tickWithParams = attach<\n    GameStatus,\n    Store<number>,\n    Effect<number, number>\n  >({\n    source: $currentTimer,\n    effect: tickFx,\n    mapParams: (_, fps) => fps,\n  });\n\n  const $combineState = combine(\n    $state,\n    $animationCount,\n    (state, animationCount) => ({ state, animationCount })\n  );\n\n  $animationCount.on(tickWithParams.done, (state) => state + 1);\n\n  sample($combineState, tickWithParams).watch((state) => {\n    animatedVisitedVertex.setVertex(state, context);\n  });\n\n  guard({\n    source: merge([startGame, resumeGame, tickWithParams.done]),\n    filter: $gameState.map((state) =>\n      checkGameStatus(state, [GameStatus.RESUME, GameStatus.START])\n    ),\n    target: tickWithParams,\n  });\n}\n","import { CombidenGraphType } from \"graph\";\nimport { getTargetIndex } from \"./config\";\nimport { $gameState, GameStatus, checkGameStatus } from \"./game\";\n\ntype EventListener = (\n  event?: MouseEvent,\n  state?: { [key: string]: any },\n  lastIndex?: number | null\n) => void;\n\ntype Listener = {\n  type: string;\n  eventListener: EventListener;\n};\n\nclass Controll {\n  private isMouseDown: boolean = false;\n  private isMouseMove: boolean = false;\n  private listeners: Array<Listener> = [];\n  private state: { graph: CombidenGraphType } | {} = {};\n  private lastIndex: null | number = null;\n  private disabledListeners: Array<Listener> = [];\n\n  init() {\n    $gameState.watch((state) => {\n      if (\n        checkGameStatus(state, [\n          GameStatus.START,\n          GameStatus.PAUSE,\n          GameStatus.RESUME,\n        ])\n      ) {\n        this.disabledListener();\n      } else {\n        this.includeListener();\n      }\n    });\n\n    return this;\n  }\n\n  registerClickEventToCanvas(canvas: HTMLCanvasElement) {\n    canvas.addEventListener(\"mousedown\", (event: MouseEvent) => {\n      this.listeners\n        .filter((userEvent) => userEvent.type === \"mousedown\")\n        .forEach((userEvent) => userEvent.eventListener());\n\n      this.isMouseDown = true;\n      this.isMouseMove = false;\n    });\n\n    canvas.addEventListener(\"mouseup\", (event: MouseEvent) => {\n      this.isMouseDown = false;\n      this.listeners\n        .filter((userEvent) => userEvent.type === \"mouseup\")\n        .forEach((userEvent) => userEvent.eventListener(event, this.state));\n    });\n\n    canvas.addEventListener(\"click\", (event: MouseEvent) => {\n      this.listeners\n        .filter((userEvent) => userEvent.type === \"click\")\n        .forEach((userEvent) => {\n          if (!this.isMouseMove) {\n            userEvent.eventListener(event, this.state);\n          }\n        });\n    });\n\n    canvas.addEventListener(\"mousemove\", (event: MouseEvent) => {\n      const index = getTargetIndex(event);\n\n      if (this.isMouseDown && index !== this.lastIndex) {\n        this.lastIndex = index;\n        this.isMouseMove = true;\n        this.listeners\n          .filter((userEvent) => userEvent.type === \"mousemove\")\n          .forEach((userEvent) =>\n            userEvent.eventListener(event, this.state, this.lastIndex)\n          );\n      }\n    });\n  }\n\n  disabledListener() {\n    this.clear();\n  }\n\n  includeListener() {\n    this.listeners = this.disabledListeners;\n  }\n\n  addMouseDownEvent<T extends EventListener>(eventListener: T) {\n    this.listeners.push({ type: \"mousedown\", eventListener });\n  }\n\n  addMouseUpEvent<T extends EventListener>(eventListener: T) {\n    this.listeners.push({ type: \"mouseup\", eventListener });\n  }\n\n  addMouseMoveEvent<T extends EventListener>(eventListener: T) {\n    this.listeners.push({ type: \"mousemove\", eventListener });\n  }\n\n  addMouseClickEvent<T extends EventListener>(eventListener: T) {\n    this.listeners.push({ type: \"click\", eventListener });\n  }\n\n  setState(state: Controll[\"state\"]) {\n    this.state = state;\n\n    return this;\n  }\n\n  clear() {\n    if (this.listeners.length > 0) {\n      this.disabledListeners = this.listeners;\n      this.isMouseDown = false;\n      this.isMouseMove = false;\n      this.listeners = [];\n      this.lastIndex = null;\n    }\n  }\n}\n\nexport const canvasControl = new Controll();\n","import { sample, merge, combine } from \"effector\";\nimport { pageHeight, pageWidth, getLocalSize, getGlobalSize } from \"./config\";\nimport { configureCanvas } from \"./config-canvas\";\nimport { canvasControl } from \"./control-canvas\";\nimport {\n  $graph,\n  resetStore,\n  clearCanvas,\n  removeBarrierFromState,\n} from \"./graph\";\nimport { executeLogic } from \"./render/render\";\nimport { $path, createTick } from \"./game\";\nimport { $visitedVertex, $processedVertex } from \"./algoritms\";\nimport { buildGrid } from \"./render/build-grid\";\nimport { barrier } from \"./render/render-barrier-with-type\";\n\nconst $state = combine({\n  visitedVertex: $visitedVertex,\n  graph: $graph,\n  processedVertex: $processedVertex,\n});\n\nexport function renderCanvas(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D\n) {\n  const localSize = getLocalSize(pageWidth, pageHeight);\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\n  const gridData = buildGrid(context);\n\n  addEventsToCanvas(canvas);\n  configureCanvas(canvas, globalSize);\n\n  const render = executeLogic(canvas, context, gridData);\n\n  $state.watch(render);\n\n  sample({\n    source: $state,\n    clock: merge([resetStore, clearCanvas]),\n  }).watch(render);\n\n  createTick($path, context);\n}\n\nfunction addEventsToCanvas(canvas: HTMLCanvasElement) {\n  canvasControl.init();\n  canvasControl.registerClickEventToCanvas(canvas);\n  canvasControl.addMouseMoveEvent(barrier.setBarrierToStateWithType);\n  canvasControl.addMouseClickEvent(removeBarrierFromState);\n  canvasControl.addMouseUpEvent(barrier.clear);\n}\n","import {\n  cellSize,\n  colorSchema,\n  borderSize,\n  getLocalSize,\n  getGlobalSize,\n  pageHeight,\n  pageWidth,\n} from \"../config\";\n\nexport type Grid = {\n  grid: Path2D;\n  applyStyles: () => void;\n};\n\nexport function buildGrid(context: CanvasRenderingContext2D) {\n  const grid = new Path2D();\n\n  const localSize = getLocalSize(pageWidth, pageHeight);\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\n\n  for (let i = 0; i <= localSize.w; i++) {\n    grid.moveTo(i * cellSize + borderSize, 0);\n    grid.lineTo(i * cellSize + borderSize, globalSize.h);\n  }\n\n  for (let i = 0; i <= localSize.h; i++) {\n    grid.moveTo(0, i * cellSize + borderSize);\n    grid.lineTo(globalSize.w, i * cellSize + borderSize);\n  }\n\n  return {\n    grid,\n    applyStyles: () => {\n      context.lineWidth = borderSize;\n      context.strokeStyle = colorSchema.borderColor;\n    },\n  };\n}\n","export function configureCanvas(\n  canvas: HTMLCanvasElement,\n  { w, h }: { w: number; h: number }\n) {\n  canvas.height = h;\n  canvas.width = w;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ReactModal from \"react-modal\";\n\nReactModal.setAppElement(\"#root\");\n\ntype Props = {\n  isOpen: boolean;\n  onRequestClose: () => void;\n  children: React.ReactNode;\n  width?: string;\n  height?: string;\n  className?: string;\n};\n\nexport function ModalWrapper({\n  isOpen,\n  onRequestClose,\n  children,\n  width,\n  className,\n  height,\n}: Props) {\n  return (\n    <div onMouseDown={(e) => e.stopPropagation()}>\n      <ReactModal\n        isOpen={isOpen}\n        closeTimeoutMS={200}\n        onRequestClose={onRequestClose}\n      >\n        <StyledRootWrapper onClick={onRequestClose}>\n          <StyledWrapper>\n            <StyledInner\n              className={className}\n              width={width}\n              height={height}\n              onClick={(e) => e.stopPropagation()}\n            >\n              {children}\n              <CloseModal onClick={onRequestClose} />\n            </StyledInner>\n          </StyledWrapper>\n        </StyledRootWrapper>\n      </ReactModal>\n    </div>\n  );\n}\n\nexport const StyledInner = styled.div<{ width?: string; height?: string }>`\n  background: #fff;\n  padding: 25px;\n  display: inline-block;\n  vertical-align: middle;\n  text-align: left;\n  margin: 10px;\n  width: ${({ width }) => (width ? `${width}` : \"auto\")};\n  height: ${({ height }) => (height ? `${height}` : \"height\")};\n  position: relative;\n  border-radius: 10px;\n  opacity: 0;\n  transition: all 0.3s;\n  transform: translateX(-100px);\n`;\n\nexport const StyledRootWrapper = styled.div`\n  overflow-x: hidden;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 1043;\n  position: fixed;\n  opacity: 0;\n  transition: all 0.3s;\n`;\n\nexport const StyledWrapper = styled.div`\n  position: absolute;\n  margin: 0;\n  padding: 0;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 1045;\n  outline: 0;\n  overflow: auto;\n  white-space: normal;\n  box-sizing: border-box;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #27262687;\n`;\n\nconst CloseModal = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  cursor: pointer;\n  width: 30px;\n  height: 30px;\n  &:after {\n    position: absolute;\n    content: \"\\\\2718\";\n    top: 50%;\n    right: 50%;\n    transform: translate(50%, -50%);\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Icon = styled.div`\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const Text = styled.p`\n  font-size: 14px;\n`;\n","import React from \"react\";\nimport { Button as DefaultButton, ButtonTypeMap } from \"@material-ui/core\";\n\ntype Props = {\n  icon?: React.ComponentType<{ size?: number }>;\n  type?: \"outline\";\n  children: React.ReactNode;\n  onClick: () => void;\n  iconSize?: number;\n} & Exclude<ButtonTypeMap[\"props\"], \"size\">;\n\nexport function Button({\n  icon: Icon,\n  type,\n  iconSize = 14,\n  children,\n  onClick,\n  variant = \"contained\",\n  color = \"default\",\n}: Props) {\n  return type === \"outline\" ? (\n    <DefaultButton onClick={onClick}>{children}</DefaultButton>\n  ) : (\n    <DefaultButton\n      style={{ fontSize: \"11px\" }}\n      onClick={onClick}\n      variant={variant}\n      color={color}\n      startIcon={Icon && <Icon size={iconSize} />}\n    >\n      {children}\n    </DefaultButton>\n  );\n}\n","import React from \"react\";\nimport { css } from \"styled-components\";\n\ntype TagsProps = {\n  as: React.ComponentType<any>;\n  to?: string;\n  children: React.ReactNode;\n  onClick?: React.Dispatch<void>;\n};\n\nexport type MixinsProps = {\n  alignContent?: string;\n  align?: string;\n  basis?: string;\n  grow?: string;\n  shrink?: string;\n  justify?: string;\n  order?: string;\n  padding?: string;\n  width?: string;\n  maxW?: string;\n};\n\nexport const WithTag = ({ as, children, to, onClick, ...props }: TagsProps) =>\n  React.createElement(as, { to, onClick, ...props }, children);\n\nWithTag.defaultProps = {\n  as: \"div\",\n};\n\nconst is = (value?: string) => typeof value !== \"undefined\";\nconst prop = (value?: string) => (is(value) ? value : \"initial\");\n\nexport const mixins = (props: MixinsProps) => css`\n  align-content: ${prop(props.alignContent)};\n  align-items: ${prop(props.align)};\n  flex-basis: ${prop(props.basis)};\n  flex-grow: ${prop(props.grow)};\n  flex-shrink: ${prop(props.shrink)};\n  justify-content: ${prop(props.justify)};\n  order: ${prop(props.order)};\n  padding: ${prop(props.padding)};\n  width: ${prop(props.width)};\n  max-width: ${prop(props.maxW)};\n`;\n","import styled from \"styled-components\";\nimport { mixins, MixinsProps } from \"../../lib/styled-components-layout\";\n\nexport const FlexContainer = styled.div<{ direction?: string } & MixinsProps>`\n  ${mixins as any}\n  display: flex;\n  flex-direction: ${({ direction }) => direction || \"row\"};\n  align-items: center;\n  flex-wrap: wrap;\n  padding: 15px 0px;\n`;\n\nexport const Left = styled.div`\n  width: 25%;\n  text-align: left;\n  padding-right: 15px;\n`;\n","import { Event } from \"effector\";\nimport React from \"react\";\nimport { FormControlLabel, Switch as DefaultSwitch } from \"@material-ui/core\";\nimport { FlexContainer, Left } from \"../templates\";\n\ntype Props = {\n  label: string;\n  name?: string;\n  onChange: Event<void>;\n  checked: boolean;\n};\n\nexport function Switch({ label, name = \"gilad\", ...rest }: Props) {\n  return (\n    <label style={{ cursor: \"pointer\" }}>\n      <FlexContainer>\n        <Left>\n          <FormControlLabel\n            label=\"\"\n            control={<DefaultSwitch {...(rest as any)} name={name} />}\n          />\n        </Left>\n        <h3>{label}</h3>\n      </FlexContainer>\n    </label>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { FaHistory } from \"react-icons/fa\";\nimport styled, { css } from \"styled-components\";\nimport { CompletedGameState, recoveryGameHistory } from \"game\";\n\nimport { Icon } from \"../atoms\";\nimport { ModalWrapper } from \"./modal-wrapper\";\n\nexport function History({ history }: { history: CompletedGameState[] }) {\n  const [isOpen, setOpen] = React.useState(false);\n\n  const handleClickItem = useCallback((id: number) => {\n    recoveryGameHistory(id);\n    setOpen(false);\n  }, []);\n\n  return (\n    <HistoryIconWrapper historyCount={history.length}>\n      <Icon onClick={() => setOpen(true)}>\n        <FaHistory color=\"#fff\" size=\"35\" />\n      </Icon>\n\n      <ModalWrapper\n        width=\"80%\"\n        height=\"80%\"\n        isOpen={isOpen}\n        onRequestClose={() => setOpen(false)}\n      >\n        {!history.length ? (\n          <h1>У вас нет завершенных игр</h1>\n        ) : (\n          <div>\n            <h1>Ваши игры</h1>\n            <>\n              {history.map((item, index) => (\n                <HistoryItem\n                  active={false}\n                  onClick={() => handleClickItem(index)}\n                  key={index}\n                >\n                  <img\n                    src={item.image}\n                    width={window.innerWidth / 2}\n                    height={window.innerHeight / 2}\n                  />\n                  <div>\n                    <p>Алгоритм: {item.currentAlgoritm}</p>\n                    <p>Длина пути: {item?.path?.path.length || 0}</p>\n                    <p>Время поиска: {item?.path?.timeEnd || 0} ms</p>\n                    <p>\n                      Старт-конец (вершины): {item?.path?.startIndex} -{\" \"}\n                      {item?.path?.endIndex}\n                    </p>\n                  </div>\n                </HistoryItem>\n              ))}\n            </>\n          </div>\n        )}\n      </ModalWrapper>\n    </HistoryIconWrapper>\n  );\n}\n\nconst HistoryItem = styled.div<{ active: boolean }>`\n  display: flex;\n  padding: 20px;\n  border: 1px solid transparent;\n  cursor: pointer;\n  margin-bottom: 10px;\n  transition: all 0.3s;\n  ${({ active }) =>\n    active &&\n    css`\n      border: 1px solid #00bcd4;\n    `}\n  &:hover {\n    border: 1px solid #00bcd4;\n  }\n\n  & > div {\n    margin-left: 25px;\n  }\n`;\n\nconst HistoryIconWrapper = styled.div<{ historyCount: number }>`\n  position: relative;\n  &:after {\n    ${({ historyCount }) =>\n      historyCount &&\n      css`\n        position: absolute;\n        content: \"${historyCount}\";\n        background: red;\n        border-radius: 50%;\n        padding: 3px;\n        font-size: 12px;\n        text-align: center;\n        top: -10px;\n        right: -15px;\n        height: 13px;\n        width: 13px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      `}\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FiInfo } from \"react-icons/fi\";\n\nimport { Icon, Text } from \"../atoms\";\nimport { FlexContainer } from \"../templates\";\nimport { ModalWrapper } from \"./modal-wrapper\";\n\nexport function Info() {\n  const [isOpen, setOpen] = React.useState(false);\n\n  return (\n    <>\n      <Icon onClick={() => setOpen(true)}>\n        <FiInfo color=\"#fff\" size=\"35\" />\n      </Icon>\n\n      <InfoModal isOpen={isOpen} setOpen={setOpen} />\n    </>\n  );\n}\n\nfunction InfoModal({\n  isOpen,\n  setOpen,\n}: {\n  isOpen: boolean;\n  setOpen: (param: boolean) => void;\n}) {\n  return (\n    <ModalWrapper\n      width=\"500px\"\n      isOpen={isOpen}\n      onRequestClose={() => setOpen(false)}\n    >\n      <FlexContainer>\n        <ColorBlock color=\"green\" />\n        <Text>- Точка старта алгоритма</Text>\n      </FlexContainer>\n      <FlexContainer>\n        <ColorBlock color=\"red\" />\n        <Text>- Точка завершения алгоритма</Text>\n      </FlexContainer>\n      <FlexContainer>\n        <ColorBlock color=\"#00bcd4\" />\n        <Text>- Пройденная вершина</Text>\n      </FlexContainer>\n      <FlexContainer>\n        <ColorBlock color=\"#f3fc23\" />\n        <Text>- Вершина, находящаяся в обработке</Text>\n      </FlexContainer>\n      <FlexContainer>\n        <ColorBlock color=\"#d2ef99\" />\n        <Text>- Соседи текущей вершины</Text>\n      </FlexContainer>\n      <FlexContainer>\n        <ColorBlock color=\"#bbbbbb\" />\n        <Text>- Цвет не проходимого барьера</Text>\n      </FlexContainer>\n    </ModalWrapper>\n  );\n}\n\nconst ColorBlock = styled.div`\n  width: 35px;\n  height: 35px;\n  background: ${({ color }) => color};\n  margin-right: 15px;\n`;\n","import React from \"react\";\nimport { FiBook } from \"react-icons/fi\";\n\nimport { Icon } from \"../atoms\";\nimport { ModalWrapper } from \"./modal-wrapper\";\n\nexport function AboutAlgoritms() {\n  const [isOpen, setOpen] = React.useState(false);\n\n  return (\n    <>\n      <Icon onClick={() => setOpen(true)}>\n        <FiBook color=\"#fff\" size=\"35\" />\n      </Icon>\n      <ModalWrapper\n        width=\"700px\"\n        isOpen={isOpen}\n        onRequestClose={() => setOpen(false)}\n      >\n        <h2>Информация об алгоритмах</h2>\n        <ul>\n          <li>\n            <a href=\"qwd\" target=\"__blank\">\n              Поиск в ширину\n            </a>\n          </li>\n          <li>\n            <a href=\"qwd\" target=\"__blank\">\n              Поиск в глубину\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://github.com/bogdanq/algorithms/blob/master/src/algoritms/dijkstra/dijkstra.md\"\n              target=\"__blank\"\n            >\n              Алгоритм dijkstra\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://github.com/bogdanq/algorithms/blob/master/src/algoritms/a-start/a-start.md\"\n              target=\"__blank\"\n            >\n              Алгоритм a-star\n            </a>\n          </li>\n        </ul>\n      </ModalWrapper>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useStore } from \"effector-react\";\nimport { Select as DefaultSelect, MenuItem } from \"@material-ui/core\";\nimport { BarrierType } from \"../../../config\";\nimport { setBarrierType, $barrierType } from \"../../../graph\";\n\nexport function SelectBarrierType() {\n  const barrierType = useStore($barrierType);\n\n  const handleChange = React.useCallback((event) => {\n    setBarrierType(event.target.value);\n  }, []);\n\n  return (\n    <DefaultSelect\n      style={{ width: \"100%\" }}\n      value={barrierType}\n      onChange={handleChange}\n    >\n      <MenuItem value={BarrierType.BARIER}>Не проходимый барьер</MenuItem>\n      <MenuItem value={BarrierType.WATER}>Вода (вес 10)</MenuItem>\n      <MenuItem value={BarrierType.SAND}>Песок (вес 3)</MenuItem>\n    </DefaultSelect>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Algoritm, AlgoritmName } from \"../../../algoritms\";\n\ntype Props = {\n  handleChangeAlgoritm: (params: Algoritm) => void;\n  algoritms: Algoritm[];\n  isOpenAlgoritmList: boolean;\n  currentAlgoritm: AlgoritmName;\n};\n\nexport function AlgoritmsList({\n  handleChangeAlgoritm,\n  algoritms,\n  isOpenAlgoritmList,\n  currentAlgoritm,\n}: Props) {\n  return (\n    <UlWithAnimation isOpenAlgoritmList={isOpenAlgoritmList}>\n      {algoritms.map((algoritm) => (\n        <Li\n          isActive={currentAlgoritm === algoritm.name}\n          onClick={() => {\n            handleChangeAlgoritm(algoritm);\n          }}\n          key={algoritm.name}\n        >\n          {algoritm.name}\n        </Li>\n      ))}\n    </UlWithAnimation>\n  );\n}\n\nconst UlWithAnimation = styled.ul<{ isOpenAlgoritmList: boolean }>`\n  overflow: hidden;\n  transition: all 0.2s;\n  height: ${({ isOpenAlgoritmList }) => (isOpenAlgoritmList ? \"250px\" : 0)};\n`;\n\nconst Li = styled.li<{ isActive: boolean }>`\n  color: ${({ isActive }) => (isActive ? \"#fff\" : \"#d1d1d1\")};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Draggable from \"react-draggable\";\nimport { useStore } from \"effector-react\";\nimport { $gameHistory } from \"game\";\n\nimport { History, Info, AboutAlgoritms } from \"../molecules\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  position: fixed;\n  padding: 15px 10px;\n  background-color: rgba(0, 0, 0, 0.6);\n  color: #fff;\n  border-radius: 8px;\n  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.5);\n  cursor: default;\n  left: 20px;\n  bottom: 20px;\n\n  &:hover {\n    cursor: move;\n  }\n\n  & > div {\n    margin: 0 10px;\n    display: flex;\n    justify-content: center;\n  }\n`;\n\nexport function InfoDraggable() {\n  const gameHistory = useStore($gameHistory);\n\n  return (\n    <Draggable>\n      <Wrapper>\n        <Info />\n        <History history={gameHistory} />\n        <AboutAlgoritms />\n      </Wrapper>\n    </Draggable>\n  );\n}\n","import React from \"react\";\nimport { useStore } from \"effector-react\";\nimport { GrResume, GrClear, GrPlay, GrPause } from \"react-icons/gr\";\nimport {\n  GameStatus,\n  setGameStatus,\n  $gameState,\n  checkGameStatus,\n} from \"../../../game\";\nimport { Button } from \"../atoms\";\nimport { FlexContainer } from \"../templates\";\n\nexport function GameControllButtons() {\n  const gameState = useStore($gameState);\n\n  return (\n    <FlexContainer justify=\"space-around\">\n      {checkGameStatus(gameState, [\n        GameStatus.START,\n        GameStatus.PAUSE,\n        GameStatus.RESUME,\n      ]) ? (\n        !checkGameStatus(gameState, [GameStatus.PAUSE]) ? (\n          <Button\n            onClick={() => setGameStatus(GameStatus.PAUSE)}\n            icon={GrPause}\n          >\n            Пауза\n          </Button>\n        ) : (\n          <Button\n            onClick={() => setGameStatus(GameStatus.RESUME)}\n            icon={GrResume}\n          >\n            Продолжить\n          </Button>\n        )\n      ) : (\n        <Button onClick={() => setGameStatus(GameStatus.START)} icon={GrPlay}>\n          Старт\n        </Button>\n      )}\n      <Button onClick={() => setGameStatus(GameStatus.CLEAR)} icon={GrClear}>\n        Очистить\n      </Button>\n    </FlexContainer>\n  );\n}\n","import React from \"react\";\nimport { sample, createStore } from \"effector\";\nimport { useStore } from \"effector-react\";\nimport { $path, endGame, Path } from \"../../../game\";\n\nconst $graphState = createStore<Path | null>(null);\n\nsample({\n  source: $path,\n  clock: endGame,\n  target: $graphState,\n});\n\nexport function AlgotitmResult() {\n  const graphState = useStore($graphState);\n\n  return (\n    <>\n      <h3 className=\"select-bar_info\">\n        Количество итераций: <span>{graphState?.count || 0}</span>\n      </h3>\n      <h3 className=\"select-bar_info\">\n        Время прохождения:\n        <span> {graphState?.timeEnd} ms</span>\n      </h3>\n      <h3 className=\"select-bar_info\">\n        Длина пути: <span>{graphState?.path?.length || 0}</span>\n      </h3>\n    </>\n  );\n}\n","export const code = `\n/*\nЧто бы работала визуализация, функция должна следовать общему api\n\n  type youAlgoritmFunction = (\n    startIndex: number,\n    endIndex: number,\n    graph: { [key: string]: { type: BarrierType , siblings: Array<number> } },\n    graphControll: Graph,\n  ) => {\n    path: Array<number>,\n    ...getAlgotitmResult\n  }\n\nМетод нужен, что бы каждую итерацию алгоритма сохранять его данные\n\n  type AlgoritmController = {\n    increment: () => void;\n    getAlgotitmResult: () => AlgoritmController;\n    addVertex: (\n      processing: Array<{vertex: number, siblings: number[]}>,\n      visited: number\n    ) => void;\n    count: number;\n    processing: Array<{vertex: number, siblings: number[]}>;\n    visited: number | null[];\n    startIndex: number;\n    endIndex: number;\n  }\n\n  const algoritmController = new AlgoritmController(startIndex: number, endIndex: number)\n\n  enum BarrierType {\n    START_POSITION = \"START_POSITION\",\n    END_POSITION = \"END_POSITION\",\n    BARIER = \"BARIER\",\n    EMPTY = \"EMPTY\",\n    VISITED = \"VISITED\",\n  };\n\nФункция restorePath восстановить путь, по переданному обьекту.\nСодержит путь от предыдущего к следующей вершине\n\n  type RestorePath = (\n    endIndex: number,\n    startIndex: number,\n    parent: { [key: string]: number }\n  ) => Array<number>\n\nCanVisitedVertex проверяет, можно ли прайти на указанную вершину\n\n  type CanVisitedVertex = (\n    vertex: { type: BarrierType , siblings: Array<number> }\n  ) => boolean\n*/\n\nconst { AlgoritmController, canVisitedVertex, restorePath } = utils\n\nfunction customAlgoritm(\n  startIndex,\n  endIndex,\n  graph,\n  graphControll,\n) {\n  let prevIndex = null;\n  let isWork = true;\n\n  const aInfo = new AlgoritmController(startIndex, endIndex);\n\n  const queue = [startIndex];\n  const visited = [startIndex];\n  const path = {};\n\n  while (isWork && queue.length > 0) {\n    const currentIndex = queue.shift();\n\n    if (currentIndex === undefined) {\n      isWork = false;\n      break;\n    }\n\n    aInfo.addVertex(\n      {\n        vertex: currentIndex,\n        siblings: graph[currentIndex].siblings,\n      },\n      prevIndex\n    );\n\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\n      const sibling = graph[currentIndex].siblings[i];\n\n      if (!sibling) {\n        isWork = false;\n        break;\n      }\n\n      const vertex = graphControll.getVertexByIndex(sibling.vertex);\n\n      if (\n        vertex &&\n        !visited.includes(sibling.vertex) &&\n        canVisitedVertex(vertex)\n      ) {\n        queue.push(sibling.vertex);\n        visited.push(sibling.vertex);\n        path[sibling.vertex] = currentIndex;\n\n        aInfo.increment();\n      }\n\n      if (sibling.vertex === endIndex) {\n        isWork = false;\n        break;\n      }\n    }\n\n    prevIndex = currentIndex;\n  }\n\n  const result = aInfo.getAlgotitmResult();\n  const restoredPath = restorePath(endIndex, startIndex, path);\n\n  return {\n    ...result,\n    path: restoredPath,\n  };\n}\n`;\n","import { createEvent, restore } from \"effector\";\n\nimport { code } from \"./code-string\";\n\nexport const handleChangeCode = createEvent<string>();\nexport const $code = restore(handleChangeCode, code);\n\nexport const $trimmedEditorCode = $code.map((it) => it.trim());\n","import React, { useCallback } from \"react\";\nimport { useStore } from \"effector-react\";\nimport AceEditor from \"react-ace\";\n\nimport {\n  addCustomAlgoritm,\n  AlgoritmController,\n  restorePath,\n  canVisitedVertex,\n} from \"../../../../algoritms\";\n\nimport { Button } from \"../../atoms\";\n\nimport { $trimmedEditorCode, handleChangeCode } from \"./model\";\n\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\n\nexport function CodeArea({ onRequestClose }: { onRequestClose: () => void }) {\n  const code = useStore($trimmedEditorCode);\n\n  const handleChangeAlgoritm = useCallback(() => {\n    try {\n      const customFunction = new Function(\n        \"utils\",\n        code.replace(\"function\", \"return function\")\n      )({ AlgoritmController, canVisitedVertex, restorePath });\n\n      addCustomAlgoritm(customFunction);\n    } catch (e) {\n      alert(e);\n    } finally {\n      onRequestClose();\n    }\n  }, [onRequestClose, code]);\n\n  return (\n    <>\n      <AceEditor\n        value={code}\n        onChange={(nextCode) => {\n          handleChangeCode(nextCode);\n        }}\n        style={{\n          width: \"100%\",\n          marginBottom: 30,\n        }}\n        mode=\"javascript\"\n        theme=\"tomorrow\"\n        name=\"UNIQUE_ID_OF_DIV\"\n        editorProps={{ $blockScrolling: true }}\n        fontSize={14}\n        showPrintMargin\n        showGutter\n        highlightActiveLine\n        setOptions={{\n          enableBasicAutocompletion: true,\n          enableLiveAutocompletion: false,\n          enableSnippets: true,\n          showLineNumbers: true,\n          tabSize: 2,\n        }}\n      />\n      <Button onClick={handleChangeAlgoritm}>Сохранить</Button>\n    </>\n  );\n}\n","import React from \"react\";\nimport { ModalWrapper } from \"gui/ui/molecules\";\nimport { CodeArea } from \"./code-area\";\n\nexport const CodeAreaModal = ({\n  isOpen,\n  setOpen,\n}: {\n  isOpen: boolean;\n  setOpen: (param: boolean) => void;\n}) => {\n  return (\n    <ModalWrapper\n      width=\"1100px\"\n      isOpen={isOpen}\n      onRequestClose={() => setOpen(false)}\n    >\n      <CodeArea onRequestClose={() => setOpen(false)} />\n    </ModalWrapper>\n  );\n};\n","import React, { useCallback, useReducer, useState } from \"react\";\nimport { useStore } from \"effector-react\";\nimport { combine } from \"effector\";\n\nimport {\n  $currentAlgoritm,\n  selectAlgoritm,\n  Algoritm,\n  $algoritms,\n} from \"../../../algoritms\";\n\nimport { AlgoritmsList } from \"../molecules\";\nimport { CodeAreaModal } from \"./code-area\";\n\nconst $state = combine({\n  currentAlgoritm: $currentAlgoritm,\n  algoritms: $algoritms,\n});\n\nexport function AlgoritmsBlock() {\n  const [isOpenCodeArea, setOpenCodeArea] = useState(false);\n  const [isOpenAlgoritmList, toggleAlgoritmList] = useReducer(\n    (state) => !state,\n    false\n  );\n\n  const { currentAlgoritm, algoritms } = useStore($state);\n\n  const handleChangeAlgoritm = useCallback((algoritm: Algoritm) => {\n    selectAlgoritm(algoritm.name);\n    toggleAlgoritmList();\n\n    if (algoritm.modal) {\n      setOpenCodeArea(true);\n    }\n  }, []);\n\n  return (\n    <>\n      <h2>Выберите алгоритм:</h2>\n      <ul>\n        <li className=\"isActive\" onClick={toggleAlgoritmList}>\n          {currentAlgoritm}\n        </li>\n      </ul>\n\n      <AlgoritmsList\n        currentAlgoritm={currentAlgoritm}\n        isOpenAlgoritmList={isOpenAlgoritmList}\n        algoritms={algoritms}\n        handleChangeAlgoritm={handleChangeAlgoritm}\n      />\n\n      <CodeAreaModal isOpen={isOpenCodeArea} setOpen={setOpenCodeArea} />\n    </>\n  );\n}\n","import React from \"react\";\nimport DraggableDefault from \"react-draggable\";\nimport { combine } from \"effector\";\nimport { useStore } from \"effector-react\";\nimport { TextField } from \"@material-ui/core\";\nimport { setTimer, $currentTimer } from \"../../../game\";\nimport { $canMoveDiagonal, changeDirection } from \"../../../graph\";\nimport { SelectBarrierType } from \"../molecules\";\nimport { Left, FlexContainer } from \"../templates\";\nimport { Switch } from \"../atoms\";\nimport { GameControllButtons } from \"./game-controll-buttons\";\nimport { AlgotitmResult } from \"./algoritm-result\";\nimport { AlgoritmsBlock } from \"./algoritms\";\n\nconst $state = combine({\n  currentTimer: $currentTimer,\n  canMoveDiagonal: $canMoveDiagonal,\n});\n\nexport function RightSideBar() {\n  const { currentTimer, canMoveDiagonal } = useStore($state);\n\n  return (\n    <DraggableDefault>\n      <div className=\"select-bar\">\n        <h2 className=\"select-bar_title\">Информация:</h2>\n        <AlgotitmResult />\n        <AlgoritmsBlock />\n        <GameControllButtons />\n        <div className=\"info-wrapper\" style={{ borderTop: \"2px solid #fff\" }}>\n          <FlexContainer>\n            <Left>\n              <TextField\n                type=\"number\"\n                value={currentTimer}\n                onChange={({ target }) => {\n                  setTimer(parseInt(target.value));\n                }}\n              />\n            </Left>\n            <h3 className=\"select-bar_info\">Скорость</h3>\n          </FlexContainer>\n\n          <Switch\n            checked={canMoveDiagonal}\n            onChange={changeDirection}\n            label=\"Проход по диагонали\"\n          />\n          <SelectBarrierType />\n        </div>\n      </div>\n    </DraggableDefault>\n  );\n}\n","import React, { useLayoutEffect } from \"react\";\nimport { renderCanvas } from \"./canvas\";\nimport { InfoDraggable } from \"./gui/ui/organisms/info-block\";\nimport { RightSideBar } from \"./gui/ui/organisms/right-side-bar\";\n\nimport \"./styles.css\";\n\nexport default function App() {\n  useLayoutEffect(() => {\n    const canvas = document.querySelector(\"canvas\");\n\n    if (canvas) {\n      const context = canvas.getContext(\"2d\");\n\n      if (context) {\n        renderCanvas(canvas, context);\n      }\n    }\n  }, []);\n\n  return (\n    <>\n      <RightSideBar />\n      <InfoDraggable />\n    </>\n  );\n}\n","import { createGlobalStyle, css } from \"styled-components\";\nimport {\n  StyledRootWrapper,\n  StyledInner,\n} from \"./gui/ui/molecules/modal-wrapper\";\n\nconst globalCss = css`\n  .ReactModal__Body--open {\n    overflow: hidden;\n  }\n\n  .ReactModal__Content--after-open {\n    border: none !important;\n    background: transparent !important;\n    ${StyledInner} {\n      overflow: hidden;\n      opacity: 1;\n      transform: translateX(0);\n      overflow-y: auto;\n    }\n  }\n  .ReactModal__Content--before-close {\n    ${StyledInner} {\n      transform: translateX(100px);\n      opacity: 0;\n    }\n  }\n  .ReactModal__Overlay--after-open {\n    background-color: transparent !important;\n    ${StyledRootWrapper} {\n      opacity: 1;\n    }\n  }\n  .ReactModal__Overlay--before-close {\n    ${StyledRootWrapper} {\n      opacity: 0;\n    }\n  }\n\n  .MuiInputBase-input {\n    color: #fff;\n  }\n\n  .MuiInput-underline:before,\n  .MuiInput-underline:after {\n    border-bottom: 1px solid #fff;\n  }\n`;\nexport const GlobalModalStyles = createGlobalStyle`${globalCss}`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { GlobalModalStyles } from \"./global-css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <>\n    <App />\n    <GlobalModalStyles />\n  </>,\n  rootElement\n);\n"],"sourceRoot":""}