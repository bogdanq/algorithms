{"version":3,"sources":["config.js","game/animations.js","game/barrier.js","graph/controller.js","graph/utils.js","graph/model.js","algoritms/utils.js","algoritms/controller.js","algoritms/bred-first-search.js","algoritms/depth-first-search.js","algoritms/model.js","game/model.js","game/utils.js","game/loop.js","canvas.js","control-canvas.js","config-canvas.js","App.js","index.js"],"names":["cellSize","pageWidth","window","innerWidth","pageHeight","innerHeight","borderSize","colorSchema","borderColor","blockColor","startEndColor","ceilType","START_POSITION","END_POSITION","BARIER","EMPTY","VISITED","getLocalSize","w","h","Math","floor","getGlobalSize","convertLocalPositionToGlobal","_ref","_ref2","Object","slicedToArray","x","y","drawSquare","_ref3","_ref3$color","color","position","context","width","_convertLocalPosition","_convertLocalPosition2","size","fillStyle","fillRect","getIndexByPosition","_ref4","_ref5","getPositionByIndex","index","drawSquareWithAnimation","params","animateId","_params$position","_params$scale","scale","requestAnimationFrame","objectSpread2","cancelAnimationFrame","drawMarkerWithAnimation","_params$width","_ref6","_ref6$color","_convertLocalPosition3","_convertLocalPosition4","strokeStyle","beginPath","moveTo","lineTo","stroke","drawMark","Barier","classCallCheck","this","canDrawe","canRemove","createClass","key","value","graphControll","Graph","graph","cellCount","lastIndex","clear","type","siblings","getSiblings","filter","item","left","getLeftSibling","top","getTopSibling","right","getRightSibling","down","getDownSibling","getTopLeftDiagonal","getTopRightDiagonal","getBotRightDiagonal","getBotLeftDiagonal","bot","_getLocalSize","setBarrierToGraph","barriers","forEach","barrier","updateGraph","getIndex","setStartPositionToGraph","startIndex","setEndPositionToGraph","endIndex","graphDomain","createDomain","resetStore","event","clearCanvas","setBarrier","removeBarrierItem","triggerStartPosition","triggerEndPosition","$startEndPosition","store","$barriers","onCreateStore","reset","removedBarrier","guard","source","sample","clock","fn","state","find","Boolean","watch","remove","on","concat","toConsumableArray","removed","$graph","combine","startEndPosition","map","_state$startEndPositi","start","end","createGraph","canVisitedVertex","vertex","restorePath","parent","path","target","unshift","length","push","removeDoubleVertex","reduce","acc","row","el","some","accRow","includes","AlgoritmController","count","processing","visited","breadthFirstSearch","aInfo","isWork","queue","currentIndex","shift","addToVisited","i","next","getVertexByIndex","increment","addToProcessing","result","getAlgotitmResult","depthFirstSearch","stack","algoritmsDomain","selectAlgoritm","createEvent","$currentAlgoritm","restore","$algoritms","createStore","searchFunction","name","$searchAlgoritm","currentAlgoritm","algoritms","algoritm","setGameStatus","gameStatus","END_GAME","START","RESTART","PAUSE","RESUME","CLEAR","gameDomain","setTimer","$path","$currentTimer","$gameState","startGame","endGame","checkGameStatus","_len","arguments","status","Array","_key","renderVisitedVertex","_getPositionByIndex","_getPositionByIndex2","_graph$startEndPositi","time","performance","now","timeEnd","GameLoop","_this","gameState","getState","fps","clearTimeout","setInterval","getFps","_ref2$path","_ref2$color","prev","lineWidth","renderPath","gameLoop","canvasControl","Controll","isMouseDown","isMouseMove","listeners","disabledListeners","disabledListener","includeListener","canvas","_this2","addEventListener","userEvent","eventListener","_getLocalSize3","clientX","clientY","getTargetIndex","init","$algoritState","renderCeil","renderForMove","renderForClick","renderLogic","_getLocalSize2","findIndex","renderStart","renderEnd","document","getElementById","getContext","localSize","globalSize","gridData","grid","Path2D","applyStyles","buildGrid","render","clearRect","height","clearALlCanvas","setState","renderActionsCeil","renderBarrier","configureCanvas","registerClickEventToCanvas","addMouseMoveEvent","e","s","addMouseUpEvent","addMouseClickEvent","merge","canDrowAnimated","removeAnimation","renderCanvas","$store","App","_store$timeEnd","_store$path","useStore","currentTimer","react_default","a","createElement","className","react_draggable_default","toFixed","onClick","Fragment","max","min","maxLength","onChange","parseInt","__webpack_require__","d","__webpack_exports__","utils_canVisitedVertex","barrier_Barier","loop_GameLoop","rootElement","ReactDOM"],"mappings":"oOAAaA,EAAW,GACXC,EAAYC,OAAOC,WACnBC,EAAaF,OAAOG,YACpBC,EAAa,GAKbC,EAAc,CACzBC,YAAa,OACbC,WAAY,UACZC,cAAe,CAAC,QAAS,QAGdC,EAAW,CACtBC,eAAgB,iBAChBC,aAAc,eACdC,OAAQ,SACRC,MAAO,QACPC,QAAS,WAGJ,SAASC,EAAaC,EAAGC,GAC9B,MAAO,CACLD,EAAGE,KAAKC,MAAMH,EAAIlB,GAClBmB,EAAGC,KAAKC,MAAMF,EAAInB,IAIf,SAASsB,EAAcJ,EAAGC,GAC/B,MAAO,CACLD,EAAGE,KAAKC,MAAMH,EAAIlB,GAClBmB,EAAGC,KAAKC,MAAMF,EAAInB,IAIf,SAASuB,EAATC,GAA8C,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,GAAPI,EAAOH,EAAA,GAAJI,EAAIJ,EAAA,GACnD,MAAO,CAACG,EAAI5B,EAAU6B,EAAI7B,GAGrB,SAAS8B,EAATC,GAKJ,IAAAC,EAAAD,EAJDE,aAIC,IAAAD,EAJO,qBAIPA,EAHDE,EAGCH,EAHDG,SACAC,EAECJ,EAFDI,QACAC,EACCL,EADDK,MACCC,EACcd,EAA6BW,GAD3CI,EAAAZ,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GACMT,EADNU,EAAA,GACST,EADTS,EAAA,GAEKC,EAAOH,GAASpC,EAAwB,EAAbM,EAEjC6B,EAAQK,UAAYP,EACpBE,EAAQM,SAASb,EAAiB,EAAbtB,EAAgBuB,EAAiB,EAAbvB,EAAgBiC,EAAMA,GAO1D,SAASG,EAATC,GAAoC,IAAAC,EAAAlB,OAAAC,EAAA,EAAAD,CAAAiB,EAAA,GAAPf,EAAOgB,EAAA,GAGzC,OAHyCA,EAAA,GAC3B3B,EAAahB,EAAWG,GAA9Bc,EAEOU,EAGV,SAASiB,EAAmBC,GAAO,IAChC5B,EAAMD,EAAahB,EAAWG,GAA9Bc,EACFW,EAAIT,KAAKC,MAAMyB,EAAQ5B,GAG7B,MAAO,CAFG4B,EAAQjB,EAAIX,EAEXW,4BClEN,SAASkB,EAAwBC,GACtC,IAAIC,EAD0CC,EAAAxB,OAAAC,EAAA,EAAAD,CAM1CsB,EAHFd,SAH4C,GAGjCN,EAHiCsB,EAAA,GAG9BrB,EAH8BqB,EAAA,GAI5Cd,EAEEY,EAFFZ,MAJ4Ce,EAM1CH,EADFI,aAL4C,IAAAD,EAKpC,GALoCA,EAQ1Cf,EAAQpC,GACViD,EAAYI,sBAAsB,kBAChCN,EAAwBrB,OAAA4B,EAAA,EAAA5B,CAAA,GACnBsB,EADkB,CAErBZ,QACAgB,aAIJtB,EAAWJ,OAAA4B,EAAA,EAAA5B,CAAA,GACNsB,EADK,CAERd,SAAU,CAACN,EAAIwB,EAAOvB,EAAIuB,MAGxBA,EAAQ,GAAKhB,EAAQ,IAAM,IAC7BgB,GAAgB,IAGlBhB,KAEAmB,qBAAqBN,GAIlB,SAASO,EAAwBR,GAAQ,IAE1CC,EAF0CQ,EACdT,EAA1BZ,aADwC,IAAAqB,EAChCzD,EAAW,GADqByD,EAI1CrB,EAAQpC,GACViD,EAAYI,sBAAsB,kBAChCG,EAAwB9B,OAAA4B,EAAA,EAAA5B,CAAA,GACnBsB,EADkB,CAErBZ,aDoCD,SAAAsB,GAA4D,IAAAC,EAAAD,EAAxCzB,aAAwC,IAAA0B,EAAhC,UAAgCA,EAArBzB,EAAqBwB,EAArBxB,SAAUC,EAAWuB,EAAXvB,QAAWyB,EAClDrC,EAA6BW,GADqB2B,EAAAnC,OAAAC,EAAA,EAAAD,CAAAkC,EAAA,GAC1DhC,EAD0DiC,EAAA,GACvDhC,EADuDgC,EAAA,GAGjE1B,EAAQ2B,YAAc7B,EAEtBE,EAAQ4B,YACR5B,EAAQ6B,OAAOpC,EAAI,GAAIC,EAAI,IAC3BM,EAAQ8B,OAAOrC,EAAI5B,EAAW,GAAI6B,EAAI7B,EAAW,IACjDmC,EAAQ+B,SAER/B,EAAQ4B,YACR5B,EAAQ6B,OAAOpC,EAAI5B,EAAW,GAAI6B,EAAI,IACtCM,EAAQ8B,OAAOrC,EAAI,GAAIC,EAAI7B,EAAW,IACtCmC,EAAQ+B,SC7CNC,CAASzC,OAAA4B,EAAA,EAAA5B,CAAA,GACJsB,EADG,CAENZ,WAGFA,MAEAN,EAAWJ,OAAA4B,EAAA,EAAA5B,CAAA,GACNsB,EADK,CAERf,MAAO,OACPG,MAAO,KAGTmB,qBAAqBN,ICxDlB,IAAMmB,EAAb,WACE,SAAAA,EAAYtB,GAAQpB,OAAA2C,EAAA,EAAA3C,CAAA4C,KAAAF,GAClBE,KAAKxB,MAAQA,EACbwB,KAAKC,UAAW,EAChBD,KAAKnC,QAAU,KACfmC,KAAKE,WAAY,EACjBF,KAAKpC,UAAW,EANpB,OAAAR,OAAA+C,EAAA,EAAA/C,CAAA0C,EAAA,EAAAM,IAAA,YAAAC,MAAA,WAUI,OAAOL,OAVX,CAAAI,IAAA,WAAAC,MAAA,WAcI,OAAOL,KAAKxB,QAdhB,CAAA4B,IAAA,SAAAC,MAAA,SAiBSxC,GACLmC,KAAKnC,QAAUA,EACfmC,KAAKpC,SAAWW,EAAmByB,KAAKxB,OAEnCwB,KAAKE,YACHF,KAAKC,SAQRzC,EAAW,CACTI,SAAUoC,KAAKpC,SACfC,UACAF,MAAO1B,EAAYE,aAVrBsC,EAAwB,CACtBb,SAAUoC,KAAKpC,SACfC,UACAF,MAAO1B,EAAYE,WACnB2B,MAAO,KAUXkC,KAAKC,UAAW,KArCtB,CAAAG,IAAA,SAAAC,MAAA,WA0CIL,KAAKE,WAAY,EAEjBhB,EAAwB,CACtBtB,SAAUoC,KAAKpC,SACfC,QAASmC,KAAKnC,cA9CpBiC,EAAA,GCiIaQ,EAAgB,eAjI3B,SAAAC,EAAArD,GAAsB,IAARN,EAAQM,EAARN,EAAGC,EAAKK,EAALL,EAAKO,OAAA2C,EAAA,EAAA3C,CAAA4C,KAAAO,GACpBP,KAAKQ,MAAQ,GACbR,KAAKS,UAAY7D,EAAIC,EACrBmD,KAAKU,UAAY,+DAIjBV,KAAKW,QACL,IAAK,IAAInC,EAAQ,EAAGA,EAAQwB,KAAKS,UAAWjC,IAC1CwB,KAAKQ,MAAMhC,GAAS,CAClBoC,KAAMvE,EAASI,MACfoE,SAAUb,KAAKc,YAAYtC,GAAOuC,OAChC,SAACC,GAAD,MAA0B,qBAATA,KAKvB,OAAOhB,8CAGQxB,GACf,OAAOwB,KAAKQ,MAAMhC,0CAGS,IAAfA,EAAerB,EAAfqB,MAAOoC,EAAQzD,EAARyD,KACfZ,KAAKQ,MAAMhC,KACbwB,KAAKQ,MAAMhC,GAAXpB,OAAA4B,EAAA,EAAA5B,CAAA,GAAyB4C,KAAKQ,MAAMhC,GAApC,CAA4CoC,SACxCA,IAASvE,EAASG,SACpBwD,KAAKQ,MAAMhC,GAAXpB,OAAA4B,EAAA,EAAA5B,CAAA,GAAyB4C,KAAKQ,MAAMhC,GAApC,CAA4CoC,OAAMC,SAAU,2CAKtDrC,GACV,IAAMyC,EAAOjB,KAAKkB,eAAe1C,GAC3B2C,EAAMnB,KAAKoB,cAAc5C,GACzB6C,EAAQrB,KAAKsB,gBAAgB9C,GAC7B+C,EAAOvB,KAAKwB,eAAehD,GAQjC,MAAO,CAACyC,EANQjB,KAAKyB,mBAAmBN,EAAKF,GAMtBE,EALNnB,KAAK0B,oBAAoBP,EAAKE,GAKTA,EAJrBrB,KAAK2B,oBAAoBJ,EAAMF,GAIOE,EAHvCvB,KAAK4B,mBAAmBL,EAAMN,+CAM7BE,EAAKF,GACtB,GAAIE,GAAO,GAAKF,GAAQ,EACtB,OAAOE,EAAM,8CAIGA,EAAKE,GACvB,GAAIF,GAAO,GAAKE,GAAS,EACvB,OAAOF,EAAM,6CAIEU,EAAKZ,GACtB,GAAIY,GAAO,GAAKZ,GAAQ,EACtB,OAAOY,EAAM,8CAIGA,EAAKR,GACvB,GAAIQ,GAAO,GAAKR,EACd,OAAOQ,EAAM,4CAICN,GAIhB,MAAO,CAHMA,EAAO,EACNA,EAAO,0CAKR/C,GAAO,IAAAsD,EACHnF,EAAahB,EAAWG,GAAjCc,EADYkF,EACZlF,EAAGC,EADSiF,EACTjF,EAIX,GAFyBC,KAAKC,MAAMyB,EAAQ5B,GAAKC,EAAI,EAGnD,OAAO2B,EAAQ5B,wCAIL4B,GAAO,IACX5B,EAAMD,EAAahB,EAAWG,GAA9Bc,EAIR,GAFwBE,KAAKC,MAAMyB,EAAQ5B,GAAK,EAG9C,OAAO4B,EAAQ5B,0CAIH4B,GAAO,IACb5B,EAAMD,EAAahB,EAAWG,GAA9Bc,EAIR,GAF0B4B,EAAQ5B,EAAIA,EAAI,EAGxC,OAAO4B,EAAQ,yCAIJA,GAKb,GAFyBA,EAFX7B,EAAahB,EAAWG,GAA9Bc,EAE6B,EAGnC,OAAO4B,EAAQ,qCAKjB,OAAOwB,KAAKQ,sCAKZ,OADAR,KAAKQ,MAAQ,GACNR,cAIkB,CAAUrD,EAAahB,EAAWG,WClIxD,SAASiG,EAAkBvB,EAAOwB,GACvCA,EAASC,QAAQ,SAACC,GAChB1B,EAAM2B,YAAY,CAAE3D,MAAO0D,EAAQE,WAAYxB,KAAMvE,EAASG,WAI3D,SAAS6F,EAAwB7B,EAAO8B,GAC7C9B,EAAM2B,YAAY,CAAE3D,MAAO8D,EAAY1B,KAAMvE,EAASC,iBAGjD,SAASiG,EAAsB/B,EAAOgC,GAC3ChC,EAAM2B,YAAY,CAAE3D,MAAOgE,EAAU5B,KAAMvE,EAASE,eCHtD,IAAMkG,EAAcC,YAAa,SAEpBC,EAAaF,EAAYG,QACzBC,EAAcJ,EAAYG,QAE1BE,EAAaL,EAAYG,QACzBG,EAAoBN,EAAYG,QAEhCI,EAAuBP,EAAYG,QACnCK,EAAqBR,EAAYG,QAEjCM,EAAoBT,EAAYU,MAAM,CLhBtB,EACF,MKoBdC,EAAYX,EAAYU,MAAM,IAE3CV,EAAYY,cAAc,SAACF,GAAD,OAAWA,EAAMG,MAAMX,KAE1C,IAAMY,EAAiBC,YAAM,CAClCC,OAAQC,YAAO,CACbD,OAAQL,EACRO,MAAOZ,EACPa,GAAI,SAACC,EAAOrF,GAAR,OAAkBqF,EAAMC,KAAK,SAAC9C,GAAD,OAAUA,EAAKoB,aAAe5D,OAEjEuC,OAAQgD,UAGVR,EAAeS,MAAM,SAAChD,GAAD,OAAUA,EAAKiD,WAEpCb,EACGc,GAAGpB,EAAY,SAACe,EAAOrF,GACtB,IAAM0D,EAAU,IAAIpC,EAAOtB,GAI3B,OAFoBqF,EAAMC,KAAK,SAAC9C,GAAD,OAAUA,EAAKoB,aAAe5D,IAExCqF,EAAH,GAAAM,OAAA/G,OAAAgH,EAAA,EAAAhH,CAAeyG,GAAf,CAAsB3B,MAEzCgC,GAAGX,EAAgB,SAACM,EAAOQ,GAAR,OAClBR,EAAM9C,OAAO,SAACC,GAAD,OAAUA,IAASqD,MAGpCnB,EACGgB,GAAGlB,EAAsB,SAACa,EAAOrF,GAAR,MAAkB,CAACA,EAAOqF,EAAM,MACzDK,GAAGjB,EAAoB,SAACY,EAAOrF,GAAR,MAAkB,CAACqF,EAAM,GAAIrF,KAEhD,IAAM8F,EAASC,YAAQ,CAC5BrC,QAASkB,EACToB,iBAAkBtB,IACjBuB,IAAI,SAACZ,GAAU,IAAAa,EAAAtH,OAAAC,EAAA,EAAAD,CACKyG,EAAMW,iBADX,GACTG,EADSD,EAAA,GACFE,EADEF,EAAA,GAGVlE,EAAQF,EAAcuE,cAM5B,OAJA9C,EAAkBvB,EAAOqD,EAAM3B,SAC/BG,EAAwB7B,EAAOmE,GAC/BpC,EAAsB/B,EAAOoE,GAEtBxH,OAAA4B,EAAA,EAAA5B,CAAA,GAAKyG,EAAZ,CAAmBrD,MAAOA,EAAMA,UCnErBsE,EAAmB,SAACC,GAC/B,OAAIA,EAAOnE,OAASvE,EAASG,QAMxB,SAASwI,EAAYxC,EAAUF,EAAY2C,GAIhD,IAHA,IAAMC,EAAO,GACTC,EAASF,EAAOzC,GAEb2C,GAAUA,IAAW7C,GAC1B4C,EAAKE,QAAQD,GACbA,EAASF,EAAOE,GASlB,OANID,EAAKG,OAAS,GAChBH,EAAKI,KAAK9C,GAGZ0C,EAAKE,QAAQ9C,GAEN4C,EAGF,SAASK,EAAmBJ,GACjC,OAAOA,EAAOK,OAAO,SAACC,EAAKC,GAEzB,OADAD,EAAIH,KAAKI,EAAI3E,OAAO,SAAC4E,GAAD,OAASF,EAAIG,KAAK,SAACC,GAAD,OAAYA,EAAOC,SAASH,QAC3DF,GACN,IC/BE,IAAMM,EAAb,WACE,SAAAA,IAAe3I,OAAA2C,EAAA,EAAA3C,CAAA4C,KAAA+F,GACb/F,KAAKgG,MAAQ,EACbhG,KAAKiG,WAAa,GAClBjG,KAAKkG,QAAU,GAJnB,OAAA9I,OAAA+C,EAAA,EAAA/C,CAAA2I,EAAA,EAAA3F,IAAA,YAAAC,MAAA,WAQIL,KAAKgG,UART,CAAA5F,IAAA,kBAAAC,MAAA,SAWkB4F,GACdjG,KAAKiG,WAAWX,KAAhBlI,OAAAgH,EAAA,EAAAhH,CAAyB6I,MAZ7B,CAAA7F,IAAA,eAAAC,MAAA,SAee6F,GACXlG,KAAKkG,QAAQZ,KAAblI,OAAAgH,EAAA,EAAAhH,CAAsB8I,MAhB1B,CAAA9F,IAAA,oBAAAC,MAAA,WAoBI,OAAOL,SApBX+F,EAAA,GCIO,SAASI,EAAmB7D,EAAYE,EAAUhC,GAQvD,IAPA,IAAM4F,EAAQ,IAAIL,EAEdM,GAAS,EACPC,EAAQ,CAAChE,GACT4D,EAAU,CAAC5D,GACX2C,EAAS,GAERoB,GAAUC,EAAMjB,OAAS,GAAG,CACjC,IAAMkB,EAAeD,EAAME,QAE3BJ,EAAMK,aAAaP,GAEnB,IAAK,IAAIQ,EAAI,EAAGA,EAAIlG,EAAM+F,GAAc1F,SAASwE,OAAQqB,IAAK,CAC5D,IAAMC,EAAOnG,EAAM+F,GAAc1F,SAAS6F,GACpC3B,EAASzE,EAAcsG,iBAAiBD,GAU9C,IARKT,EAAQJ,SAASa,IAAS7B,EAAiBC,KAC9CuB,EAAMhB,KAAKqB,GACXT,EAAQZ,KAAKqB,GAEb1B,EAAO0B,GAAQJ,EACfH,EAAMS,aAGJF,IAASnE,EAAU,CACrB6D,GAAS,EACT,OAIJD,EAAMU,gBAAgBR,GAGxB,IAAMS,EAASX,EAAMY,oBACf9B,EAAOF,EAAYxC,EAAUF,EAAY2C,GAE/C,OAAO7H,OAAA4B,EAAA,EAAA5B,CAAA,CACL8H,QACG6B,GCvCA,SAASE,EAAiB3E,EAAYE,EAAUhC,GAQrD,IAPA,IAAM4F,EAAQ,IAAIL,EAEdM,GAAS,EACPa,EAAQ,CAAC5E,GACT4D,EAAU,CAAC5D,GACX2C,EAAS,GAERoB,GAAUa,EAAM7B,OAAS,GAAG,CACjC,IAAMkB,EAAeW,EAAMV,QAE3BJ,EAAMK,aAAaP,GAEnB,IAAK,IAAIQ,EAAI,EAAGA,EAAIlG,EAAM+F,GAAc1F,SAASwE,OAAQqB,IAAK,CAC5D,IAAMC,EAAOnG,EAAM+F,GAAc1F,SAAS6F,GACpC3B,EAASzE,EAAcsG,iBAAiBD,GAU9C,IARKT,EAAQJ,SAASa,IAAS7B,EAAiBC,KAC9CmC,EAAM9B,QAAQuB,GACdT,EAAQZ,KAAKqB,GAEb1B,EAAO0B,GAAQJ,EACfH,EAAMS,aAGJF,IAASnE,EAAU,CACrB6D,GAAS,EACT,OAIJD,EAAMU,gBAAgBI,GAGxB,IAAMH,EAASX,EAAMY,oBACf9B,EAAOF,EAAYxC,EAAUF,EAAY2C,GAE/C,OAAO7H,OAAA4B,EAAA,EAAA5B,CAAA,CACL8H,QACG6B,GC/BP,IAAMI,EAAkBzE,cAEX0E,EAAiBC,cAEjBC,GAAmBC,YAAQH,EAAgB,uBAE3CI,GAAaC,YAAY,CACpC,CACEC,eAAgBvB,EAChBwB,KAAM,uBAER,CACED,eAAgBT,EAChBU,KAAM,wBAIGC,GAAkBrD,YAC7B+C,GACAE,GACA,SAACK,EAAiBC,GAAlB,OACEA,EAAUhE,KAAK,SAACiE,GAAD,OAAcA,EAASJ,OAASE,MAGnDV,EAAgB9D,cAAc,SAACF,GAAD,OAAWA,EAAMG,MAAMT,EAAaF,KAElEyE,EAAepD,MAAM,kBAAMgE,GAAcC,GAAWC,YChC7C,IAAMD,GAAa,CACxBE,MAAO,QACPC,QAAS,UACTC,MAAO,QACPC,OAAQ,SACRC,MAAO,QACPL,SAAU,YAGNM,GAAa9F,YAAa,QAEnBsF,GAAgBQ,GAAW5F,QAC3B6F,GAAWD,GAAW5F,QAEtB8F,GAAQF,GAAWrF,MAAM,IAAIG,MAAMX,EAAYE,GAC/C8F,GAAgBpB,YAAQkB,GAAU,IAAInF,MAAMX,GAE5CiG,GAAarB,YAAQS,GAAeC,GAAWC,UAAU5E,MACpEX,GAGWkG,GAAYrF,YAAM,CAC7BC,OAAQmF,GACR7H,OAAQ6H,GAAWnE,IAAI,SAACZ,GAAD,OAAWA,IAAUoE,GAAWE,UAGzD3E,YAAM,CACJC,OAAQmF,GACR7H,OAAQ6H,GAAWnE,IAAI,SAACZ,GAAD,OAAWA,IAAUoE,GAAWM,QACvDpD,OAAQxC,IAGH,IAAMmG,GAAUtF,YAAM,CAC3BC,OAAQmF,GACR7H,OAAQ6H,GAAWnE,IAAI,SAACZ,GAAD,OAAWA,IAAUoE,GAAWC,aCtClD,SAASa,GAAgB5D,GAAmB,QAAA6D,EAAAC,UAAA5D,OAAR6D,EAAQ,IAAAC,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAARF,EAAQE,EAAA,GAAAH,UAAAG,GACjD,OAAOF,EAAOtD,KAAK,SAAC5E,GAAD,OAAUmE,IAAWnE,IAGnC,SAASqI,GAAoBnH,EAASrE,EAASF,GACpD,IAAK,IAAI+I,EAAI,EAAGA,EAAIxE,EAAQmD,OAAQqB,IAAK,KAAA4C,EACxB/K,EAAmB2D,EAAQwE,IADH6C,EAAAnM,OAAAC,EAAA,EAAAD,CAAAkM,EAAA,GAEvC9L,EAAW,CACTI,SAAU,CAH2B2L,EAAA,GAAAA,EAAA,IAIrC1L,UACAF,WD+BN+F,YAAO,CACLD,OAAQ,CACNjD,MAAO8D,EACPyD,SAAUH,IAEZjE,MAAOkF,GACP1D,OAAQuD,GACR9E,GAAI,SAAA1G,GAAyB,IAAtBsD,EAAsBtD,EAAtBsD,MAAOuH,EAAe7K,EAAf6K,SAAeyB,EAAApM,OAAAC,EAAA,EAAAD,CACNoD,EAAMgE,iBADA,GACpBG,EADoB6E,EAAA,GACb5E,EADa4E,EAAA,GAG3B3G,IAEA,IAAM4G,EAAO7N,OAAO8N,YAAYC,MAE1B5C,EAASgB,EAASL,eAAe/C,EAAOC,EAAKpE,EAAMA,OAEnDoJ,EAAUhO,OAAO8N,YAAYC,MAAQF,EAE3C,OAAOrM,OAAA4B,EAAA,EAAA5B,CAAA,GACF2J,EADL,CAEEb,QAASX,EAAmBwB,EAAOb,SACnCD,WAAYV,EAAmBwB,EAAOd,YACtC2D,eEtDC,IAAMC,GAAb,WACE,SAAAA,IAAezM,OAAA2C,EAAA,EAAA3C,CAAA4C,KAAA6J,GACb7J,KAAKgG,MAAQ,EACbhG,KAAKrB,UAAY,KAHrB,OAAAvB,OAAA+C,EAAA,EAAA/C,CAAAyM,EAAA,EAAAzJ,IAAA,QAAAC,MAAA,SAMQ6E,EAAMrH,GAAS,IAAAiM,EAAA9J,KACXkG,EAAwBhB,EAAxBgB,QAASD,EAAef,EAAfe,WACX8D,EAAYnB,GAAWoB,WACvBC,EAAMtB,GAAcqB,YAE1BE,aAAalK,KAAKrB,WAEdoL,IAAc9B,GAAWC,YAIzB6B,IAAc9B,GAAWI,MAKzBrI,KAAKgG,MAAQE,EAAQb,QACvBgE,GAAoBnD,EAAQlG,KAAKgG,OAAQnI,EAAS,WAE9CmC,KAAKgG,MAAQE,EAAQb,OAAS,GAChCgE,GACEpD,EAAWjG,KAAKgG,OAChBnI,EACA,sBAIJmC,KAAKrB,UAAYwL,YACf,kBAAML,EAAKnF,MAAM,CAAEuB,UAASD,cAAcpI,IAC1CmC,KAAKoK,OAAOH,IAGdpH,EAAYmB,MAAM,kBAAMkG,aAAaJ,EAAKnL,aAE1CqB,KAAKgG,UAELgC,GAAcC,GAAWC,UACzBlI,KAAKW,QCuGJ,SAAAxD,GACL,IADkE,IAAvCU,EAAuCV,EAAvCU,QAAuCwM,EAAAlN,EAA9B+H,YAA8B,IAAAmF,EAAvB,GAAuBA,EAAAC,EAAAnN,EAAnBQ,aAAmB,IAAA2M,EAAX,QAAWA,EACzD5D,EAAI,EAAGA,EAAIxB,EAAKG,OAAQqB,IAAK,CACpC,IAAM9I,EAAWW,EAAmB2G,EAAKwB,IADL3I,EAErBd,EAA6BW,GAFRI,EAAAZ,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GAE7BT,EAF6BU,EAAA,GAE1BT,EAF0BS,EAAA,GAIhCuM,KACF1M,EAAQ4B,YACR5B,EAAQ2B,YAAc7B,EACtBE,EAAQ2M,UAAY,EACpB3M,EAAQ6B,OAAO6K,GAAK,GAAIA,GAAK,IAC7B1M,EAAQ8B,OAAOrC,EAAI5B,EAAW,EAAG6B,EAAI7B,EAAW,GAChDmC,EAAQ+B,UAGV2K,GAAO,CAACjN,EAAI5B,EAAW,EAAG6B,EAAI7B,EAAW,GAG3C6O,GAAO,KDtHHE,CAAW,CACTvF,KAFewD,GAAMsB,WAAf9E,KAGNrH,aA7BFqM,aAAalK,KAAKrB,cAlBxB,CAAAyB,IAAA,SAAAC,MAAA,SAoDS4J,GAEL,OAAO,KADgB,IAARA,EAAYA,EAAY,GAANA,KArDrC,CAAA7J,IAAA,QAAAC,MAAA,WA0DIL,KAAKgG,MAAQ,EACbhG,KAAKrB,UAAY,OA3DrB,CAAAyB,IAAA,kBAAAC,MAAA,WA+DI6J,aAAalK,KAAKrB,eA/DtBkL,EAAA,GAmEaa,GAAW,IAAIb,GEoCfc,GAAgB,eA9G3B,SAAAC,IAAexN,OAAA2C,EAAA,EAAA3C,CAAA4C,KAAA4K,GACb5K,KAAK6K,aAAc,EACnB7K,KAAK8K,aAAc,EACnB9K,KAAK+K,UAAY,GACjB/K,KAAK6D,MAAQ,GACb7D,KAAKU,UAAY,KACjBV,KAAKgL,kBAAoB,sDAGpB,IAAAlB,EAAA9J,KAgBL,OAfA4I,GAAW5E,MAAM,SAACH,GAEdkF,GACElF,EACAoE,GAAWE,MACXF,GAAWI,MACXJ,GAAWK,QAGbwB,EAAKmB,mBAELnB,EAAKoB,oBAIFlL,wDAGkBmL,GAAQ,IAAAC,EAAApL,KACjCmL,EAAOE,iBAAiB,YAAa,SAACzI,GACpCwI,EAAKL,UACFhK,OAAO,SAACuK,GAAD,MAAkC,cAAnBA,EAAU1K,OAChCqB,QAAQ,SAACqJ,GAAD,OAAeA,EAAUC,kBAEpCH,EAAKP,aAAc,EACnBO,EAAKN,aAAc,IAGrBK,EAAOE,iBAAiB,UAAW,SAACzI,GAClCwI,EAAKP,aAAc,EACnBO,EAAKL,UACFhK,OAAO,SAACuK,GAAD,MAAkC,YAAnBA,EAAU1K,OAChCqB,QAAQ,SAACqJ,GAAD,OAAeA,EAAUC,cAAc3I,EAAOwI,EAAKvH,WAGhEsH,EAAOE,iBAAiB,QAAS,SAACzI,GAChCwI,EAAKL,UACFhK,OAAO,SAACuK,GAAD,MAAkC,UAAnBA,EAAU1K,OAChCqB,QAAQ,SAACqJ,GACHF,EAAKN,aACRQ,EAAUC,cAAc3I,EAAOwI,EAAKvH,WAK5CsH,EAAOE,iBAAiB,YAAa,SAACzI,GACpC,IAAMpE,EfWL,SAAwBoE,GAAO,IAAA4I,EACnB7O,EAAaiG,EAAM6I,QAAS7I,EAAM8I,SAGnD,OAFctN,EAAmB,CAFGoN,EAC5B5O,EAD4B4O,EACzB3O,IeZO8O,CAAe/I,GAEzBwI,EAAKP,aAAerM,IAAU4M,EAAK1K,YACrC0K,EAAK1K,UAAYlC,EACjB4M,EAAKN,aAAc,EACnBM,EAAKL,UACFhK,OAAO,SAACuK,GAAD,MAAkC,cAAnBA,EAAU1K,OAChCqB,QAAQ,SAACqJ,GAAD,OACPA,EAAUC,cAAc3I,EAAOwI,EAAKvH,MAAOuH,EAAK1K,2DAOxDV,KAAKW,kDAILX,KAAK+K,UAAY/K,KAAKgL,4DAGNO,GAChBvL,KAAK+K,UAAUzF,KAAK,CAAE1E,KAAM,YAAa2K,0DAG3BA,GACdvL,KAAK+K,UAAUzF,KAAK,CAAE1E,KAAM,UAAW2K,4DAGvBA,GAChBvL,KAAK+K,UAAUzF,KAAK,CAAE1E,KAAM,YAAa2K,6DAGxBA,GACjBvL,KAAK+K,UAAUzF,KAAK,CAAE1E,KAAM,QAAS2K,mDAG9B1H,GAEP,OADA7D,KAAK6D,MAAQA,EACN7D,qCAIHA,KAAK+K,UAAU1F,OAAS,IAC1BrF,KAAKgL,kBAAoBhL,KAAK+K,UAC9B/K,KAAK6K,aAAc,EACnB7K,KAAK8K,aAAc,EACnB9K,KAAK+K,UAAY,GACjB/K,KAAKU,UAAY,gBAMvBiK,GAAciB,ODrFd,IAAMC,GAAgBtH,YAAQ,CAC5BwF,UAAWnB,GACX1D,KAAMwD,KAoBR,SAASoD,GAAWlJ,EAAOiB,GAAO,IAAA/B,EACfnF,EAAaiG,EAAM6I,QAAS7I,EAAM8I,SAC7ClN,EAAQJ,EAAmB,CAFD0D,EACxBlF,EADwBkF,EACrBjF,IADqB6H,EAAAtH,OAAAC,EAAA,EAAAD,CAIDyG,EAAMW,iBAJL,GAIzBlC,EAJyBoC,EAAA,GAIblC,EAJakC,EAAA,GAMhC,MAAO,CACLqH,cAAe,WACTvN,IAAU8D,GAAc9D,IAAUgE,GACpCM,EAAWtE,IAGfwN,eAAgB,WACVxN,IAAU8D,GAAc9D,IAAUgE,GACpCO,EAAkBvE,KAwB1B,IAAIoC,GAAO,KACX,SAASqL,GAAYrJ,GAAO,IAAAsJ,EACTvP,EAAaiG,EAAM6I,QAAS7I,EAAM8I,SAC7ClN,EAAQJ,EAAmB,CAFP8N,EAClBtP,EADkBsP,EACfrP,IAELgH,EAAQS,EAAO0F,WAMrB,OAJKpJ,KACHA,GAAOiD,EAAMrD,MAAMhC,GAAOoC,MAGpBA,IACN,KAAKvE,EAASG,OACZ,OAAOsP,GAAWlJ,EAAOiB,GAAOmI,iBAClC,KAAK3P,EAASC,eACZ,OAhCN,SAAqBkC,EAAOqF,GAC1B,IAAMsI,EAAYtI,EAAM3B,QAAQ4B,KAAK,SAAC5B,GAAD,OAAaA,EAAQ1D,QAAUA,IAC3DgE,EAFwBpF,OAAAC,EAAA,EAAAD,CAEZyG,EAAMW,iBAFM,MAI5B2H,GAAa3N,IAAUgE,GAC1BQ,EAAqBxE,GA2BZ4N,CAAY5N,EAAOqF,GAC5B,KAAKxH,EAASE,aACZ,OAzBN,SAAmBiC,EAAOqF,GACxB,IAAMsI,EAAYtI,EAAM3B,QAAQ4B,KAAK,SAAC5B,GAAD,OAAaA,EAAQ1D,QAAUA,IAC7D8D,EAFwBlF,OAAAC,EAAA,EAAAD,CAEVyG,EAAMW,iBAFI,MAI1B2H,GAAa3N,IAAU8D,GAC1BW,EAAmBzE,GAoBV6N,CAAU7N,EAAOqF,GAC1B,KAAKxH,EAASI,MACZ,OAAOqP,GAAWlJ,EAAOiB,GAAOkI,iBAgDtC,IAAIxB,GAAO,KA8CX,IAAMY,GAASmB,SAASC,eAAe,YAEvC,GAAIpB,GAAQ,CACV,IAAMtN,GAAUsN,GAAOqB,WAAW,OA7F7B,SAAsBrB,EAAQtN,GACnC,IAAM4O,EAAY9P,EAAahB,EAAWG,GACpC4Q,EAAa1P,EAAcyP,EAAU7P,EAAG6P,EAAU5P,GAClD8P,EA8DR,SAAmB9O,GAMjB,IALA,IAAM+O,EAAO,IAAIC,OAEXJ,EAAY9P,EAAahB,EAAWG,GACpC4Q,EAAa1P,EAAcyP,EAAU7P,EAAG6P,EAAU5P,GAE/C6J,EAAI,EAAGA,GAAK+F,EAAU7P,EAAG8J,IAChCkG,EAAKlN,OAAOgH,EAAIhL,EAAWM,EAAY,GACvC4Q,EAAKjN,OAAO+G,EAAIhL,EAAWM,EAAY0Q,EAAW7P,GAGpD,IAAK,IAAI6J,EAAI,EAAGA,GAAK+F,EAAU5P,EAAG6J,IAChCkG,EAAKlN,OAAO,EAAGgH,EAAIhL,EAAWM,GAC9B4Q,EAAKjN,OAAO+M,EAAW9P,EAAG8J,EAAIhL,EAAWM,GAG3C,MAAO,CACL4Q,OACAE,YAAa,WACXjP,EAAQ2M,UAAYxO,EACpB6B,EAAQ2B,YAAcvD,EAAYC,cAlFrB6Q,CAAUlP,GAW3B,SAASmP,EAAOnJ,IdzEX,SAAwBhG,EAASsN,GAC/BtN,EAAQoP,UAAU,EAAG,EAAG9B,EAAOrN,MAAOqN,EAAO+B,QcyElDC,CAAetP,EAASsN,GACxBR,GAAcyC,SAASvJ,GAvF3B,SAA2BW,EAAkB3G,GAC3C,IAAK,IAAI6I,EAAI,EAAGA,EAAIlC,EAAiBa,OAAQqB,IAE3ClJ,EAAW,CACTI,SAFYW,EAAmBiG,EAAiBkC,IAGhD7I,UACAF,MAAO1B,EAAYG,cAAcsK,KAmFnC2G,CAAkBxJ,EAAMW,iBAAkB3G,GA/FvC,SAAuBqE,EAASrE,GACrC,IAAK,IAAI6I,EAAI,EAAGA,EAAIxE,EAAQmD,OAAQqB,IAClCxE,EAAQwE,GAAGsG,OAAOnP,GA8FlByP,CAAczJ,EAAM3B,QAASrE,GAE7B8O,EAASG,cACTjP,EAAQ+B,OAAO+M,EAASC,OEtIrB,SAAyBzB,EAAzBjO,GAA2C,IAARN,EAAQM,EAARN,EAAGC,EAAKK,EAALL,EAC3CsO,EAAO+B,OAASrQ,EAChBsO,EAAOrN,MAAQlB,EFmHf2Q,CAAgBpC,EAAQuB,GAExB/B,GAAc6C,2BAA2BrC,GACzCR,GAAc8C,kBAAkB,SAACC,EAAGC,GAClC,OAAO1B,GAAYyB,KAErB/C,GAAciD,gBAAgB,kBAAOhN,GAAO,OAC5C+J,GAAckD,mBAAmB,SAACH,EAAGC,GAAJ,OAAU7B,GAAW4B,EAAGC,GAAG3B,mBAa5D1H,EAAON,MAAMgJ,GAEbtJ,YAAO,CACLD,OAAQa,EACRX,MAAOmK,YAAM,CAACnL,EAAYE,MACzBmB,MAAMgJ,GAETnB,GAAc7H,MAAM,SAAA9G,GAA0CA,EAAvC6Q,gBAAuC,IAAtBhE,EAAsB7M,EAAtB6M,UAAW7E,EAAWhI,EAAXgI,KAC7CA,EAAK0E,UACHG,IAAc9B,GAAWE,OAC3BuC,GAAS/J,QAGX+J,GAASsD,kBACTtD,GAAS/F,MAAMO,EAAMrH,MAwDzBoQ,CAAa9C,GAAQtN,cGxLjBqQ,GAASzG,YAAY,IAQZ,SAAS0G,KAAM,IAAAC,EAAAC,EACtBvG,EAAYwG,YAAS9G,IACrBK,EAAkByG,YAAShH,IAC3ByC,EAAYuE,YAAS1F,IACrBzF,EAAQmL,YAASJ,IACjBK,EAAeD,YAAS3F,IAE9B,OACE6F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,KACED,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,iEACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,kHACuBH,EAAAC,EAAAC,cAAA,aAAY,OAALvL,QAAK,IAALA,OAAA,EAAAA,EAAO6C,QAAS,IAE9CwI,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,qGAEEH,EAAAC,EAAAC,cAAA,iBAAa,OAALvL,QAAK,IAALA,OAAA,UAAAiL,EAAAjL,EAAOyG,eAAP,IAAAwE,OAAA,EAAAA,EAAgBS,QAAQ,KAAM,EAAtC,QAEFL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,4DACcH,EAAAC,EAAAC,cAAA,aAAY,OAALvL,QAAK,IAALA,OAAA,UAAAkL,EAAAlL,EAAO+B,YAAP,IAAAmJ,OAAA,EAAAA,EAAahJ,SAAU,KAG9CmJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,sGACAH,EAAAC,EAAAC,cAAA,UACG5G,EAAUrD,IAAI,SAACsD,EAAUvJ,GAAX,OACbgQ,EAAAC,EAAAC,cAAA,MACEI,QAAS,kBAAM1H,EAAeW,EAASJ,OACvCgH,UAAW9G,IAAoBE,EAASJ,KAAO,WAAa,GAC5DvH,IAAK2H,EAASJ,MAEbI,EAASJ,SAIhB6G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,MACVG,QAAS,kBAAM9G,GAAcC,GAAWE,SAF1C,kCAMCY,GACCgB,EACA9B,GAAWE,MACXF,GAAWI,MACXJ,GAAWK,SAEXkG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,KACEP,EAAAC,EAAAC,cAAA,UACEC,UAAU,MACVG,QAAS,kBAAM9G,GAAcC,GAAWI,SAF1C,kCAOAmG,EAAAC,EAAAC,cAAA,UACEC,UAAU,MACVG,QAAS,kBAAM9G,GAAcC,GAAWK,UAF1C,iEASJkG,EAAAC,EAAAC,cAAA,UACEC,UAAU,MACVG,QAAS,kBAAM9G,GAAcC,GAAWM,SAF1C,qDAQFiG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,qDACYH,EAAAC,EAAAC,cAAA,YAAOH,IAEnBC,EAAAC,EAAAC,cAAA,SACE9N,KAAK,SACLP,MAAOkO,EACPS,IAAI,KACJC,IAAI,IACJC,UAAU,IACVC,SAAU,SAAAjS,GAAgB,IAAbiI,EAAajI,EAAbiI,OACXsD,GAAS2G,SAASjK,EAAO9E,eA3FzCqD,YAAO,CACLD,OAAQiF,GACR/E,MAAOmF,GACP3D,OAAQ+I,KC5BVmB,EAAAC,EAAAC,EAAA,mCAAAnI,IAAAiI,EAAAC,EAAAC,EAAA,qCAAAjI,KAAA+H,EAAAC,EAAAC,EAAA,+BAAA/H,KAAA6H,EAAAC,EAAAC,EAAA,oCAAA3H,KAAAyH,EAAAC,EAAAC,EAAA,qCAAAC,IAAAH,EAAAC,EAAAC,EAAA,gCAAAvK,IAAAqK,EAAAC,EAAAC,EAAA,uCAAAhK,IAAA8J,EAAAC,EAAAC,EAAA,uCAAApJ,IAAAkJ,EAAAC,EAAAC,EAAA,qCAAAtI,IAAAoI,EAAAC,EAAAC,EAAA,kCAAAjP,IAAA+O,EAAAC,EAAAC,EAAA,+BAAA5M,IAAA0M,EAAAC,EAAAC,EAAA,gCAAA1M,IAAAwM,EAAAC,EAAAC,EAAA,+BAAAzM,IAAAuM,EAAAC,EAAAC,EAAA,sCAAAxM,IAAAsM,EAAAC,EAAAC,EAAA,yCAAAvM,IAAAqM,EAAAC,EAAAC,EAAA,uCAAAtM,IAAAoM,EAAAC,EAAAC,EAAA,sCAAArM,IAAAmM,EAAAC,EAAAC,EAAA,8BAAAnM,IAAAiM,EAAAC,EAAAC,EAAA,mCAAAhM,IAAA8L,EAAAC,EAAAC,EAAA,2BAAAjL,IAAA+K,EAAAC,EAAAC,EAAA,sCAAAxN,IAAAsN,EAAAC,EAAAC,EAAA,4CAAAlN,IAAAgN,EAAAC,EAAAC,EAAA,0CAAAhN,IAAA8M,EAAAC,EAAAC,EAAA,4CAAA9Q,IAAA4Q,EAAAC,EAAAC,EAAA,4CAAArQ,IAAAmQ,EAAAC,EAAAC,EAAA,2BAAAE,IAAAJ,EAAAC,EAAAC,EAAA,6BAAAG,KAAAL,EAAAC,EAAAC,EAAA,6BAAA7E,KAAA2E,EAAAC,EAAAC,EAAA,+BAAAtH,KAAAoH,EAAAC,EAAAC,EAAA,kCAAAvH,KAAAqH,EAAAC,EAAAC,EAAA,6BAAA9G,KAAA4G,EAAAC,EAAAC,EAAA,0BAAA7G,KAAA2G,EAAAC,EAAAC,EAAA,kCAAA5G,KAAA0G,EAAAC,EAAAC,EAAA,+BAAA3G,KAAAyG,EAAAC,EAAAC,EAAA,8BAAA1G,KAAAwG,EAAAC,EAAAC,EAAA,4BAAAzG,KAAAuG,EAAAC,EAAAC,EAAA,oCAAAxG,KAAAsG,EAAAC,EAAAC,EAAA,wCAAAlG,KAIA,IAAMsG,GAAcrD,SAASC,eAAe,QAC5CqD,IAAS5C,OAAOwB,EAAAC,EAAAC,cAACP,GAAD,MAASwB","file":"static/js/main.d2e8c6b9.chunk.js","sourcesContent":["export const cellSize = 35;\r\nexport const pageWidth = window.innerWidth;\r\nexport const pageHeight = window.innerHeight;\r\nexport const borderSize = 0.5;\r\nexport const boardLength = pageWidth * pageHeight;\r\nexport const startPosition = 0;\r\nexport const endPosition = 110;\r\n\r\nexport const colorSchema = {\r\n  borderColor: \"#000\",\r\n  blockColor: \"#bbbbbb\",\r\n  startEndColor: [\"green\", \"red\"],\r\n};\r\n\r\nexport const ceilType = {\r\n  START_POSITION: \"START_POSITION\",\r\n  END_POSITION: \"END_POSITION\",\r\n  BARIER: \"BARIER\",\r\n  EMPTY: \"EMPTY\",\r\n  VISITED: \"VISITED\",\r\n};\r\n\r\nexport function getLocalSize(w, h) {\r\n  return {\r\n    w: Math.floor(w / cellSize),\r\n    h: Math.floor(h / cellSize),\r\n  };\r\n}\r\n\r\nexport function getGlobalSize(w, h) {\r\n  return {\r\n    w: Math.floor(w * cellSize),\r\n    h: Math.floor(h * cellSize),\r\n  };\r\n}\r\n\r\nexport function convertLocalPositionToGlobal([x, y]) {\r\n  return [x * cellSize, y * cellSize];\r\n}\r\n\r\nexport function drawSquare({\r\n  color = \"rgb(152, 251, 152)\",\r\n  position,\r\n  context,\r\n  width,\r\n}) {\r\n  const [x, y] = convertLocalPositionToGlobal(position);\r\n  const size = width || cellSize - borderSize * 2;\r\n\r\n  context.fillStyle = color;\r\n  context.fillRect(x + borderSize * 2, y + borderSize * 2, size, size);\r\n}\r\n\r\nexport function clearALlCanvas(context, canvas) {\r\n  return context.clearRect(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\nexport function getIndexByPosition([x, y]) {\r\n  const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n  return y * w + x;\r\n}\r\n\r\nexport function getPositionByIndex(index) {\r\n  const { w } = getLocalSize(pageWidth, pageHeight);\r\n  const y = Math.floor(index / w);\r\n  const x = index - y * w;\r\n\r\n  return [x, y];\r\n}\r\n\r\nexport function getTargetIndex(event) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  return index;\r\n}\r\n\r\nexport function drawMark({ color = \"#e84a4a\", position, context }) {\r\n  const [x, y] = convertLocalPositionToGlobal(position);\r\n\r\n  context.strokeStyle = color;\r\n\r\n  context.beginPath();\r\n  context.moveTo(x + 10, y + 10);\r\n  context.lineTo(x + cellSize - 10, y + cellSize - 10);\r\n  context.stroke();\r\n\r\n  context.beginPath();\r\n  context.moveTo(x + cellSize - 10, y + 10);\r\n  context.lineTo(x + 10, y + cellSize - 10);\r\n  context.stroke();\r\n}\r\n","import { drawSquare, drawMark, cellSize } from \"../config\";\r\n\r\nexport function drawSquareWithAnimation(params) {\r\n  let animateId;\r\n  let {\r\n    position: [x, y],\r\n    width,\r\n    scale = 0.3,\r\n  } = params;\r\n\r\n  if (width < cellSize) {\r\n    animateId = requestAnimationFrame(() =>\r\n      drawSquareWithAnimation({\r\n        ...params,\r\n        width,\r\n        scale,\r\n      })\r\n    );\r\n\r\n    drawSquare({\r\n      ...params,\r\n      position: [x + scale, y + scale],\r\n    });\r\n\r\n    if (scale > 0 && width % 5 === 0) {\r\n      scale = scale - 0.1;\r\n    }\r\n\r\n    width++;\r\n  } else {\r\n    cancelAnimationFrame(animateId);\r\n  }\r\n}\r\n\r\nexport function drawMarkerWithAnimation(params) {\r\n  let { width = cellSize - 10 } = params;\r\n  let animateId;\r\n\r\n  if (width < cellSize) {\r\n    animateId = requestAnimationFrame(() =>\r\n      drawMarkerWithAnimation({\r\n        ...params,\r\n        width,\r\n      })\r\n    );\r\n\r\n    drawMark({\r\n      ...params,\r\n      width,\r\n    });\r\n\r\n    width++;\r\n  } else {\r\n    drawSquare({\r\n      ...params,\r\n      color: \"#fff\",\r\n      width: 0,\r\n    });\r\n\r\n    cancelAnimationFrame(animateId);\r\n  }\r\n}\r\n","import { getPositionByIndex, drawSquare, colorSchema } from \"../config\";\r\nimport { drawSquareWithAnimation, drawMarkerWithAnimation } from \"./animations\";\r\n\r\nexport class Barier {\r\n  constructor(index) {\r\n    this.index = index;\r\n    this.canDrawe = false;\r\n    this.context = null;\r\n    this.canRemove = false;\r\n    this.position = false;\r\n  }\r\n\r\n  getBarier() {\r\n    return this;\r\n  }\r\n\r\n  getIndex() {\r\n    return this.index;\r\n  }\r\n\r\n  render(context) {\r\n    this.context = context;\r\n    this.position = getPositionByIndex(this.index);\r\n\r\n    if (!this.canRemove) {\r\n      if (!this.canDrawe) {\r\n        drawSquareWithAnimation({\r\n          position: this.position,\r\n          context,\r\n          color: colorSchema.blockColor,\r\n          width: 20,\r\n        });\r\n      } else {\r\n        drawSquare({\r\n          position: this.position,\r\n          context,\r\n          color: colorSchema.blockColor,\r\n        });\r\n      }\r\n\r\n      this.canDrawe = true;\r\n    }\r\n  }\r\n\r\n  remove() {\r\n    this.canRemove = true;\r\n\r\n    drawMarkerWithAnimation({\r\n      position: this.position,\r\n      context: this.context,\r\n    });\r\n  }\r\n}\r\n","import { ceilType, pageWidth, getLocalSize, pageHeight } from \"../config\";\r\n\r\nclass Graph {\r\n  constructor({ w, h }) {\r\n    this.graph = {};\r\n    this.cellCount = w * h;\r\n    this.lastIndex = null;\r\n  }\r\n\r\n  createGraph() {\r\n    this.clear();\r\n    for (let index = 0; index < this.cellCount; index++) {\r\n      this.graph[index] = {\r\n        type: ceilType.EMPTY,\r\n        siblings: this.getSiblings(index).filter(\r\n          (item) => typeof item !== \"undefined\"\r\n        ),\r\n      };\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  getVertexByIndex(index) {\r\n    return this.graph[index];\r\n  }\r\n\r\n  updateGraph({ index, type }) {\r\n    if (this.graph[index]) {\r\n      this.graph[index] = { ...this.graph[index], type };\r\n      if (type === ceilType.BARIER) {\r\n        this.graph[index] = { ...this.graph[index], type, siblings: [] };\r\n      }\r\n    }\r\n  }\r\n\r\n  getSiblings(index) {\r\n    const left = this.getLeftSibling(index);\r\n    const top = this.getTopSibling(index);\r\n    const right = this.getRightSibling(index);\r\n    const down = this.getDownSibling(index);\r\n\r\n    const topLeft = this.getTopLeftDiagonal(top, left);\r\n    const topRight = this.getTopRightDiagonal(top, right);\r\n    const botRight = this.getBotRightDiagonal(down, right);\r\n    const botLeft = this.getBotLeftDiagonal(down, left);\r\n\r\n    // return [left, top, right, down];\r\n    return [left, topLeft, top, topRight, right, botRight, down, botLeft];\r\n  }\r\n\r\n  getTopLeftDiagonal(top, left) {\r\n    if (top >= 0 && left >= 0) {\r\n      return top - 1;\r\n    }\r\n  }\r\n\r\n  getTopRightDiagonal(top, right) {\r\n    if (top >= 0 && right >= 0) {\r\n      return top + 1;\r\n    }\r\n  }\r\n\r\n  getBotLeftDiagonal(bot, left) {\r\n    if (bot >= 0 && left >= 0) {\r\n      return bot - 1;\r\n    }\r\n  }\r\n\r\n  getBotRightDiagonal(bot, right) {\r\n    if (bot >= 0 && right) {\r\n      return bot + 1;\r\n    }\r\n  }\r\n\r\n  getBottomDiagonal(down) {\r\n    const left = down - 1;\r\n    const right = down + 1;\r\n\r\n    return [left, right];\r\n  }\r\n\r\n  getDownSibling(index) {\r\n    const { w, h } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasDownNeighbour = Math.floor(index / w) < h - 1;\r\n\r\n    if (hasDownNeighbour) {\r\n      return index + w;\r\n    }\r\n  }\r\n\r\n  getTopSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasTopNeighbour = Math.floor(index / w) > 0;\r\n\r\n    if (hasTopNeighbour) {\r\n      return index - w;\r\n    }\r\n  }\r\n\r\n  getRightSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasRightNeighbour = index % w < w - 1;\r\n\r\n    if (hasRightNeighbour) {\r\n      return index + 1;\r\n    }\r\n  }\r\n\r\n  getLeftSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasLeftNeighbour = index % w > 0;\r\n\r\n    if (hasLeftNeighbour) {\r\n      return index - 1;\r\n    }\r\n  }\r\n\r\n  getGraph() {\r\n    return this.graph;\r\n  }\r\n\r\n  clear() {\r\n    this.graph = {};\r\n    return this;\r\n  }\r\n}\r\n\r\nexport const graphControll = new Graph(getLocalSize(pageWidth, pageHeight));\r\n","import { ceilType } from \"../config\";\r\n\r\nexport function setBarrierToGraph(graph, barriers) {\r\n  barriers.forEach((barrier) => {\r\n    graph.updateGraph({ index: barrier.getIndex(), type: ceilType.BARIER });\r\n  });\r\n}\r\n\r\nexport function setStartPositionToGraph(graph, startIndex) {\r\n  graph.updateGraph({ index: startIndex, type: ceilType.START_POSITION });\r\n}\r\n\r\nexport function setEndPositionToGraph(graph, endIndex) {\r\n  graph.updateGraph({ index: endIndex, type: ceilType.END_POSITION });\r\n}\r\n","import { combine, createDomain, sample, guard } from \"effector\";\r\nimport { startPosition, endPosition } from \"../config\";\r\nimport { graphControll } from \"./controller\";\r\nimport {\r\n  setBarrierToGraph,\r\n  setStartPositionToGraph,\r\n  setEndPositionToGraph,\r\n} from \"./utils\";\r\nimport { Barier } from \"../game\";\r\n\r\nconst graphDomain = createDomain(\"graph\");\r\n\r\nexport const resetStore = graphDomain.event();\r\nexport const clearCanvas = graphDomain.event();\r\n\r\nexport const setBarrier = graphDomain.event();\r\nexport const removeBarrierItem = graphDomain.event();\r\n\r\nexport const triggerStartPosition = graphDomain.event();\r\nexport const triggerEndPosition = graphDomain.event();\r\n\r\nexport const $startEndPosition = graphDomain.store([\r\n  startPosition,\r\n  endPosition,\r\n]);\r\n\r\nexport const $barriers = graphDomain.store([]);\r\n\r\ngraphDomain.onCreateStore((store) => store.reset(resetStore));\r\n\r\nexport const removedBarrier = guard({\r\n  source: sample({\r\n    source: $barriers,\r\n    clock: removeBarrierItem,\r\n    fn: (state, index) => state.find((item) => item.getIndex() === index),\r\n  }),\r\n  filter: Boolean,\r\n});\r\n\r\nremovedBarrier.watch((item) => item.remove());\r\n\r\n$barriers\r\n  .on(setBarrier, (state, index) => {\r\n    const barrier = new Barier(index);\r\n\r\n    const isFindIndex = state.find((item) => item.getIndex() === index);\r\n\r\n    return isFindIndex ? state : [...state, barrier];\r\n  })\r\n  .on(removedBarrier, (state, removed) =>\r\n    state.filter((item) => item !== removed)\r\n  );\r\n\r\n$startEndPosition\r\n  .on(triggerStartPosition, (state, index) => [index, state[1]])\r\n  .on(triggerEndPosition, (state, index) => [state[0], index]);\r\n\r\nexport const $graph = combine({\r\n  barrier: $barriers,\r\n  startEndPosition: $startEndPosition,\r\n}).map((state) => {\r\n  const [start, end] = state.startEndPosition;\r\n\r\n  const graph = graphControll.createGraph();\r\n\r\n  setBarrierToGraph(graph, state.barrier);\r\n  setStartPositionToGraph(graph, start);\r\n  setEndPositionToGraph(graph, end);\r\n\r\n  return { ...state, graph: graph.graph };\r\n});\r\n","import { ceilType } from \"../config\";\r\n\r\nexport const canVisitedVertex = (vertex) => {\r\n  if (vertex.type !== ceilType.BARIER) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport function restorePath(endIndex, startIndex, parent) {\r\n  const path = [];\r\n  let target = parent[endIndex];\r\n\r\n  while (target && target !== startIndex) {\r\n    path.unshift(target);\r\n    target = parent[target];\r\n  }\r\n\r\n  if (path.length > 0) {\r\n    path.push(endIndex);\r\n  }\r\n\r\n  path.unshift(startIndex);\r\n\r\n  return path;\r\n}\r\n\r\nexport function removeDoubleVertex(target) {\r\n  return target.reduce((acc, row) => {\r\n    acc.push(row.filter((el) => !acc.some((accRow) => accRow.includes(el))));\r\n    return acc;\r\n  }, []);\r\n}\r\n","export class AlgoritmController {\r\n  constructor() {\r\n    this.count = 0;\r\n    this.processing = [];\r\n    this.visited = [];\r\n  }\r\n\r\n  increment() {\r\n    this.count++;\r\n  }\r\n\r\n  addToProcessing(processing) {\r\n    this.processing.push([...processing]);\r\n  }\r\n\r\n  addToVisited(visited) {\r\n    this.visited.push([...visited]);\r\n  }\r\n\r\n  getAlgotitmResult() {\r\n    return this;\r\n  }\r\n}\r\n","import { graphControll } from \"../graph\";\r\nimport { canVisitedVertex, restorePath } from \"./utils\";\r\nimport { AlgoritmController } from \"./controller\";\r\n\r\nexport function breadthFirstSearch(startIndex, endIndex, graph) {\r\n  const aInfo = new AlgoritmController();\r\n\r\n  let isWork = true;\r\n  const queue = [startIndex];\r\n  const visited = [startIndex];\r\n  const parent = {};\r\n\r\n  while (isWork && queue.length > 0) {\r\n    const currentIndex = queue.shift();\r\n\r\n    aInfo.addToVisited(visited);\r\n\r\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\r\n      const next = graph[currentIndex].siblings[i];\r\n      const vertex = graphControll.getVertexByIndex(next);\r\n\r\n      if (!visited.includes(next) && canVisitedVertex(vertex)) {\r\n        queue.push(next);\r\n        visited.push(next);\r\n\r\n        parent[next] = currentIndex;\r\n        aInfo.increment();\r\n      }\r\n\r\n      if (next === endIndex) {\r\n        isWork = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    aInfo.addToProcessing(queue);\r\n  }\r\n\r\n  const result = aInfo.getAlgotitmResult();\r\n  const path = restorePath(endIndex, startIndex, parent);\r\n\r\n  return {\r\n    path,\r\n    ...result,\r\n  };\r\n}\r\n","import { graphControll } from \"../graph\";\r\nimport { canVisitedVertex, restorePath } from \"./utils\";\r\nimport { AlgoritmController } from \"./controller\";\r\n\r\nexport function depthFirstSearch(startIndex, endIndex, graph) {\r\n  const aInfo = new AlgoritmController();\r\n\r\n  let isWork = true;\r\n  const stack = [startIndex];\r\n  const visited = [startIndex];\r\n  const parent = {};\r\n\r\n  while (isWork && stack.length > 0) {\r\n    const currentIndex = stack.shift();\r\n\r\n    aInfo.addToVisited(visited);\r\n\r\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\r\n      const next = graph[currentIndex].siblings[i];\r\n      const vertex = graphControll.getVertexByIndex(next);\r\n\r\n      if (!visited.includes(next) && canVisitedVertex(vertex)) {\r\n        stack.unshift(next);\r\n        visited.push(next);\r\n\r\n        parent[next] = currentIndex;\r\n        aInfo.increment();\r\n      }\r\n\r\n      if (next === endIndex) {\r\n        isWork = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    aInfo.addToProcessing(stack);\r\n  }\r\n\r\n  const result = aInfo.getAlgotitmResult();\r\n  const path = restorePath(endIndex, startIndex, parent);\r\n\r\n  return {\r\n    path,\r\n    ...result,\r\n  };\r\n}\r\n","import {\r\n  createStore,\r\n  combine,\r\n  createEvent,\r\n  restore,\r\n  createDomain,\r\n} from \"effector\";\r\nimport { breadthFirstSearch } from \"./bred-first-search\";\r\nimport { depthFirstSearch } from \"./depth-first-search\";\r\nimport { clearCanvas, resetStore } from \"../graph\";\r\nimport { setGameStatus, gameStatus } from \"../game\";\r\n\r\nconst algoritmsDomain = createDomain();\r\n\r\nexport const selectAlgoritm = createEvent();\r\n\r\nexport const $currentAlgoritm = restore(selectAlgoritm, \"bredth first search\");\r\n\r\nexport const $algoritms = createStore([\r\n  {\r\n    searchFunction: breadthFirstSearch,\r\n    name: \"bredth first search\",\r\n  },\r\n  {\r\n    searchFunction: depthFirstSearch,\r\n    name: \"depth first search\",\r\n  },\r\n]);\r\n\r\nexport const $searchAlgoritm = combine(\r\n  $currentAlgoritm,\r\n  $algoritms,\r\n  (currentAlgoritm, algoritms) =>\r\n    algoritms.find((algoritm) => algoritm.name === currentAlgoritm)\r\n);\r\n\r\nalgoritmsDomain.onCreateStore((store) => store.reset(clearCanvas, resetStore));\r\n\r\nselectAlgoritm.watch(() => setGameStatus(gameStatus.END_GAME));\r\n","import { sample, guard, restore, forward, createDomain } from \"effector\";\r\nimport { $graph, resetStore, clearCanvas } from \"../graph\";\r\nimport { $searchAlgoritm } from \"../algoritms/model\";\r\nimport { canvasControl } from \"../control-canvas\";\r\nimport { removeDoubleVertex } from \"../algoritms\";\r\n\r\nexport const gameStatus = {\r\n  START: \"START\",\r\n  RESTART: \"RESTART\",\r\n  PAUSE: \"PAUSE\",\r\n  RESUME: \"RESUME\",\r\n  CLEAR: \"CLEAR\",\r\n  END_GAME: \"END_GAME\",\r\n};\r\n\r\nconst gameDomain = createDomain(\"game\");\r\n\r\nexport const setGameStatus = gameDomain.event();\r\nexport const setTimer = gameDomain.event();\r\n\r\nexport const $path = gameDomain.store({}).reset(resetStore, clearCanvas);\r\nexport const $currentTimer = restore(setTimer, 16).reset(resetStore);\r\n\r\nexport const $gameState = restore(setGameStatus, gameStatus.END_GAME).reset(\r\n  resetStore\r\n);\r\n\r\nexport const startGame = guard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.START),\r\n});\r\n\r\nguard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.CLEAR),\r\n  target: resetStore,\r\n});\r\n\r\nexport const endGame = guard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.END_GAME),\r\n});\r\n\r\nsample({\r\n  source: {\r\n    graph: $graph,\r\n    algoritm: $searchAlgoritm,\r\n  },\r\n  clock: startGame,\r\n  target: $path,\r\n  fn: ({ graph, algoritm }) => {\r\n    const [start, end] = graph.startEndPosition;\r\n\r\n    clearCanvas();\r\n\r\n    const time = window.performance.now();\r\n\r\n    const result = algoritm.searchFunction(start, end, graph.graph);\r\n\r\n    const timeEnd = window.performance.now() - time;\r\n\r\n    return {\r\n      ...result,\r\n      visited: removeDoubleVertex(result.visited),\r\n      processing: removeDoubleVertex(result.processing),\r\n      timeEnd,\r\n    };\r\n  },\r\n});\r\n","import { getPositionByIndex, drawSquare } from \"../config\";\r\n\r\nexport function checkGameStatus(target, ...status) {\r\n  return status.some((item) => target === item);\r\n}\r\n\r\nexport function renderVisitedVertex(barrier, context, color) {\r\n  for (let i = 0; i < barrier.length; i++) {\r\n    const [x, y] = getPositionByIndex(barrier[i]);\r\n    drawSquare({\r\n      position: [x, y],\r\n      context,\r\n      color,\r\n    });\r\n  }\r\n}\r\n","import { clearCanvas } from \"../graph\";\r\nimport { renderPath } from \"../canvas\";\r\nimport {\r\n  gameStatus,\r\n  $path,\r\n  setGameStatus,\r\n  $gameState,\r\n  $currentTimer,\r\n} from \"./model\";\r\nimport { renderVisitedVertex } from \"./utils\";\r\n\r\nexport class GameLoop {\r\n  constructor() {\r\n    this.count = 1;\r\n    this.animateId = null;\r\n  }\r\n\r\n  start(path, context) {\r\n    const { visited, processing } = path;\r\n    const gameState = $gameState.getState();\r\n    const fps = $currentTimer.getState();\r\n\r\n    clearTimeout(this.animateId);\r\n\r\n    if (gameState === gameStatus.END_GAME) {\r\n      return;\r\n    }\r\n\r\n    if (gameState === gameStatus.PAUSE) {\r\n      clearTimeout(this.animateId);\r\n      return;\r\n    }\r\n\r\n    if (this.count < visited.length) {\r\n      renderVisitedVertex(visited[this.count], context, \"#afeeee\");\r\n\r\n      if (this.count < visited.length - 1) {\r\n        renderVisitedVertex(\r\n          processing[this.count],\r\n          context,\r\n          \"rgb(152, 251, 152)\"\r\n        );\r\n      }\r\n\r\n      this.animateId = setInterval(\r\n        () => this.start({ visited, processing }, context),\r\n        this.getFps(fps)\r\n      );\r\n\r\n      clearCanvas.watch(() => clearTimeout(this.animateId));\r\n\r\n      this.count++;\r\n    } else {\r\n      setGameStatus(gameStatus.END_GAME);\r\n      this.clear();\r\n      const { path } = $path.getState();\r\n      renderPath({\r\n        path,\r\n        context,\r\n      });\r\n    }\r\n  }\r\n\r\n  getFps(fps) {\r\n    const newFps = fps === 1 ? fps : fps * 10;\r\n    return 1000 / newFps;\r\n  }\r\n\r\n  clear() {\r\n    this.count = 1;\r\n    this.animateId = null;\r\n  }\r\n\r\n  removeAnimation() {\r\n    clearTimeout(this.animateId);\r\n  }\r\n}\r\n\r\nexport const gameLoop = new GameLoop();\r\n","import { guard, sample, merge, combine, forward } from \"effector\";\r\nimport {\r\n  colorSchema,\r\n  cellSize,\r\n  pageHeight,\r\n  pageWidth,\r\n  borderSize,\r\n  getLocalSize,\r\n  getGlobalSize,\r\n  drawSquare,\r\n  clearALlCanvas,\r\n  getPositionByIndex,\r\n  getIndexByPosition,\r\n  ceilType,\r\n  convertLocalPositionToGlobal,\r\n} from \"./config\";\r\nimport { configureCanvas } from \"./config-canvas\";\r\nimport { canvasControl } from \"./control-canvas\";\r\nimport {\r\n  setBarrier,\r\n  removeBarrierItem,\r\n  triggerStartPosition,\r\n  triggerEndPosition,\r\n  $graph,\r\n  resetStore,\r\n  clearCanvas,\r\n} from \"./graph\";\r\n\r\nimport { gameStatus, $gameState, gameLoop, $path } from \"./game\";\r\n\r\nconst $algoritState = combine({\r\n  gameState: $gameState,\r\n  path: $path,\r\n});\r\n\r\nexport function renderBarrier(barrier, context) {\r\n  for (let i = 0; i < barrier.length; i++) {\r\n    barrier[i].render(context);\r\n  }\r\n}\r\n\r\nfunction renderActionsCeil(startEndPosition, context) {\r\n  for (let i = 0; i < startEndPosition.length; i++) {\r\n    const index = getPositionByIndex(startEndPosition[i]);\r\n    drawSquare({\r\n      position: index,\r\n      context,\r\n      color: colorSchema.startEndColor[i],\r\n    });\r\n  }\r\n}\r\n\r\nfunction renderCeil(event, state) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  const [startIndex, endIndex] = state.startEndPosition;\r\n\r\n  return {\r\n    renderForMove: () => {\r\n      if (index !== startIndex && index !== endIndex) {\r\n        setBarrier(index);\r\n      }\r\n    },\r\n    renderForClick: () => {\r\n      if (index !== startIndex && index !== endIndex) {\r\n        removeBarrierItem(index);\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nfunction renderStart(index, state) {\r\n  const findIndex = state.barrier.find((barrier) => barrier.index === index);\r\n  const [, endIndex] = state.startEndPosition;\r\n\r\n  if (!findIndex && index !== endIndex) {\r\n    triggerStartPosition(index);\r\n  }\r\n}\r\n\r\nfunction renderEnd(index, state) {\r\n  const findIndex = state.barrier.find((barrier) => barrier.index === index);\r\n  const [startIndex] = state.startEndPosition;\r\n\r\n  if (!findIndex && index !== startIndex) {\r\n    triggerEndPosition(index);\r\n  }\r\n}\r\n\r\nlet type = null;\r\nfunction renderLogic(event) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n  const state = $graph.getState();\r\n\r\n  if (!type) {\r\n    type = state.graph[index].type;\r\n  }\r\n\r\n  switch (type) {\r\n    case ceilType.BARIER:\r\n      return renderCeil(event, state).renderForClick();\r\n    case ceilType.START_POSITION:\r\n      return renderStart(index, state);\r\n    case ceilType.END_POSITION:\r\n      return renderEnd(index, state);\r\n    case ceilType.EMPTY:\r\n      return renderCeil(event, state).renderForMove();\r\n  }\r\n}\r\n\r\nexport function renderCanvas(canvas, context) {\r\n  const localSize = getLocalSize(pageWidth, pageHeight);\r\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\r\n  const gridData = buildGrid(context);\r\n\r\n  configureCanvas(canvas, globalSize);\r\n\r\n  canvasControl.registerClickEventToCanvas(canvas);\r\n  canvasControl.addMouseMoveEvent((e, s) => {\r\n    return renderLogic(e, s);\r\n  });\r\n  canvasControl.addMouseUpEvent(() => (type = null));\r\n  canvasControl.addMouseClickEvent((e, s) => renderCeil(e, s).renderForClick());\r\n\r\n  function render(state) {\r\n    clearALlCanvas(context, canvas);\r\n    canvasControl.setState(state);\r\n\r\n    renderActionsCeil(state.startEndPosition, context);\r\n    renderBarrier(state.barrier, context);\r\n\r\n    gridData.applyStyles();\r\n    context.stroke(gridData.grid);\r\n  }\r\n\r\n  $graph.watch(render);\r\n\r\n  sample({\r\n    source: $graph,\r\n    clock: merge([resetStore, clearCanvas]),\r\n  }).watch(render);\r\n\r\n  $algoritState.watch(({ canDrowAnimated, gameState, path }) => {\r\n    if (path.timeEnd) {\r\n      if (gameState === gameStatus.START) {\r\n        gameLoop.clear();\r\n      }\r\n\r\n      gameLoop.removeAnimation();\r\n      gameLoop.start(path, context);\r\n    }\r\n  });\r\n}\r\n\r\nlet prev = null;\r\nexport function renderPath({ context, path = [], color = \"green\" }) {\r\n  for (let i = 0; i < path.length; i++) {\r\n    const position = getPositionByIndex(path[i]);\r\n    const [x, y] = convertLocalPositionToGlobal(position);\r\n\r\n    if (prev) {\r\n      context.beginPath();\r\n      context.strokeStyle = color;\r\n      context.lineWidth = 2;\r\n      context.moveTo(prev[0], prev[1]);\r\n      context.lineTo(x + cellSize / 2, y + cellSize / 2);\r\n      context.stroke();\r\n    }\r\n\r\n    prev = [x + cellSize / 2, y + cellSize / 2];\r\n  }\r\n\r\n  prev = null;\r\n}\r\n\r\nfunction buildGrid(context) {\r\n  const grid = new Path2D();\r\n\r\n  const localSize = getLocalSize(pageWidth, pageHeight);\r\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\r\n\r\n  for (let i = 0; i <= localSize.w; i++) {\r\n    grid.moveTo(i * cellSize + borderSize, 0);\r\n    grid.lineTo(i * cellSize + borderSize, globalSize.h);\r\n  }\r\n\r\n  for (let i = 0; i <= localSize.h; i++) {\r\n    grid.moveTo(0, i * cellSize + borderSize);\r\n    grid.lineTo(globalSize.w, i * cellSize + borderSize);\r\n  }\r\n\r\n  return {\r\n    grid,\r\n    applyStyles: () => {\r\n      context.lineWidth = borderSize;\r\n      context.strokeStyle = colorSchema.borderColor;\r\n    },\r\n  };\r\n}\r\n\r\nconst canvas = document.getElementById(\"viewport\");\r\n\r\nif (canvas) {\r\n  const context = canvas.getContext(\"2d\");\r\n\r\n  renderCanvas(canvas, context);\r\n}\r\n","import { getTargetIndex } from \"./config\";\r\nimport { $gameState, gameStatus, checkGameStatus } from \"./game\";\r\n\r\nclass Controll {\r\n  constructor() {\r\n    this.isMouseDown = false;\r\n    this.isMouseMove = false;\r\n    this.listeners = [];\r\n    this.state = {};\r\n    this.lastIndex = null;\r\n    this.disabledListeners = [];\r\n  }\r\n\r\n  init() {\r\n    $gameState.watch((state) => {\r\n      if (\r\n        checkGameStatus(\r\n          state,\r\n          gameStatus.START,\r\n          gameStatus.PAUSE,\r\n          gameStatus.RESUME\r\n        )\r\n      ) {\r\n        this.disabledListener();\r\n      } else {\r\n        this.includeListener();\r\n      }\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  registerClickEventToCanvas(canvas) {\r\n    canvas.addEventListener(\"mousedown\", (event) => {\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"mousedown\")\r\n        .forEach((userEvent) => userEvent.eventListener());\r\n\r\n      this.isMouseDown = true;\r\n      this.isMouseMove = false;\r\n    });\r\n\r\n    canvas.addEventListener(\"mouseup\", (event) => {\r\n      this.isMouseDown = false;\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"mouseup\")\r\n        .forEach((userEvent) => userEvent.eventListener(event, this.state));\r\n    });\r\n\r\n    canvas.addEventListener(\"click\", (event) => {\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"click\")\r\n        .forEach((userEvent) => {\r\n          if (!this.isMouseMove) {\r\n            userEvent.eventListener(event, this.state);\r\n          }\r\n        });\r\n    });\r\n\r\n    canvas.addEventListener(\"mousemove\", (event) => {\r\n      const index = getTargetIndex(event);\r\n\r\n      if (this.isMouseDown && index !== this.lastIndex) {\r\n        this.lastIndex = index;\r\n        this.isMouseMove = true;\r\n        this.listeners\r\n          .filter((userEvent) => userEvent.type === \"mousemove\")\r\n          .forEach((userEvent) =>\r\n            userEvent.eventListener(event, this.state, this.lastIndex)\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  disabledListener() {\r\n    this.clear();\r\n  }\r\n\r\n  includeListener() {\r\n    this.listeners = this.disabledListeners;\r\n  }\r\n\r\n  addMouseDownEvent(eventListener) {\r\n    this.listeners.push({ type: \"mousedown\", eventListener });\r\n  }\r\n\r\n  addMouseUpEvent(eventListener) {\r\n    this.listeners.push({ type: \"mouseup\", eventListener });\r\n  }\r\n\r\n  addMouseMoveEvent(eventListener) {\r\n    this.listeners.push({ type: \"mousemove\", eventListener });\r\n  }\r\n\r\n  addMouseClickEvent(eventListener) {\r\n    this.listeners.push({ type: \"click\", eventListener });\r\n  }\r\n\r\n  setState(state) {\r\n    this.state = state;\r\n    return this;\r\n  }\r\n\r\n  clear() {\r\n    if (this.listeners.length > 0) {\r\n      this.disabledListeners = this.listeners;\r\n      this.isMouseDown = false;\r\n      this.isMouseMove = false;\r\n      this.listeners = [];\r\n      this.lastIndex = null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const canvasControl = new Controll();\r\ncanvasControl.init();\r\n","export function configureCanvas(canvas, { w, h }) {\r\n  canvas.height = h;\r\n  canvas.width = w;\r\n}\r\n","import React from \"react\";\r\nimport { useStore } from \"effector-react\";\r\nimport Draggable from \"react-draggable\";\r\nimport { renderCanvas } from \"./canvas\";\r\nimport {\r\n  setGameStatus,\r\n  gameStatus,\r\n  $gameState,\r\n  $path,\r\n  endGame,\r\n  $currentTimer,\r\n  setTimer,\r\n  checkGameStatus,\r\n} from \"./game\";\r\nimport {\r\n  $algoritms,\r\n  selectAlgoritm,\r\n  $currentAlgoritm,\r\n} from \"./algoritms/model\";\r\n\r\nimport \"./styles.css\";\r\nimport { sample, createStore, guard } from \"effector\";\r\n\r\nconst $store = createStore({});\r\n\r\nsample({\r\n  source: $path,\r\n  clock: endGame,\r\n  target: $store,\r\n});\r\n\r\nexport default function App() {\r\n  const algoritms = useStore($algoritms);\r\n  const currentAlgoritm = useStore($currentAlgoritm);\r\n  const gameState = useStore($gameState);\r\n  const store = useStore($store);\r\n  const currentTimer = useStore($currentTimer);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Draggable>\r\n        <div className=\"select-bar\">\r\n          <h2 className=\"select-bar_title\">Информация:</h2>\r\n          <div className=\"info-wrapper\">\r\n            <h3 className=\"select-bar_info\">\r\n              Количество итераций: <span>{store?.count || 0}</span>\r\n            </h3>\r\n            <h3 className=\"select-bar_info\">\r\n              Время прохождения:\r\n              <span> {store?.timeEnd?.toFixed(4) || 0} ms</span>\r\n            </h3>\r\n            <h3 className=\"select-bar_info\">\r\n              Длина пути: <span>{store?.path?.length || 0}</span>\r\n            </h3>\r\n          </div>\r\n          <h2 className=\"select-bar_title\">Выбирите алгоритм:</h2>\r\n          <ul>\r\n            {algoritms.map((algoritm, index) => (\r\n              <li\r\n                onClick={() => selectAlgoritm(algoritm.name)}\r\n                className={currentAlgoritm === algoritm.name ? \"isActive\" : \"\"}\r\n                key={algoritm.name}\r\n              >\r\n                {algoritm.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div className=\"btn-wrapper\">\r\n            <button\r\n              className=\"btn\"\r\n              onClick={() => setGameStatus(gameStatus.START)}\r\n            >\r\n              Старт\r\n            </button>\r\n            {checkGameStatus(\r\n              gameState,\r\n              gameStatus.START,\r\n              gameStatus.PAUSE,\r\n              gameStatus.RESUME\r\n            ) && (\r\n              <>\r\n                <button\r\n                  className=\"btn\"\r\n                  onClick={() => setGameStatus(gameStatus.PAUSE)}\r\n                >\r\n                  Пауза\r\n                </button>\r\n\r\n                <button\r\n                  className=\"btn\"\r\n                  onClick={() => setGameStatus(gameStatus.RESUME)}\r\n                >\r\n                  Продолжить\r\n                </button>\r\n              </>\r\n            )}\r\n\r\n            <button\r\n              className=\"btn\"\r\n              onClick={() => setGameStatus(gameStatus.CLEAR)}\r\n            >\r\n              Очистить\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"info-wrapper\">\r\n            <h3 className=\"select-bar_info\">\r\n              Скорость: <span>{currentTimer}</span>\r\n            </h3>\r\n            <input\r\n              type=\"number\"\r\n              value={currentTimer}\r\n              max=\"20\"\r\n              min=\"1\"\r\n              maxLength=\"2\"\r\n              onChange={({ target }) => {\r\n                setTimer(parseInt(target.value));\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Draggable>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n\r\nexport * from \"./algoritms\";\r\nexport * from \"./graph\";\r\nexport * from \"./game\";\r\n"],"sourceRoot":""}