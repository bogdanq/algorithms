{"version":3,"sources":["config.js","game/animations.js","game/barrier.js","graph/controller.js","graph/utils.js","graph/model.js","algoritms/utils.js","algoritms/controller.js","algoritms/bred-first-search.js","algoritms/depth-first-search.js","algoritms/dijkstra.js","algoritms/model.js","game/utils.js","game/model.js","game/loop.js","canvas.js","control-canvas.js","config-canvas.js","gui/ui/molecules/modal-wrapper.js","gui/ui/atoms/icon.js","gui/ui/atoms/text.js","gui/ui/atoms/default-button.js","gui/ui/containers/flex-wrapper.js","gui/ui/atoms/default-switch.js","gui/ui/molecules/settings.js","gui/ui/molecules/info.js","gui/ui/molecules/about-algoritms.js","gui/ui/molecules/information-about-algoritm.js","gui/ui/molecules/select.js","gui/ui/organisms/history.js","gui/ui/organisms/info-block.js","gui/ui/organisms/code-area/model.js","gui/ui/organisms/code-area/code-string.js","gui/ui/organisms/code-area/index.js","App.js","global-css.js","index.js"],"names":["cellSize","pageWidth","window","innerWidth","pageHeight","innerHeight","borderSize","colorSchema","borderColor","blockColor","startEndColor","ceilType","START_POSITION","END_POSITION","BARIER","EMPTY","WATER","getLocalSize","w","h","Math","floor","getGlobalSize","convertLocalPositionToGlobal","_ref","_ref2","Object","slicedToArray","x","y","drawSquare","_ref3","_ref3$color","color","position","context","width","_convertLocalPosition","_convertLocalPosition2","size","fillStyle","fillRect","getIndexByPosition","_ref4","_ref5","getPositionByIndex","index","drawSquareWithAnimation","params","animateId","_params$position","_params$scale","scale","requestAnimationFrame","objectSpread2","cancelAnimationFrame","drawMarkerWithAnimation","_params$width","_ref6","_ref6$color","_convertLocalPosition3","_convertLocalPosition4","strokeStyle","beginPath","moveTo","lineTo","stroke","drawMark","Barier","classCallCheck","this","canDrawe","canRemove","createClass","key","value","arguments","length","undefined","graphControll","Graph","graph","cellCount","lastIndex","canMoveDiagonal","clear","type","siblings","getSiblings","map","item","vertex","weight","filter","Boolean","left","getLeftSibling","top","getTopSibling","right","getRightSibling","down","getDownSibling","getTopLeftDiagonal","getTopRightDiagonal","getBotRightDiagonal","getBotLeftDiagonal","bot","_getLocalSize","setBarrierToGraph","barriers","forEach","barrier","updateGraph","getIndex","setStartPositionToGraph","startIndex","setEndPositionToGraph","endIndex","setWaterToGraph","waterBarriers","graphDomain","createDomain","resetStore","event","clearCanvas","changeDirection","setBarrierType","setBarrier","removeBarrierItem","triggerStartPosition","triggerEndPosition","$startEndPosition","store","$canMoveDiagonal","$barrierType","restore","$barriersList","_graphDomain$store","defineProperty","$barriers","combine","barrierType","barriersList","on","state","onCreateStore","reset","removedBarrier","guard","source","sample","clock","fn","findedBarrier","find","watch","remove","isFindIndex","concat","toConsumableArray","$graph","startEndPosition","_state$startEndPositi","start","end","createGraph","canVisitedVertex","restorePath","historyPath","path","lastStep","unshift","removeDoubleVertex","target","reduce","acc","row","push","el","some","accRow","includes","getVertexWeight","AlgoritmController","count","processing","dejkstra","visited","updateProcessing","values","breadthFirstSearch","aInfo","prevIndex","isWork","queue","parent","currentIndex","shift","addVertex","i","next","getVertexByIndex","increment","result","getAlgotitmResult","depthFirstSearch","stack","dijkstra","priorityQueue","PriorityQueue","a","b","Map","add","isEmpty","_priorityQueue$poll","poll","currentVertex","sibling","nextWeight","get","set","restoredPath","algoritmsDomain","selectAlgoritm","createEvent","addVisitedVertex","addProcessedVertex","addCustomAlgoritm","$currentAlgoritm","$visitedVertex","$processedVertex","_","processed","$algoritms","createStore","searchFunction","name","modal","foo","algoritm","$searchAlgoritm","currentAlgoritm","algoritms","checkGameStatus","status","renderVisitedVertex","_getPositionByIndex","_getPositionByIndex2","renderVisitedVertexByArr","_getPositionByIndex3","_getPositionByIndex4","filtredFps","fps","fpsVariant","equal","nextGame","hasNewBarriers","nextBarriers","_state","checkBarriers","nextPosition","_position","equalPosition","lastPosition","apply","checkPosition","setGameStatus","gameStatus","END_GAME","START","RESTART","PAUSE","RESUME","CLEAR","RESET","gameDomain","setTimer","setHistoryGame","recoveryHistoryGame","setCurrentGame","$path","$historyGame","$currentTimer","date","Date","$currentGame","$gameState","startGame","resumeGame","endGame","restoredHistoryGame","sampleForHistoryGame","historyGame","game","_graph$startEndPositi","time","performance","now","timeEnd","tickFx","createEffect","use","Promise","rs","setTimeout","createTick","$state","$animationCount","tickWithParams","attach","effect","mapParams","$combineState","animationCount","done","animatedVisitedVertex","merge","_state$processing","_ref4$path","_ref4$color","prev","lineWidth","renderPath","canvasControl","Controll","isMouseDown","isMouseMove","listeners","disabledListeners","_this","disabledListener","includeListener","canvas","_this2","addEventListener","userEvent","eventListener","_getLocalSize3","clientX","clientY","getTargetIndex","init","$mainState","visitedVertex","processedVertex","renderCeil","renderForMove","renderForClick","renderLogic","_getLocalSize2","findIndex","renderStart","renderEnd","document","getElementById","getContext","localSize","globalSize","gridData","grid","Path2D","applyStyles","buildGrid","render","clearRect","height","clearALlCanvas","setState","renderActionsCeil","renderWater","renderBar","renderBarrier","configureCanvas","registerClickEventToCanvas","addMouseMoveEvent","addMouseUpEvent","addMouseClickEvent","e","s","renderCanvas","ModalWrapper","isOpen","onRequestClose","children","react_default","createElement","lib_default","closeTimeoutMS","StyledRootWrapper","onClick","StyledWrapper","StyledInner","stopPropagation","CloseModal","ReactModal","setAppElement","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","Icon","icon_templateObject","Text","p","text_templateObject","Button","icon","_ref$size","_ref$variant","variant","_ref$color","style","fontSize","startIcon","FlexContainer","flex_wrapper_templateObject","direction","Left","flex_wrapper_templateObject2","Switch","label","_ref$name","rest","objectWithoutProperties","cursor","FormControlLabel","control","assign","Settings","_React$useState","React","useState","_React$useState2","setOpen","Fragment","icon_Icon","fi_index_esm","Info","InfoModal","ColorBlock","info_templateObject","AboutAlgoritms","InfoAboutAlgoritmApi","codeString","_React$useReducer","useReducer","_React$useReducer2","toggle","default_button_Button","Wrapper","href","default_highlight","language","docco","information_about_algoritm_templateObject","css","information_about_algoritm_templateObject2","information_about_algoritm_templateObject3","SelectBarrierType","useStore","handleChange","useCallback","Select","onChange","MenuItem","History","HistoryIcon","historyCount","fa_index_esm","HistoryList","currentGame","handleChangeItem","HistoryListWrapper","HistoryItem","active","toString","history_templateObject","history_templateObject2","history_templateObject3","history_templateObject4","_templateObject5","info_block_templateObject","InfoDraggable","react_draggable_default","info_block_Wrapper","handleChangeCode","$code","newAlg","newRe","newCan","newGraph","CodeArea","code","handleChangeAlgoritm","Function","$store","App","_store$timeEnd","_store$path","gameState","currentTimer","className","disabled","toFixed","GrResume","GrPause","GrPlay","GrClear","borderTop","TextField","parseInt","default_switch_Switch","checked","App_CustomAlgoritmModal","CustomAlgoritmModal","globalCss","global_css_templateObject","GlobalModalStyles","createGlobalStyle","global_css_templateObject2","__webpack_require__","d","__webpack_exports__","utils_canVisitedVertex","barrier_Barier","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.dabc3c7d.chunk.js","sourcesContent":["export const cellSize = 35;\r\nexport const pageWidth = window.innerWidth;\r\nexport const pageHeight = window.innerHeight;\r\nexport const borderSize = 0.5;\r\nexport const boardLength = pageWidth * pageHeight;\r\nexport const startPosition = 0;\r\nexport const endPosition = 17;\r\n\r\nexport const colorSchema = {\r\n  borderColor: \"#000\",\r\n  blockColor: \"#bbbbbb\",\r\n  startEndColor: [\"green\", \"red\"],\r\n};\r\n\r\nexport const ceilType = {\r\n  START_POSITION: \"START_POSITION\",\r\n  END_POSITION: \"END_POSITION\",\r\n  BARIER: \"BARIER\",\r\n  EMPTY: \"EMPTY\",\r\n  WATER: \"WATER\",\r\n};\r\n\r\nexport function getLocalSize(w, h) {\r\n  return {\r\n    w: Math.floor(w / cellSize),\r\n    h: Math.floor(h / cellSize),\r\n  };\r\n}\r\n\r\nexport function getGlobalSize(w, h) {\r\n  return {\r\n    w: Math.floor(w * cellSize),\r\n    h: Math.floor(h * cellSize),\r\n  };\r\n}\r\n\r\nexport function convertLocalPositionToGlobal([x, y]) {\r\n  return [x * cellSize, y * cellSize];\r\n}\r\n\r\nexport function drawSquare({\r\n  color = \"rgb(152, 251, 152)\",\r\n  position,\r\n  context,\r\n  width,\r\n}) {\r\n  const [x, y] = convertLocalPositionToGlobal(position);\r\n  const size = width || cellSize - borderSize * 2;\r\n\r\n  context.fillStyle = color;\r\n  context.fillRect(x + borderSize * 2, y + borderSize * 2, size, size);\r\n}\r\n\r\nexport function clearALlCanvas(context, canvas) {\r\n  return context.clearRect(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\nexport function getIndexByPosition([x, y]) {\r\n  const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n  return y * w + x;\r\n}\r\n\r\nexport function getPositionByIndex(index) {\r\n  const { w } = getLocalSize(pageWidth, pageHeight);\r\n  const y = Math.floor(index / w);\r\n  const x = index - y * w;\r\n\r\n  return [x, y];\r\n}\r\n\r\nexport function getTargetIndex(event) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  return index;\r\n}\r\n\r\nexport function drawMark({ color = \"#e84a4a\", position, context }) {\r\n  const [x, y] = convertLocalPositionToGlobal(position);\r\n\r\n  context.strokeStyle = color;\r\n\r\n  context.beginPath();\r\n  context.moveTo(x + 10, y + 10);\r\n  context.lineTo(x + cellSize - 10, y + cellSize - 10);\r\n  context.stroke();\r\n\r\n  context.beginPath();\r\n  context.moveTo(x + cellSize - 10, y + 10);\r\n  context.lineTo(x + 10, y + cellSize - 10);\r\n  context.stroke();\r\n}\r\n","import { drawSquare, drawMark, cellSize } from \"../config\";\r\n\r\nexport function drawSquareWithAnimation(params) {\r\n  let animateId;\r\n  let {\r\n    position: [x, y],\r\n    width,\r\n    scale = 0.3,\r\n  } = params;\r\n\r\n  if (width < cellSize) {\r\n    animateId = requestAnimationFrame(() =>\r\n      drawSquareWithAnimation({\r\n        ...params,\r\n        width,\r\n        scale,\r\n      })\r\n    );\r\n\r\n    drawSquare({\r\n      ...params,\r\n      position: [x + scale, y + scale],\r\n    });\r\n\r\n    if (scale > 0 && width % 5 === 0) {\r\n      scale = scale - 0.1;\r\n    }\r\n\r\n    width++;\r\n  } else {\r\n    cancelAnimationFrame(animateId);\r\n  }\r\n}\r\n\r\nexport function drawMarkerWithAnimation(params) {\r\n  let { width = cellSize - 10 } = params;\r\n  let animateId;\r\n\r\n  if (width < cellSize) {\r\n    animateId = requestAnimationFrame(() =>\r\n      drawMarkerWithAnimation({\r\n        ...params,\r\n        width,\r\n      })\r\n    );\r\n\r\n    drawMark({\r\n      ...params,\r\n      width,\r\n    });\r\n\r\n    width++;\r\n  } else {\r\n    drawSquare({\r\n      ...params,\r\n      color: \"#fff\",\r\n      width: 0,\r\n    });\r\n\r\n    cancelAnimationFrame(animateId);\r\n  }\r\n}\r\n","import { getPositionByIndex, drawSquare, colorSchema } from \"../config\";\r\nimport { drawSquareWithAnimation, drawMarkerWithAnimation } from \"./animations\";\r\n\r\nexport class Barier {\r\n  constructor(index) {\r\n    this.index = index;\r\n    this.canDrawe = false;\r\n    this.context = null;\r\n    this.canRemove = false;\r\n    this.position = false;\r\n  }\r\n\r\n  getBarier() {\r\n    return this;\r\n  }\r\n\r\n  getIndex() {\r\n    return this.index;\r\n  }\r\n\r\n  render(context, color = colorSchema.blockColor) {\r\n    this.context = context;\r\n    this.position = getPositionByIndex(this.index);\r\n\r\n    if (!this.canRemove) {\r\n      if (!this.canDrawe) {\r\n        drawSquareWithAnimation({\r\n          position: this.position,\r\n          context,\r\n          color,\r\n          width: 20,\r\n        });\r\n      } else {\r\n        drawSquare({\r\n          position: this.position,\r\n          context,\r\n          color,\r\n        });\r\n      }\r\n\r\n      this.canDrawe = true;\r\n    }\r\n  }\r\n\r\n  remove() {\r\n    this.canRemove = true;\r\n\r\n    drawMarkerWithAnimation({\r\n      position: this.position,\r\n      context: this.context,\r\n    });\r\n\r\n    this.canRemove = false;\r\n  }\r\n}\r\n","import { ceilType, pageWidth, getLocalSize, pageHeight } from \"../config\";\r\n\r\nclass Graph {\r\n  constructor({ w, h }) {\r\n    this.graph = {};\r\n    this.cellCount = w * h;\r\n    this.lastIndex = null;\r\n  }\r\n\r\n  createGraph(canMoveDiagonal) {\r\n    this.clear();\r\n    for (let index = 0; index < this.cellCount; index++) {\r\n      this.graph[index] = {\r\n        type: ceilType.EMPTY,\r\n        siblings: this.getSiblings(index, canMoveDiagonal)\r\n          .map((item) =>\r\n            typeof item !== \"undefined\"\r\n              ? { vertex: item, weight: 1 }\r\n              : undefined\r\n          )\r\n          .filter(Boolean),\r\n      };\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  getVertexByIndex(index) {\r\n    return this.graph[index];\r\n  }\r\n\r\n  updateGraph({ index, type, weight }) {\r\n    if (this.graph[index]) {\r\n      this.graph[index] = { ...this.graph[index], type };\r\n\r\n      if (type === ceilType.BARIER) {\r\n        this.graph[index] = {\r\n          ...this.graph[index],\r\n          type,\r\n          siblings: [],\r\n        };\r\n      }\r\n\r\n      if (type === ceilType.WATER) {\r\n        this.graph[index] = {\r\n          ...this.graph[index],\r\n          type,\r\n          weight,\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  getSiblings(index, canMoveDiagonal) {\r\n    const left = this.getLeftSibling(index);\r\n    const top = this.getTopSibling(index);\r\n    const right = this.getRightSibling(index);\r\n    const down = this.getDownSibling(index);\r\n\r\n    if (canMoveDiagonal) {\r\n      const topLeft = this.getTopLeftDiagonal(top, left);\r\n      const topRight = this.getTopRightDiagonal(top, right);\r\n      const botRight = this.getBotRightDiagonal(down, right);\r\n      const botLeft = this.getBotLeftDiagonal(down, left);\r\n\r\n      return [topLeft, top, topRight, right, botRight, down, botLeft, left];\r\n    }\r\n\r\n    return [top, left, down, right];\r\n  }\r\n\r\n  getTopLeftDiagonal(top, left) {\r\n    if (top >= 0 && left >= 0) {\r\n      return top - 1;\r\n    }\r\n  }\r\n\r\n  getTopRightDiagonal(top, right) {\r\n    if (top >= 0 && right >= 0) {\r\n      return top + 1;\r\n    }\r\n  }\r\n\r\n  getBotLeftDiagonal(bot, left) {\r\n    if (bot >= 0 && left >= 0) {\r\n      return bot - 1;\r\n    }\r\n  }\r\n\r\n  getBotRightDiagonal(bot, right) {\r\n    if (bot >= 0 && right) {\r\n      return bot + 1;\r\n    }\r\n  }\r\n\r\n  getBottomDiagonal(down) {\r\n    const left = down - 1;\r\n    const right = down + 1;\r\n\r\n    return [left, right];\r\n  }\r\n\r\n  getDownSibling(index) {\r\n    const { w, h } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasDownNeighbour = Math.floor(index / w) < h - 1;\r\n\r\n    if (hasDownNeighbour) {\r\n      return index + w;\r\n    }\r\n  }\r\n\r\n  getTopSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasTopNeighbour = Math.floor(index / w) > 0;\r\n\r\n    if (hasTopNeighbour) {\r\n      return index - w;\r\n    }\r\n  }\r\n\r\n  getRightSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasRightNeighbour = index % w < w - 1;\r\n\r\n    if (hasRightNeighbour) {\r\n      return index + 1;\r\n    }\r\n  }\r\n\r\n  getLeftSibling(index) {\r\n    const { w } = getLocalSize(pageWidth, pageHeight);\r\n\r\n    const hasLeftNeighbour = index % w > 0;\r\n\r\n    if (hasLeftNeighbour) {\r\n      return index - 1;\r\n    }\r\n  }\r\n\r\n  getGraph() {\r\n    return this.graph;\r\n  }\r\n\r\n  clear() {\r\n    this.graph = {};\r\n    return this;\r\n  }\r\n}\r\n\r\nexport const graphControll = new Graph(getLocalSize(pageWidth, pageHeight));\r\n","import { ceilType } from \"../config\";\r\n\r\nexport function setBarrierToGraph(graph, barriers) {\r\n  barriers.forEach((barrier) => {\r\n    graph.updateGraph({ index: barrier.getIndex(), type: ceilType.BARIER });\r\n  });\r\n}\r\n\r\nexport function setStartPositionToGraph(graph, startIndex) {\r\n  graph.updateGraph({ index: startIndex, type: ceilType.START_POSITION });\r\n}\r\n\r\nexport function setEndPositionToGraph(graph, endIndex) {\r\n  graph.updateGraph({ index: endIndex, type: ceilType.END_POSITION });\r\n}\r\n\r\nexport function setWaterToGraph(graph, waterBarriers) {\r\n  waterBarriers.forEach((barrier) => {\r\n    graph.updateGraph({\r\n      index: barrier.getIndex(),\r\n      type: ceilType.WATER,\r\n      weight: 5,\r\n    });\r\n  });\r\n}\r\n","import { combine, createDomain, sample, guard, restore } from \"effector\";\r\nimport { startPosition, endPosition, ceilType } from \"../config\";\r\nimport { graphControll } from \"./controller\";\r\nimport {\r\n  setBarrierToGraph,\r\n  setStartPositionToGraph,\r\n  setEndPositionToGraph,\r\n  setWaterToGraph,\r\n} from \"./utils\";\r\nimport { Barier } from \"../game\";\r\n\r\nconst graphDomain = createDomain(\"graph\");\r\n\r\nexport const resetStore = graphDomain.event();\r\nexport const clearCanvas = graphDomain.event();\r\n\r\nexport const changeDirection = graphDomain.event();\r\nexport const setBarrierType = graphDomain.event();\r\nexport const setBarrier = graphDomain.event();\r\nexport const removeBarrierItem = graphDomain.event();\r\n\r\nexport const triggerStartPosition = graphDomain.event();\r\nexport const triggerEndPosition = graphDomain.event();\r\n\r\nexport const $startEndPosition = graphDomain.store([\r\n  startPosition,\r\n  endPosition,\r\n]);\r\n\r\nexport const $canMoveDiagonal = graphDomain.store(false);\r\n\r\nexport const $barrierType = restore(setBarrierType, ceilType.BARIER);\r\n\r\nexport const $barriersList = graphDomain.store({\r\n  [ceilType.BARIER]: [],\r\n  [ceilType.WATER]: [],\r\n});\r\n\r\nexport const $barriers = combine(\r\n  $barrierType,\r\n  $barriersList,\r\n  (barrierType, barriersList) => barriersList[barrierType]\r\n);\r\n\r\n$canMoveDiagonal.on(changeDirection, (state) => !state);\r\n\r\ngraphDomain.onCreateStore((store) => store.reset(resetStore));\r\n\r\nexport const removedBarrier = guard({\r\n  source: sample({\r\n    source: $barriersList,\r\n    clock: removeBarrierItem,\r\n    fn: (state, { type, index }) => {\r\n      const findedBarrier = state[type].find(\r\n        (item) => item.getIndex() === index\r\n      );\r\n\r\n      if (findedBarrier) {\r\n        return {\r\n          type,\r\n          index,\r\n          findedBarrier,\r\n        };\r\n      }\r\n    },\r\n  }),\r\n  filter: Boolean,\r\n});\r\n\r\nremovedBarrier.watch(({ findedBarrier }) => findedBarrier.remove());\r\n\r\n$barriersList\r\n  .on(setBarrier, (state, { type, index }) => {\r\n    const barrier = new Barier(index);\r\n\r\n    const isFindIndex = state[type].find((item) => item.getIndex() === index);\r\n\r\n    return {\r\n      ...state,\r\n      [type]: isFindIndex ? state[type] : [...state[type], barrier],\r\n    };\r\n  })\r\n  .on(removedBarrier, (state, { type, index }) => {\r\n    return {\r\n      ...state,\r\n      [type]: state[type].filter((item) => item.index !== index),\r\n    };\r\n  });\r\n\r\n$startEndPosition\r\n  .on(triggerStartPosition, (state, index) => [index, state[1]])\r\n  .on(triggerEndPosition, (state, index) => [state[0], index]);\r\n\r\nexport const $graph = combine({\r\n  barrier: $barriers,\r\n  barrierType: $barrierType,\r\n  barriersList: $barriersList,\r\n  startEndPosition: $startEndPosition,\r\n  canMoveDiagonal: $canMoveDiagonal,\r\n}).map((state) => {\r\n  const [start, end] = state.startEndPosition;\r\n\r\n  const graph = graphControll.createGraph(state.canMoveDiagonal);\r\n\r\n  setBarrierToGraph(graph, state.barriersList[ceilType.BARIER]);\r\n\r\n  setWaterToGraph(graph, state.barriersList[ceilType.WATER]);\r\n\r\n  setStartPositionToGraph(graph, start);\r\n  setEndPositionToGraph(graph, end);\r\n\r\n  return { ...state, graph: graph.graph };\r\n});\r\n","import { ceilType } from \"../config\";\r\n\r\nexport const canVisitedVertex = (vertex) => {\r\n  if (vertex.type !== ceilType.BARIER) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport function restorePath(endIndex, startIndex, historyPath) {\r\n  const path = [endIndex];\r\n  let lastStep = endIndex;\r\n\r\n  while (lastStep && lastStep !== startIndex) {\r\n    path.unshift(historyPath[lastStep]);\r\n    lastStep = historyPath[lastStep];\r\n  }\r\n\r\n  return path;\r\n}\r\n\r\nexport function removeDoubleVertex(target) {\r\n  return target.reduce((acc, row) => {\r\n    acc.push(row.filter((el) => !acc.some((accRow) => accRow.includes(el))));\r\n    return acc;\r\n  }, []);\r\n}\r\n\r\nexport function getVertexWeight(vertex) {\r\n  if (vertex.weight) {\r\n    return vertex.weight;\r\n  }\r\n\r\n  return 1;\r\n}\r\n","export class AlgoritmController {\r\n  constructor(startIndex, endIndex) {\r\n    this.count = 0;\r\n    this.processing = [];\r\n    this.dejkstra = [];\r\n    this.visited = [];\r\n    this.startIndex = startIndex;\r\n    this.endIndex = endIndex;\r\n  }\r\n\r\n  increment() {\r\n    this.count++;\r\n  }\r\n\r\n  addVertex({ vertex, siblings, processing }, visited) {\r\n    const updateProcessing = {\r\n      vertex,\r\n      siblings: ((processing && Object.values(processing)) || siblings).map(\r\n        (item) => item.vertex\r\n      ),\r\n    };\r\n    this.processing.push(updateProcessing);\r\n    this.visited.push(visited);\r\n  }\r\n\r\n  getAlgotitmResult() {\r\n    return this;\r\n  }\r\n}\r\n","import { graphControll } from \"../graph\";\r\nimport { canVisitedVertex, restorePath } from \"./utils\";\r\nimport { AlgoritmController } from \"./controller\";\r\n\r\nexport function breadthFirstSearch(startIndex, endIndex, graph) {\r\n  const aInfo = new AlgoritmController(startIndex, endIndex);\r\n  let prevIndex = null;\r\n  let isWork = true;\r\n  const queue = [startIndex];\r\n  const visited = [startIndex];\r\n  const parent = {};\r\n\r\n  while (isWork && queue.length > 0) {\r\n    const currentIndex = queue.shift();\r\n\r\n    aInfo.addVertex(\r\n      {\r\n        vertex: currentIndex,\r\n        siblings: graph[currentIndex].siblings,\r\n      },\r\n      prevIndex\r\n    );\r\n\r\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\r\n      const next = graph[currentIndex].siblings[i];\r\n\r\n      const vertex = graphControll.getVertexByIndex(next.vertex);\r\n\r\n      if (!visited.includes(next.vertex) && canVisitedVertex(vertex)) {\r\n        queue.push(next.vertex);\r\n        visited.push(next.vertex);\r\n\r\n        parent[next.vertex] = currentIndex;\r\n        aInfo.increment();\r\n      }\r\n\r\n      if (next.vertex === endIndex) {\r\n        isWork = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    prevIndex = currentIndex;\r\n  }\r\n\r\n  const result = aInfo.getAlgotitmResult();\r\n  const path = restorePath(endIndex, startIndex, parent);\r\n\r\n  return {\r\n    path,\r\n    ...result,\r\n  };\r\n}\r\n","import { graphControll } from \"../graph\";\r\nimport { canVisitedVertex, restorePath } from \"./utils\";\r\nimport { AlgoritmController } from \"./controller\";\r\n\r\nexport function depthFirstSearch(startIndex, endIndex, graph) {\r\n  const aInfo = new AlgoritmController(startIndex, endIndex);\r\n\r\n  let isWork = true;\r\n  const stack = [startIndex];\r\n  const visited = [];\r\n  const parent = {};\r\n  let prevIndex = null;\r\n\r\n  while (isWork && stack.length > 0) {\r\n    const currentIndex = stack.shift();\r\n\r\n    aInfo.addVertex(\r\n      {\r\n        vertex: currentIndex,\r\n        siblings: graph[currentIndex].siblings,\r\n      },\r\n      prevIndex\r\n    );\r\n\r\n    for (let i = 0; i < graph[currentIndex].siblings.length; i++) {\r\n      const next = graph[currentIndex].siblings[i];\r\n      const vertex = graphControll.getVertexByIndex(next.vertex);\r\n\r\n      if (!visited.includes(next.vertex) && canVisitedVertex(vertex)) {\r\n        stack.unshift(next.vertex);\r\n        visited.push(next.vertex);\r\n\r\n        parent[next.vertex] = currentIndex;\r\n        aInfo.increment();\r\n      }\r\n\r\n      if (next.vertex === endIndex) {\r\n        isWork = false;\r\n        break;\r\n      }\r\n    }\r\n    prevIndex = currentIndex;\r\n  }\r\n\r\n  const result = aInfo.getAlgotitmResult();\r\n  const path = restorePath(endIndex, startIndex, parent);\r\n\r\n  return {\r\n    path,\r\n    ...result,\r\n  };\r\n}\r\n","import PriorityQueue from \"fastpriorityqueue\";\r\nimport { graphControll } from \"../graph\";\r\nimport { canVisitedVertex, restorePath, getVertexWeight } from \"./utils\";\r\nimport { AlgoritmController } from \"./controller\";\r\n\r\nexport function dijkstra(startIndex, endIndex, graph) {\r\n  const aInfo = new AlgoritmController(startIndex, endIndex);\r\n  let prevIndex = null;\r\n  const priorityQueue = new PriorityQueue((a, b) => a[1] < b[1]);\r\n  const visited = new Map([[startIndex, 0]]); // помещать сюда вершину из очереди\r\n  const path = {};\r\n  let isWork = true;\r\n\r\n  priorityQueue.add([startIndex, 0]);\r\n\r\n  while (isWork && !priorityQueue.isEmpty()) {\r\n    const [currentIndex] = priorityQueue.poll();\r\n    const currentVertex = graph[currentIndex];\r\n\r\n    if (currentIndex === endIndex) {\r\n      isWork = false;\r\n      break;\r\n    }\r\n\r\n    aInfo.addVertex(\r\n      {\r\n        vertex: currentIndex,\r\n        siblings: graph[currentIndex].siblings,\r\n      },\r\n      prevIndex\r\n    );\r\n\r\n    // Получить текущую вершину из очереди и получить ее соседей\r\n\r\n    // пройтипо всем соседям текущей вершины, вычислить вес, указать предка\r\n    for (let i = 0; i < currentVertex.siblings.length; i++) {\r\n      // сосед, находящийся в обработке у текущей вершины\r\n      const sibling = currentVertex.siblings[i];\r\n      const vertex = graphControll.getVertexByIndex(sibling.vertex);\r\n\r\n      if (vertex && canVisitedVertex(vertex)) {\r\n        const nextWeight = visited.get(currentIndex) + getVertexWeight(vertex);\r\n\r\n        const weightIsLower =\r\n          visited.get(sibling.vertex) === undefined ||\r\n          nextWeight < visited.get(sibling.vertex);\r\n\r\n        // вычислить вес соседа, сравнив с прошлым весом, если веса прошлого нет, значит он бесконечность\r\n\r\n        // Положить ребро в просмотренные, с выполненными вычислениями\r\n        if (weightIsLower) {\r\n          priorityQueue.add([sibling.vertex, nextWeight]);\r\n          path[sibling.vertex] = currentIndex;\r\n          visited.set(sibling.vertex, nextWeight);\r\n        }\r\n      }\r\n    }\r\n\r\n    prevIndex = currentIndex;\r\n  }\r\n\r\n  const restoredPath = restorePath(endIndex, startIndex, path);\r\n  const result = aInfo.getAlgotitmResult();\r\n\r\n  return {\r\n    ...result,\r\n    path: restoredPath,\r\n  };\r\n}\r\n","import {\r\n  createStore,\r\n  combine,\r\n  createEvent,\r\n  restore,\r\n  createDomain,\r\n} from \"effector\";\r\nimport { breadthFirstSearch } from \"./bred-first-search\";\r\nimport { depthFirstSearch } from \"./depth-first-search\";\r\nimport { dijkstra } from \"./dijkstra\";\r\nimport { clearCanvas, resetStore } from \"../graph\";\r\nimport { setGameStatus, gameStatus } from \"../game\";\r\n\r\nconst algoritmsDomain = createDomain();\r\n\r\nexport const selectAlgoritm = createEvent();\r\nexport const addVisitedVertex = createEvent();\r\nexport const addProcessedVertex = createEvent();\r\nexport const addCustomAlgoritm = createEvent();\r\n\r\nexport const $currentAlgoritm = restore(selectAlgoritm, \"bredth first search\");\r\nexport const $visitedVertex = algoritmsDomain.store([]);\r\nexport const $processedVertex = algoritmsDomain.store({\r\n  vertex: null,\r\n  siblings: [],\r\n});\r\n\r\n$visitedVertex.on(addVisitedVertex, (state, vertex) => [...state, vertex]);\r\n$processedVertex.on(addProcessedVertex, (_, processed) => processed);\r\n\r\nexport const $algoritms = createStore([\r\n  {\r\n    searchFunction: breadthFirstSearch,\r\n    name: \"bredth first search\",\r\n  },\r\n  {\r\n    searchFunction: depthFirstSearch,\r\n    name: \"depth first search\",\r\n  },\r\n  {\r\n    searchFunction: dijkstra,\r\n    name: \"dijkstra\",\r\n  },\r\n  {\r\n    searchFunction: null,\r\n    name: \"custom function\",\r\n    modal: true,\r\n  },\r\n]).on(addCustomAlgoritm, (state, foo) =>\r\n  state.map((algoritm) =>\r\n    algoritm.name === \"custom function\"\r\n      ? { ...algoritm, searchFunction: foo }\r\n      : algoritm\r\n  )\r\n);\r\n\r\nexport const $searchAlgoritm = combine(\r\n  $currentAlgoritm,\r\n  $algoritms,\r\n  (currentAlgoritm, algoritms) =>\r\n    algoritms.find((algoritm) => algoritm.name === currentAlgoritm)\r\n);\r\n\r\nalgoritmsDomain.onCreateStore((store) => store.reset(clearCanvas, resetStore));\r\n\r\nselectAlgoritm.watch(() => setGameStatus(gameStatus.END_GAME));\r\n","import { getPositionByIndex, drawSquare } from \"../config\";\r\n\r\nexport function checkGameStatus(target, status) {\r\n  return status.some((item) => target === item);\r\n}\r\n\r\nexport function renderVisitedVertex(barrier, context, color) {\r\n  if (barrier) {\r\n    const [x, y] = getPositionByIndex(barrier);\r\n    drawSquare({\r\n      position: [x, y],\r\n      context,\r\n      color,\r\n    });\r\n  }\r\n}\r\n\r\nexport function renderVisitedVertexByArr(barrier, context, color = \"#000\") {\r\n  for (let i = 0; i < barrier.length; i++) {\r\n    const [x, y] = getPositionByIndex(barrier[i]);\r\n    drawSquare({\r\n      position: [x, y],\r\n      context,\r\n      color,\r\n    });\r\n  }\r\n}\r\n\r\nexport function filtredFps(_, fps) {\r\n  const fpsVariant = {\r\n    min: 1,\r\n    max: 30,\r\n  };\r\n\r\n  if (fps < fpsVariant.min) {\r\n    return fpsVariant.min;\r\n  }\r\n  if (fps >= fpsVariant.max) {\r\n    return fpsVariant.max;\r\n  }\r\n  return fps;\r\n}\r\n\r\nexport function equal(state, nextGame) {\r\n  const hasNewBarriers = checkBarriers(state, nextGame.barrier);\r\n  const hasNewPosition = checkPosition(state, nextGame.startEndPosition);\r\n\r\n  if (hasNewPosition || hasNewBarriers) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction checkBarriers(state, nextBarriers) {\r\n  if (nextBarriers.length === 0) {\r\n    return false;\r\n  }\r\n\r\n  if (state[state.length - 1]?.barrier.length !== nextBarriers?.length) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction checkPosition(position, nextPosition) {\r\n  const equalPosition = [];\r\n  const lastPosition = position[position.length - 1]?.startEndPosition;\r\n\r\n  if (!lastPosition) {\r\n    return true;\r\n  }\r\n\r\n  equalPosition.push(\r\n    ...lastPosition.map((position, index) => {\r\n      return position !== nextPosition[index];\r\n    })\r\n  );\r\n\r\n  if (equalPosition.length === 0 || equalPosition.includes(true)) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n","import { sample, guard, restore, createDomain } from \"effector\";\r\nimport {\r\n  $graph,\r\n  resetStore,\r\n  clearCanvas,\r\n  $barriers,\r\n  $startEndPosition,\r\n} from \"../graph\";\r\nimport { $searchAlgoritm } from \"../algoritms/model\";\r\nimport { equal, filtredFps } from \"./utils\";\r\n\r\nexport const gameStatus = {\r\n  START: \"START\",\r\n  RESTART: \"RESTART\",\r\n  PAUSE: \"PAUSE\",\r\n  RESUME: \"RESUME\",\r\n  CLEAR: \"CLEAR\",\r\n  END_GAME: \"END_GAME\",\r\n  RESET: \"RESET\",\r\n};\r\n\r\nconst gameDomain = createDomain(\"game\");\r\n\r\nexport const setGameStatus = gameDomain.event();\r\nexport const setTimer = gameDomain.event();\r\nexport const setHistoryGame = gameDomain.event();\r\nexport const recoveryHistoryGame = gameDomain.event();\r\nexport const setCurrentGame = gameDomain.event();\r\n\r\nexport const $path = gameDomain.store({}).reset(resetStore, clearCanvas);\r\nexport const $historyGame = gameDomain.store([]);\r\nexport const $currentTimer = gameDomain.store(15).on(setTimer, filtredFps);\r\n\r\n$historyGame.on(setHistoryGame, (state, { barrier, startEndPosition }) => {\r\n  const nextGame = { barrier, startEndPosition, date: new Date() };\r\n  const findedGame = equal(state, nextGame);\r\n\r\n  return findedGame ? [...state, nextGame] : state;\r\n});\r\n\r\nexport const $currentGame = restore(setCurrentGame, null).reset(\r\n  resetStore,\r\n  clearCanvas\r\n);\r\n\r\nexport const $gameState = restore(setGameStatus, gameStatus.RESET).reset(\r\n  resetStore\r\n);\r\n\r\nexport const startGame = guard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.START),\r\n});\r\n\r\nexport const resumeGame = guard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.RESUME),\r\n});\r\n\r\nexport const endGame = guard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.END_GAME),\r\n});\r\n\r\nconst restoredHistoryGame = guard({\r\n  source: recoveryHistoryGame,\r\n  filter: $gameState.map((state) => state === gameStatus.END_GAME),\r\n});\r\n\r\nguard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.CLEAR),\r\n  target: resetStore,\r\n});\r\n\r\nguard({\r\n  source: $gameState,\r\n  filter: $gameState.map((state) => state === gameStatus.START),\r\n  target: clearCanvas,\r\n});\r\n\r\nsample({\r\n  source: $graph,\r\n  clock: endGame,\r\n  target: setHistoryGame,\r\n});\r\n\r\nsample({\r\n  source: {\r\n    graph: $graph,\r\n    algoritm: $searchAlgoritm,\r\n  },\r\n  clock: startGame,\r\n  target: $path,\r\n  fn: ({ graph, algoritm }) => {\r\n    const [start, end] = graph.startEndPosition;\r\n\r\n    const time = window.performance.now();\r\n    const result = algoritm.searchFunction(start, end, graph.graph);\r\n    const timeEnd = window.performance.now() - time;\r\n\r\n    return {\r\n      ...result,\r\n      timeEnd,\r\n    };\r\n  },\r\n});\r\n\r\nsampleForHistoryGame($barriers, \"barrier\");\r\nsampleForHistoryGame($startEndPosition, \"startEndPosition\");\r\nsampleForHistoryGame($currentGame, \"date\");\r\n\r\nfunction sampleForHistoryGame(target, key) {\r\n  return sample({\r\n    source: $historyGame,\r\n    clock: restoredHistoryGame,\r\n    target,\r\n    fn: (historyGame, params) => {\r\n      const findedGame = historyGame.find((game) => game.date === params);\r\n\r\n      return findedGame[key];\r\n    },\r\n  });\r\n}\r\n","import {\r\n  createEffect,\r\n  attach,\r\n  createStore,\r\n  sample,\r\n  guard,\r\n  combine,\r\n  merge,\r\n} from \"effector\";\r\nimport { renderPath } from \"../canvas\";\r\nimport { addVisitedVertex, addProcessedVertex } from \"../algoritms\";\r\nimport { clearCanvas, resetStore } from \"../graph\";\r\nimport { checkGameStatus } from \"./utils\";\r\nimport {\r\n  gameStatus,\r\n  setGameStatus,\r\n  $gameState,\r\n  $currentTimer,\r\n  startGame,\r\n  resumeGame,\r\n} from \"./model\";\r\n\r\nconst tickFx = createEffect().use(\r\n  (fps) => new Promise((rs) => setTimeout(rs, 1000 / (fps * 2)))\r\n);\r\n\r\nexport function createTick($state, context) {\r\n  const $animationCount = createStore(0).reset(clearCanvas, resetStore);\r\n\r\n  const tickWithParams = attach({\r\n    effect: tickFx,\r\n    source: $currentTimer,\r\n    mapParams: (_, fps) => fps,\r\n  });\r\n\r\n  const $combineState = combine(\r\n    $state,\r\n    $animationCount,\r\n    (state, animationCount) => ({ state, animationCount })\r\n  );\r\n\r\n  $animationCount.on(tickWithParams.done, (state) => state + 1);\r\n\r\n  sample($combineState, tickWithParams).watch((state) => {\r\n    animatedVisitedVertex(state, context);\r\n  });\r\n\r\n  guard({\r\n    source: merge([startGame, resumeGame, tickWithParams.done]),\r\n    filter: $gameState.map((state) =>\r\n      checkGameStatus(state, [gameStatus.RESUME, gameStatus.START])\r\n    ),\r\n    target: tickWithParams,\r\n  });\r\n}\r\n\r\nexport function animatedVisitedVertex({ animationCount, state }, context) {\r\n  const { processing = [] } = state;\r\n\r\n  if (animationCount < processing.length) {\r\n    addProcessedVertex(processing[animationCount]);\r\n\r\n    if (processing[animationCount - 1]) {\r\n      addVisitedVertex(processing[animationCount - 1].vertex);\r\n    }\r\n  } else {\r\n    setGameStatus(gameStatus.END_GAME);\r\n\r\n    renderPath({\r\n      path: state.path,\r\n      context,\r\n    });\r\n  }\r\n}\r\n","import { guard, sample, merge, combine, forward } from \"effector\";\r\nimport {\r\n  colorSchema,\r\n  cellSize,\r\n  pageHeight,\r\n  pageWidth,\r\n  borderSize,\r\n  getLocalSize,\r\n  getGlobalSize,\r\n  drawSquare,\r\n  clearALlCanvas,\r\n  getPositionByIndex,\r\n  getIndexByPosition,\r\n  ceilType,\r\n  convertLocalPositionToGlobal,\r\n} from \"./config\";\r\nimport { configureCanvas } from \"./config-canvas\";\r\nimport { canvasControl } from \"./control-canvas\";\r\nimport {\r\n  setBarrier,\r\n  removeBarrierItem,\r\n  triggerStartPosition,\r\n  triggerEndPosition,\r\n  $graph,\r\n  resetStore,\r\n  clearCanvas,\r\n  $barrierType,\r\n} from \"./graph\";\r\n\r\nimport {\r\n  gameStatus,\r\n  $gameState,\r\n  $path,\r\n  renderVisitedVertexByArr,\r\n  renderVisitedVertex,\r\n  createTick,\r\n} from \"./game\";\r\nimport { $visitedVertex, $processedVertex } from \"./algoritms\";\r\n\r\nconst $mainState = combine({\r\n  visitedVertex: $visitedVertex,\r\n  graph: $graph,\r\n  processedVertex: $processedVertex,\r\n  barrierType: $barrierType,\r\n});\r\n\r\nexport function renderBarrier(barriers, barrierType, context) {\r\n  renderWater(barriers[ceilType.WATER], context);\r\n  renderBar(barriers[ceilType.BARIER], context);\r\n}\r\n\r\nfunction renderWater(barriers, context) {\r\n  for (let i = 0; i < barriers.length; i++) {\r\n    barriers[i].render(context, \"#73c8ef\");\r\n  }\r\n}\r\nfunction renderBar(barriers, context) {\r\n  for (let i = 0; i < barriers.length; i++) {\r\n    barriers[i].render(context);\r\n  }\r\n}\r\n\r\nfunction renderActionsCeil(startEndPosition, context) {\r\n  for (let i = 0; i < startEndPosition.length; i++) {\r\n    const index = getPositionByIndex(startEndPosition[i]);\r\n    drawSquare({\r\n      position: index,\r\n      context,\r\n      color: colorSchema.startEndColor[i],\r\n    });\r\n  }\r\n}\r\n\r\nfunction renderCeil(event, state) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n\r\n  const { graph, barrierType } = state;\r\n\r\n  const [startIndex, endIndex] = graph.startEndPosition;\r\n\r\n  return {\r\n    renderForMove: () => {\r\n      if (index !== startIndex && index !== endIndex) {\r\n        setBarrier({ index, type: barrierType });\r\n      }\r\n    },\r\n    renderForClick: () => {\r\n      if (index !== startIndex && index !== endIndex) {\r\n        removeBarrierItem({ index, type: barrierType });\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nfunction renderStart(index, { graph }) {\r\n  const findIndex = graph.barrier.find((barrier) => barrier.index === index);\r\n  const [, endIndex] = graph.startEndPosition;\r\n\r\n  if (!findIndex && index !== endIndex) {\r\n    triggerStartPosition(index);\r\n  }\r\n}\r\n\r\nfunction renderEnd(index, { graph }) {\r\n  const findIndex = graph.barrier.find((barrier) => barrier.index === index);\r\n  const [startIndex] = graph.startEndPosition;\r\n\r\n  if (!findIndex && index !== startIndex) {\r\n    triggerEndPosition(index);\r\n  }\r\n}\r\n\r\nlet type = null;\r\nfunction renderLogic(event, state) {\r\n  const { w, h } = getLocalSize(event.clientX, event.clientY);\r\n  const index = getIndexByPosition([w, h]);\r\n  const { graph } = state;\r\n\r\n  if (!type) {\r\n    type = graph.graph[index].type;\r\n  }\r\n\r\n  switch (type) {\r\n    case ceilType.BARIER:\r\n      type = null;\r\n      return renderCeil(event, state).renderForClick();\r\n    case ceilType.WATER:\r\n      type = null;\r\n      return renderCeil(event, state).renderForClick();\r\n    case ceilType.START_POSITION:\r\n      return renderStart(index, state);\r\n    case ceilType.END_POSITION:\r\n      return renderEnd(index, state);\r\n    case ceilType.EMPTY:\r\n      type = null;\r\n      return renderCeil(event, state).renderForMove();\r\n  }\r\n}\r\n\r\nexport function renderCanvas(canvas, context) {\r\n  const localSize = getLocalSize(pageWidth, pageHeight);\r\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\r\n  const gridData = buildGrid(context);\r\n\r\n  configureCanvas(canvas, globalSize);\r\n\r\n  canvasControl.registerClickEventToCanvas(canvas);\r\n  canvasControl.addMouseMoveEvent(renderLogic);\r\n  canvasControl.addMouseUpEvent(() => (type = null));\r\n  canvasControl.addMouseClickEvent((e, s) => renderCeil(e, s).renderForClick());\r\n\r\n  function render({ graph, visitedVertex, processedVertex, barrierType }) {\r\n    clearALlCanvas(context, canvas);\r\n    canvasControl.setState({ graph, barrierType });\r\n\r\n    renderVisitedVertexByArr(visitedVertex, context, \"#00bcd4\");\r\n    renderVisitedVertexByArr(processedVertex.siblings, context, \"#d2ef99\");\r\n    renderVisitedVertex(processedVertex.vertex, context, \"#f3fc23\");\r\n\r\n    renderActionsCeil(graph.startEndPosition, context);\r\n\r\n    renderBarrier(graph.barriersList, barrierType, context);\r\n\r\n    gridData.applyStyles();\r\n    context.stroke(gridData.grid);\r\n  }\r\n\r\n  $mainState.watch(render);\r\n\r\n  sample({\r\n    source: $mainState,\r\n    clock: merge([resetStore, clearCanvas]),\r\n  }).watch(render);\r\n\r\n  createTick($path, context);\r\n}\r\n\r\nlet prev = null;\r\nexport function renderPath({ context, path = [], color = \"green\" }) {\r\n  for (let i = 0; i < path.length; i++) {\r\n    const position = getPositionByIndex(path[i]);\r\n    const [x, y] = convertLocalPositionToGlobal(position);\r\n\r\n    if (prev) {\r\n      context.beginPath();\r\n      context.strokeStyle = color;\r\n      context.lineWidth = 2;\r\n      context.moveTo(prev[0], prev[1]);\r\n      context.lineTo(x + cellSize / 2, y + cellSize / 2);\r\n      context.stroke();\r\n    }\r\n\r\n    prev = [x + cellSize / 2, y + cellSize / 2];\r\n  }\r\n\r\n  prev = null;\r\n}\r\n\r\nfunction buildGrid(context) {\r\n  const grid = new Path2D();\r\n\r\n  const localSize = getLocalSize(pageWidth, pageHeight);\r\n  const globalSize = getGlobalSize(localSize.w, localSize.h);\r\n\r\n  for (let i = 0; i <= localSize.w; i++) {\r\n    grid.moveTo(i * cellSize + borderSize, 0);\r\n    grid.lineTo(i * cellSize + borderSize, globalSize.h);\r\n  }\r\n\r\n  for (let i = 0; i <= localSize.h; i++) {\r\n    grid.moveTo(0, i * cellSize + borderSize);\r\n    grid.lineTo(globalSize.w, i * cellSize + borderSize);\r\n  }\r\n\r\n  return {\r\n    grid,\r\n    applyStyles: () => {\r\n      context.lineWidth = borderSize;\r\n      context.strokeStyle = colorSchema.borderColor;\r\n    },\r\n  };\r\n}\r\n\r\nconst canvas = document.getElementById(\"viewport\");\r\n\r\nif (canvas) {\r\n  const context = canvas.getContext(\"2d\");\r\n\r\n  renderCanvas(canvas, context);\r\n}\r\n","import { getTargetIndex } from \"./config\";\r\nimport { $gameState, gameStatus, checkGameStatus } from \"./game\";\r\n\r\nclass Controll {\r\n  constructor() {\r\n    this.isMouseDown = false;\r\n    this.isMouseMove = false;\r\n    this.listeners = [];\r\n    this.state = {};\r\n    this.lastIndex = null;\r\n    this.disabledListeners = [];\r\n  }\r\n\r\n  init() {\r\n    $gameState.watch((state) => {\r\n      if (\r\n        checkGameStatus(state, [\r\n          gameStatus.START,\r\n          gameStatus.PAUSE,\r\n          gameStatus.RESUME,\r\n        ])\r\n      ) {\r\n        this.disabledListener();\r\n      } else {\r\n        this.includeListener();\r\n      }\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  registerClickEventToCanvas(canvas) {\r\n    canvas.addEventListener(\"mousedown\", (event) => {\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"mousedown\")\r\n        .forEach((userEvent) => userEvent.eventListener());\r\n\r\n      this.isMouseDown = true;\r\n      this.isMouseMove = false;\r\n    });\r\n\r\n    canvas.addEventListener(\"mouseup\", (event) => {\r\n      this.isMouseDown = false;\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"mouseup\")\r\n        .forEach((userEvent) => userEvent.eventListener(event, this.state));\r\n    });\r\n\r\n    canvas.addEventListener(\"click\", (event) => {\r\n      this.listeners\r\n        .filter((userEvent) => userEvent.type === \"click\")\r\n        .forEach((userEvent) => {\r\n          if (!this.isMouseMove) {\r\n            userEvent.eventListener(event, this.state);\r\n          }\r\n        });\r\n    });\r\n\r\n    canvas.addEventListener(\"mousemove\", (event) => {\r\n      const index = getTargetIndex(event);\r\n\r\n      if (this.isMouseDown && index !== this.lastIndex) {\r\n        this.lastIndex = index;\r\n        this.isMouseMove = true;\r\n        this.listeners\r\n          .filter((userEvent) => userEvent.type === \"mousemove\")\r\n          .forEach((userEvent) =>\r\n            userEvent.eventListener(event, this.state, this.lastIndex)\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  disabledListener() {\r\n    this.clear();\r\n  }\r\n\r\n  includeListener() {\r\n    this.listeners = this.disabledListeners;\r\n  }\r\n\r\n  addMouseDownEvent(eventListener) {\r\n    this.listeners.push({ type: \"mousedown\", eventListener });\r\n  }\r\n\r\n  addMouseUpEvent(eventListener) {\r\n    this.listeners.push({ type: \"mouseup\", eventListener });\r\n  }\r\n\r\n  addMouseMoveEvent(eventListener) {\r\n    this.listeners.push({ type: \"mousemove\", eventListener });\r\n  }\r\n\r\n  addMouseClickEvent(eventListener) {\r\n    this.listeners.push({ type: \"click\", eventListener });\r\n  }\r\n\r\n  setState(state) {\r\n    this.state = state;\r\n\r\n    return this;\r\n  }\r\n\r\n  clear() {\r\n    if (this.listeners.length > 0) {\r\n      this.disabledListeners = this.listeners;\r\n      this.isMouseDown = false;\r\n      this.isMouseMove = false;\r\n      this.listeners = [];\r\n      this.lastIndex = null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const canvasControl = new Controll();\r\ncanvasControl.init();\r\n","export function configureCanvas(canvas, { w, h }) {\r\n  canvas.height = h;\r\n  canvas.width = w;\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactModal from \"react-modal\";\r\n\r\nReactModal.setAppElement(\"#root\");\r\n\r\nexport function ModalWrapper({ isOpen, onRequestClose, children, width }) {\r\n  return (\r\n    <ReactModal\r\n      isOpen={isOpen}\r\n      closeTimeoutMS={200}\r\n      onRequestClose={onRequestClose}\r\n    >\r\n      <StyledRootWrapper onClick={onRequestClose}>\r\n        <StyledWrapper>\r\n          <StyledInner width={width} onClick={(e) => e.stopPropagation()}>\r\n            {children}\r\n            <CloseModal onClick={onRequestClose} />\r\n          </StyledInner>\r\n        </StyledWrapper>\r\n      </StyledRootWrapper>\r\n    </ReactModal>\r\n  );\r\n}\r\n\r\nexport const StyledInner = styled.div`\r\n  background: #fff;\r\n  padding: 25px;\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  text-align: left;\r\n  max-width: 800px;\r\n  margin: 10px;\r\n  width: ${({ width }) => width}px;\r\n  position: relative;\r\n  border-radius: 10px;\r\n  opacity: 0;\r\n  transition: all 0.3s;\r\n  transform: translateX(-100px);\r\n`;\r\n\r\nexport const StyledRootWrapper = styled.div`\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1043;\r\n  position: fixed;\r\n  opacity: 0;\r\n  transition: all 0.3s;\r\n`;\r\n\r\nexport const StyledWrapper = styled.div`\r\n  position: absolute;\r\n  margin: 0;\r\n  padding: 0;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1045;\r\n  outline: 0;\r\n  overflow: auto;\r\n  white-space: normal;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #27262687;\r\n`;\r\n\r\nconst CloseModal = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  cursor: pointer;\r\n  width: 30px;\r\n  height: 30px;\r\n  &:after {\r\n    position: absolute;\r\n    content: \"\\\\2718\";\r\n    top: 50%;\r\n    right: 50%;\r\n    transform: translate(50%, -50%);\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Icon = styled.div`\r\n  cursor: pointer;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Text = styled.p`\r\n  font-size: 14px;\r\n`;\r\n","import React from \"react\";\r\nimport { Button as DefaultButton } from \"@material-ui/core\";\r\n\r\nexport function Button({\r\n  icon: Icon,\r\n  type,\r\n  size = 14,\r\n  children,\r\n  onClick,\r\n  variant = \"contained\",\r\n  color = \"default\",\r\n}) {\r\n  return type === \"outline\" ? (\r\n    <DefaultButton onClick={onClick}>{children}</DefaultButton>\r\n  ) : (\r\n    <DefaultButton\r\n      style={{ fontSize: \"11px\" }}\r\n      onClick={onClick}\r\n      variant={variant}\r\n      color={color}\r\n      startIcon={Icon && <Icon size={size} />}\r\n    >\r\n      {children}\r\n    </DefaultButton>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const FlexContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: ${({ direction }) => direction || \"row\"};\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const Left = styled.div`\r\n  width: 25%;\r\n  text-align: left;\r\n  padding-right: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport { FormControlLabel, Switch as DefaultSwitch } from \"@material-ui/core\";\r\nimport { FlexContainer, Left } from \"../containers\";\r\n\r\nexport function Switch({ label, name = \"gilad\", ...rest }) {\r\n  return (\r\n    <label style={{ cursor: \"pointer\" }}>\r\n      <FlexContainer>\r\n        <Left>\r\n          <FormControlLabel control={<DefaultSwitch {...rest} name={name} />} />\r\n        </Left>\r\n        <h3>{label}</h3>\r\n      </FlexContainer>\r\n    </label>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FiSettings } from \"react-icons/fi\";\r\nimport { ModalWrapper } from \"./modal-wrapper\";\r\nimport { Icon } from \"../atoms\";\r\n\r\nexport function Settings() {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  return (\r\n    <>\r\n      <Icon onClick={() => setOpen(true)}>\r\n        <FiSettings color=\"#fff\" size=\"35\" />\r\n      </Icon>\r\n      <ModalWrapper isOpen={isOpen} onRequestClose={() => setOpen(false)}>\r\n        Setting info\r\n      </ModalWrapper>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FiInfo } from \"react-icons/fi\";\r\nimport { ModalWrapper } from \"./modal-wrapper\";\r\nimport { Icon, Text } from \"../atoms\";\r\nimport { FlexContainer } from \"../containers\";\r\n\r\nexport function Info() {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  return (\r\n    <>\r\n      <Icon onClick={() => setOpen(true)}>\r\n        <FiInfo color=\"#fff\" size=\"35\" />\r\n      </Icon>\r\n\r\n      <InfoModal isOpen={isOpen} setOpen={setOpen} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction InfoModal({ isOpen, setOpen }) {\r\n  return (\r\n    <ModalWrapper\r\n      width={500}\r\n      isOpen={isOpen}\r\n      onRequestClose={() => setOpen(false)}\r\n    >\r\n      <FlexContainer>\r\n        <ColorBlock color=\"green\" />\r\n        <Text>- Точка старта алгоритма</Text>\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <ColorBlock color=\"red\" />\r\n        <Text>- Точка завершения алгоритма</Text>\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <ColorBlock color=\"#00bcd4\" />\r\n        <Text>- Пройденная вершина</Text>\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <ColorBlock color=\"#f3fc23\" />\r\n        <Text>- Вершина, находящаяся в обработке</Text>\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <ColorBlock color=\"#d2ef99\" />\r\n        <Text>- Соседи текущей вершины</Text>\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <ColorBlock color=\"#bbbbbb\" />\r\n        <Text>- Цвет не проходимого барьера</Text>\r\n      </FlexContainer>\r\n    </ModalWrapper>\r\n  );\r\n}\r\n\r\nconst ColorBlock = styled.div`\r\n  width: 35px;\r\n  height: 35px;\r\n  background: ${({ color }) => color};\r\n  margin-right: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport { FiBook } from \"react-icons/fi\";\r\nimport { ModalWrapper } from \"./modal-wrapper\";\r\nimport { Icon } from \"../atoms\";\r\n\r\nexport function AboutAlgoritms() {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  return (\r\n    <>\r\n      <Icon onClick={() => setOpen(true)}>\r\n        <FiBook color=\"#fff\" size=\"35\" />\r\n      </Icon>\r\n      <ModalWrapper isOpen={isOpen} onRequestClose={() => setOpen(false)}>\r\n        algoritm info\r\n      </ModalWrapper>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { Button } from \"../atoms\";\r\n\r\nexport function InfoAboutAlgoritmApi({ codeString }) {\r\n  const [isOpen, toggle] = React.useReducer((prev) => !prev, false);\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={toggle} type=\"outline\">\r\n        Посмотреть информацию об api\r\n      </Button>\r\n      <Wrapper isOpen={isOpen}>\r\n        <a\r\n          href=\"https://github.com/bogdanq/algorithms/blob/master/src/algoritms/bred-first-search.js\"\r\n          target=\"_blank\"\r\n        >\r\n          Пример алгоритма\r\n        </a>\r\n        <SyntaxHighlighter language=\"typescript\" style={docco}>\r\n          {codeString}\r\n        </SyntaxHighlighter>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  ${({ isOpen }) =>\r\n    isOpen\r\n      ? css`\r\n          height: 500px;\r\n          border-top: 1px solid #00bcd4;\r\n          margin-bottom: 15px;\r\n          overflow-y: auto;\r\n        `\r\n      : css`\r\n          height: 0;\r\n          overflow: hidden;\r\n        `};\r\n  transition: all 0.2s;\r\n  padding-top: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport { Select as DefaultSelect, MenuItem } from \"@material-ui/core\";\r\nimport { ceilType } from \"../../../config\";\r\nimport { setBarrierType, $barrierType } from \"../../../graph\";\r\nimport { useStore } from \"effector-react\";\r\n\r\nexport function SelectBarrierType() {\r\n  const barrierType = useStore($barrierType);\r\n\r\n  const handleChange = React.useCallback((event) => {\r\n    setBarrierType(event.target.value);\r\n  }, []);\r\n\r\n  return (\r\n    <DefaultSelect\r\n      style={{ width: \"100%\" }}\r\n      value={barrierType}\r\n      onChange={handleChange}\r\n    >\r\n      <MenuItem value={ceilType.BARIER}>Не проходимый барьер</MenuItem>\r\n      <MenuItem value={ceilType.WATER}>Вода (вес 5)</MenuItem>\r\n    </DefaultSelect>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FaHistory } from \"react-icons/fa\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useStore } from \"effector-react\";\r\nimport { ModalWrapper } from \"../molecules\";\r\nimport { FlexContainer } from \"../containers\";\r\nimport { Icon } from \"../atoms\";\r\nimport { $historyGame, recoveryHistoryGame, $currentGame } from \"../../../game\";\r\n\r\nexport function History() {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  const historyGame = useStore($historyGame);\r\n\r\n  return (\r\n    <HistoryIcon historyCount={historyGame.length}>\r\n      <Icon onClick={() => setOpen(true)}>\r\n        <FaHistory color=\"#fff\" size=\"35\" />\r\n      </Icon>\r\n      <ModalWrapper\r\n        width={600}\r\n        isOpen={isOpen}\r\n        onRequestClose={() => setOpen(false)}\r\n      >\r\n        {historyGame.length > 0 ? (\r\n          <HistoryList historyGame={historyGame} setOpen={setOpen} />\r\n        ) : (\r\n          <h1>У вас нет законченных игр </h1>\r\n        )}\r\n      </ModalWrapper>\r\n    </HistoryIcon>\r\n  );\r\n}\r\n\r\nfunction HistoryList({ historyGame, setOpen }) {\r\n  const currentGame = useStore($currentGame);\r\n  const handleChangeItem = React.useCallback(\r\n    (item) => {\r\n      recoveryHistoryGame(item.date);\r\n      setOpen(false);\r\n    },\r\n    [setOpen]\r\n  );\r\n\r\n  return (\r\n    <HistoryListWrapper>\r\n      <FlexContainer>\r\n        {historyGame.map((item, index) => (\r\n          <HistoryItem\r\n            active={currentGame === item.date}\r\n            onClick={() => handleChangeItem(item)}\r\n            key={index.toString()}\r\n          >\r\n            <p>Баррьеры: {item.barrier.length}</p>\r\n            <p>Старт: {item.startEndPosition[0]}</p>\r\n            <p>Конец: {item.startEndPosition[1]}</p>\r\n            <h3>Будет дата</h3>\r\n          </HistoryItem>\r\n        ))}\r\n      </FlexContainer>\r\n    </HistoryListWrapper>\r\n  );\r\n}\r\n\r\nconst HistoryItem = styled.div`\r\n  border: 2px solid #666666;\r\n  border-radius: 10px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  margin: 5px;\r\n  transition: all 0.3s;\r\n\r\n  ${({ active }) =>\r\n    active &&\r\n    css`\r\n      border: 2px solid #00bcd4;\r\n    `}\r\n\r\n  &:hover {\r\n    border: 2px solid #00bcd4;\r\n  }\r\n`;\r\n\r\nconst HistoryListWrapper = styled.div`\r\n  overflow-y: auto;\r\n  max-height: 500px;\r\n`;\r\n\r\nconst HistoryIcon = styled.div`\r\n  position: relative;\r\n  &:after {\r\n    ${({ historyCount }) =>\r\n      historyCount > 0 &&\r\n      css`\r\n    position: absolute;\r\n    content: \"${historyCount}\";\r\n    background: red;\r\n    border-radius: 50%;\r\n    padding: 3px;\r\n    font-size: 12px;\r\n    text-align: center;\r\n    top: -10px;\r\n    right: -15px;\r\n    height: 13px;\r\n    width: 13px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center\r\n    `}\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Draggable from \"react-draggable\";\r\nimport { Settings, Info, AboutAlgoritms } from \"../molecules\";\r\nimport { History } from \"./history\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  padding: 15px 10px;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.5);\r\n  cursor: default;\r\n  left: 20px;\r\n  bottom: 20px;\r\n\r\n  &:hover {\r\n    cursor: move;\r\n  }\r\n\r\n  & > div {\r\n    margin: 0 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport function InfoDraggable() {\r\n  return (\r\n    <Draggable>\r\n      <Wrapper>\r\n        <Info />\r\n        <Settings />\r\n        <AboutAlgoritms />\r\n        <History />\r\n      </Wrapper>\r\n    </Draggable>\r\n  );\r\n}\r\n","import { createEvent, restore } from \"effector\";\r\n\r\nexport const handleChangeCode = createEvent();\r\nexport const $code = restore(handleChangeCode, \"\");\r\n","export const codeString = `\r\n// что бы работала визуализация, функция должна следовать общему api\r\n  type youAlgoritmFunction = (\r\n    startIndex: number, \r\n    endIndex: number, \r\n    graph: Graph\r\n  ) => { \r\n    path: Array<number>, \r\n    AlgoritmController \r\n  }\r\n\r\n// метод нужен, что бы каждую итерацию алгоритма сохранять его данные\r\n\r\n  type AlgoritmController = {\r\n    increment: () => void;\r\n    getAlgotitmResult: () => AlgoritmController;\r\n    addVertex: (\r\n      processing: Array<{vertex: number, siblings: number[]}>,\r\n      visited: number\r\n    ) => void;\r\n    count: number;\r\n    processing: Array<{vertex: number, siblings: number[]}>;\r\n    visited: number | null[];\r\n    startIndex: number;\r\n    endIndex: number;\r\n  }\r\n\r\n  const algoritmController = new AlgoritmController(startIndex: number, endIndex: number)\r\n\r\n\r\n  /*\r\n    GraphControll - создает граф, может вернуть вершину по индексу\r\n  */\r\n\r\n  enum CeilType {\r\n    START_POSITION = \"START_POSITION\",\r\n    END_POSITION = \"END_POSITION\",\r\n    BARIER = \"BARIER\",\r\n    EMPTY = \"EMPTY\",\r\n    VISITED = \"VISITED\",\r\n  };\r\n  \r\n  type Graph = { [key: string]: { type: CeilType , siblings: Array<number> } }\r\n\r\n  type GraphControll = {\r\n    getVertexByIndex: (index: number) => Graph\r\n  }\r\n\r\n  /* \r\n    функция restorePath восстановить путь, по переданному обьекту. \r\n    Содержит путь от предыдущего к следующей вершине\r\n  */\r\n\r\n  type RestorePath = (\r\n    endIndex: number, \r\n    startIndex: number, \r\n    parent: { [key: string]: number }\r\n  ) => Array<number>\r\n\r\n  // сanVisitedVertex проверяет, можно ли прайти на указанную вершину\r\n    type CanVisitedVertex = (\r\n      vertex: { type: CeilType , siblings: Array<number> }\r\n    ) => boolean\r\n`;\r\n","import React from \"react\";\r\nimport { useStore } from \"effector-react\";\r\nimport { graphControll as newGraph } from \"../../../../graph\";\r\nimport {\r\n  canVisitedVertex as newCan,\r\n  restorePath as newRe,\r\n  addCustomAlgoritm,\r\n} from \"../../../../algoritms\";\r\nimport { AlgoritmController as newAlg } from \"../../../../algoritms/controller\";\r\nimport { Button } from \"../../atoms\";\r\nimport { InfoAboutAlgoritmApi } from \"../../molecules\";\r\nimport { $code, handleChangeCode } from \"./model\";\r\nimport { codeString } from \"./code-string\";\r\n\r\nconst AlgoritmController = newAlg;\r\nconst restorePath = newRe;\r\nconst canVisitedVertex = newCan;\r\nconst graphControll = newGraph;\r\n\r\nlet foo = null;\r\n\r\nexport function CodeArea({ onRequestClose }) {\r\n  const code = useStore($code);\r\n\r\n  const handleChangeAlgoritm = React.useCallback(() => {\r\n    foo = new Function(\r\n      \"AlgoritmController\",\r\n      \"restorePath\",\r\n      \"canVisitedVertex\",\r\n      \"graphControll\",\r\n      `return ${code}`\r\n    );\r\n\r\n    addCustomAlgoritm(\r\n      foo(AlgoritmController, restorePath, canVisitedVertex, graphControll)\r\n    );\r\n\r\n    onRequestClose();\r\n  }, [onRequestClose, code]);\r\n\r\n  return (\r\n    <>\r\n      <InfoAboutAlgoritmApi codeString={codeString} />\r\n      <textarea\r\n        style={{ height: \"200px\", width: \"100%\" }}\r\n        onChange={(e) => handleChangeCode(e.target.value)}\r\n        value={code}\r\n      />\r\n      <Button onClick={handleChangeAlgoritm}>Сохранить</Button>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useStore } from \"effector-react\";\r\nimport Draggable from \"react-draggable\";\r\nimport { sample, createStore } from \"effector\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { GrResume, GrClear, GrPlay, GrPause } from \"react-icons/gr\";\r\nimport { renderCanvas } from \"./canvas\";\r\nimport {\r\n  setGameStatus,\r\n  gameStatus,\r\n  $gameState,\r\n  $path,\r\n  endGame,\r\n  $currentTimer,\r\n  setTimer,\r\n  checkGameStatus,\r\n} from \"./game\";\r\nimport {\r\n  $algoritms,\r\n  selectAlgoritm,\r\n  $currentAlgoritm,\r\n} from \"./algoritms/model\";\r\nimport \"./styles.css\";\r\nimport { InfoDraggable } from \"./gui/ui/organisms/info-block\";\r\nimport { FlexContainer, Left } from \"./gui/ui/containers\";\r\nimport { $canMoveDiagonal, changeDirection } from \"./graph\";\r\nimport { Button, Switch } from \"./gui/ui/atoms\";\r\nimport { CodeArea } from \"./gui/ui/organisms/code-area\";\r\nimport { ModalWrapper, SelectBarrierType } from \"./gui/ui/molecules\";\r\nimport _ from \"lodash\";\r\nconst $store = createStore({});\r\n\r\nsample({\r\n  source: $path,\r\n  clock: endGame,\r\n  target: $store,\r\n});\r\n\r\nexport default function App() {\r\n  const algoritms = useStore($algoritms);\r\n  const currentAlgoritm = useStore($currentAlgoritm);\r\n  const gameState = useStore($gameState);\r\n  const store = useStore($store);\r\n  const currentTimer = useStore($currentTimer);\r\n  const canMoveDiagonal = useStore($canMoveDiagonal);\r\n  const [isOpen, setOpen] = React.useState(false);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Draggable disabled>\r\n        <div className=\"select-bar\">\r\n          <h2 className=\"select-bar_title\">Информация:</h2>\r\n          <div className=\"info-wrapper\">\r\n            <h3 className=\"select-bar_info\">\r\n              Количество итераций: <span>{store?.count || 0}</span>\r\n            </h3>\r\n            <h3 className=\"select-bar_info\">\r\n              Время прохождения:\r\n              <span> {store?.timeEnd?.toFixed(4) || 0} ms</span>\r\n            </h3>\r\n            <h3 className=\"select-bar_info\">\r\n              Длина пути: <span>{store?.path?.length || 0}</span>\r\n            </h3>\r\n          </div>\r\n          <h2 className=\"select-bar_title\">Выбирите алгоритм:</h2>\r\n          <ul>\r\n            {algoritms.map((algoritm, index) => (\r\n              <li\r\n                onClick={() => {\r\n                  selectAlgoritm(algoritm.name);\r\n                  if (algoritm.modal) {\r\n                    setOpen(true);\r\n                  }\r\n                }}\r\n                className={currentAlgoritm === algoritm.name ? \"isActive\" : \"\"}\r\n                key={algoritm.name}\r\n              >\r\n                {algoritm.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div className=\"btn-wrapper\">\r\n            {checkGameStatus(gameState, [\r\n              gameStatus.START,\r\n              gameStatus.PAUSE,\r\n              gameStatus.RESUME,\r\n            ]) ? (\r\n              !checkGameStatus(gameState, [gameStatus.PAUSE]) ? (\r\n                <Button\r\n                  onClick={() => setGameStatus(gameStatus.PAUSE)}\r\n                  icon={GrPause}\r\n                >\r\n                  Пауза\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  onClick={() => setGameStatus(gameStatus.RESUME)}\r\n                  icon={GrResume}\r\n                >\r\n                  Продолжить\r\n                </Button>\r\n              )\r\n            ) : (\r\n              <Button\r\n                onClick={() => setGameStatus(gameStatus.START)}\r\n                icon={GrPlay}\r\n              >\r\n                Старт\r\n              </Button>\r\n            )}\r\n            <Button\r\n              onClick={() => setGameStatus(gameStatus.CLEAR)}\r\n              icon={GrClear}\r\n            >\r\n              Очистить\r\n            </Button>\r\n          </div>\r\n          <div className=\"info-wrapper\" style={{ borderTop: \"2px solid #fff\" }}>\r\n            <FlexContainer>\r\n              <Left>\r\n                <TextField\r\n                  type=\"number\"\r\n                  value={currentTimer}\r\n                  onChange={({ target }) => {\r\n                    setTimer(parseInt(target.value));\r\n                  }}\r\n                />\r\n              </Left>\r\n              <h3 className=\"select-bar_info\">Скорость</h3>\r\n            </FlexContainer>\r\n\r\n            <Switch\r\n              checked={canMoveDiagonal}\r\n              onChange={changeDirection}\r\n              label=\"Проход по диагонали\"\r\n            />\r\n            <SelectBarrierType />\r\n          </div>\r\n        </div>\r\n      </Draggable>\r\n      <InfoDraggable />\r\n\r\n      <CustomAlgoritmModal isOpen={isOpen} setOpen={setOpen} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst CustomAlgoritmModal = ({ isOpen, setOpen }) => {\r\n  return (\r\n    <ModalWrapper\r\n      width={700}\r\n      isOpen={isOpen}\r\n      onRequestClose={() => setOpen(false)}\r\n    >\r\n      <CodeArea onRequestClose={() => setOpen(false)} />\r\n    </ModalWrapper>\r\n  );\r\n};\r\n","import { createGlobalStyle, css } from \"styled-components\";\r\nimport {\r\n  StyledRootWrapper,\r\n  StyledInner,\r\n} from \"./gui/ui/molecules/modal-wrapper\";\r\n\r\nconst globalCss = css`\r\n  .ReactModal__Body--open {\r\n    overflow: hidden;\r\n  }\r\n\r\n  .ReactModal__Content--after-open {\r\n    border: none !important;\r\n    background: transparent !important;\r\n    ${StyledInner} {\r\n      overflow: hidden;\r\n      opacity: 1;\r\n      transform: translateX(0);\r\n    }\r\n  }\r\n  .ReactModal__Content--before-close {\r\n    ${StyledInner} {\r\n      transform: translateX(100px);\r\n      opacity: 0;\r\n    }\r\n  }\r\n  .ReactModal__Overlay--after-open {\r\n    background-color: transparent !important;\r\n    ${StyledRootWrapper} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n  .ReactModal__Overlay--before-close {\r\n    ${StyledRootWrapper} {\r\n      opacity: 0;\r\n    }\r\n  }\r\n\r\n  .MuiInputBase-input {\r\n    color: #fff;\r\n  }\r\n\r\n  .MuiInput-underline:before,\r\n  .MuiInput-underline:after {\r\n    border-bottom: 1px solid #fff;\r\n  }\r\n`;\r\nexport const GlobalModalStyles = createGlobalStyle`${globalCss}`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { GlobalModalStyles } from \"./global-css\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n    <GlobalModalStyles />\r\n  </>,\r\n  rootElement\r\n);\r\n\r\nexport * from \"./algoritms\";\r\nexport * from \"./graph\";\r\nexport * from \"./game\";\r\n"],"sourceRoot":""}